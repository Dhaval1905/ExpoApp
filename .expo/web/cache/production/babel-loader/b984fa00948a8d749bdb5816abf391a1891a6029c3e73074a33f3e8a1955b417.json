{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import View from\"react-native-web/dist/exports/View\";import{DarkTheme,DefaultTheme,Provider as PaperProvider}from'react-native-paper';import{store,persistor}from\"./src/redux/store\";import MainStack from\"./src/routes/MainStack\";import{styling}from\"./src/theme\";import{Provider}from'react-redux';import{PersistGate}from'redux-persist/integration/react';import FlashMessage from'react-native-flash-message';import{Loader}from\"./src/components\";import*as SplashScreen from'expo-splash-screen';import{useFonts,Poppins_400Regular,Poppins_500Medium,Poppins_700Bold,Poppins_300Light}from\"@expo-google-fonts/poppins\";import AppLoading from'expo-app-loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";SplashScreen.preventAutoHideAsync();var App=function App(){var apptheme=useColorScheme();var styles=styling(apptheme);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),appIsReady=_useState2[0],setAppIsReady=_useState2[1];var _useFonts=useFonts({\"Poppins-Light\":Poppins_300Light,\"Poppins-Regular\":Poppins_400Regular,\"Poppins-Medium\":Poppins_500Medium,\"Poppins-Bold\":Poppins_700Bold}),_useFonts2=_slicedToArray(_useFonts,1),fontsLoaded=_useFonts2[0];useEffect(function(){var _prepare;function prepare(){return(_prepare=_prepare||_asyncToGenerator(function*(){try{yield SplashScreen.preventAutoHideAsync();yield new Promise(function(resolve){return setTimeout(resolve,2000);});}catch(e){console.warn(e);}finally{setAppIsReady(true);}})).apply(this,arguments);}prepare();},[]);var onLayoutRootView=useCallback(_asyncToGenerator(function*(){if(appIsReady){yield SplashScreen.hideAsync();}}),[appIsReady]);if(!fontsLoaded){return _jsx(AppLoading,{});}if(!appIsReady){return null;}return _jsx(View,{style:styles.screen,onLayout:onLayoutRootView,children:_jsx(Provider,{store:store,children:_jsx(PersistGate,{loading:null,persistor:persistor,children:_jsxs(PaperProvider,{theme:DefaultTheme,children:[_jsx(FlashMessage,{position:'top',floating:true,duration:4000}),_jsx(MainStack,{}),_jsx(Loader,{theme:apptheme})]})})})});};export default App;","map":{"version":3,"names":["React","useCallback","useEffect","useState","SafeAreaView","useColorScheme","View","DarkTheme","DefaultTheme","Provider","PaperProvider","store","persistor","MainStack","styling","PersistGate","FlashMessage","Loader","SplashScreen","useFonts","Poppins_400Regular","Poppins_500Medium","Poppins_700Bold","Poppins_300Light","AppLoading","jsx","_jsx","jsxs","_jsxs","preventAutoHideAsync","App","apptheme","styles","_useState","_useState2","_slicedToArray","appIsReady","setAppIsReady","_useFonts","_useFonts2","fontsLoaded","_prepare","prepare","_asyncToGenerator","Promise","resolve","setTimeout","e","console","warn","apply","arguments","onLayoutRootView","hideAsync","style","screen","onLayout","children","loading","theme","position","floating","duration"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { SafeAreaView, useColorScheme, View } from 'react-native';\nimport {\n  DarkTheme,\n  DefaultTheme,\n  Provider as PaperProvider,\n} from 'react-native-paper';\nimport { store, persistor } from './src/redux/store';\n// import MainStack from './src/routes';\nimport MainStack from './src/routes/MainStack'\nimport { styling } from './src/theme';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport FlashMessage from 'react-native-flash-message';\nimport { Loader } from './src/components';\nimport * as SplashScreen from 'expo-splash-screen';\nimport {\n  useFonts,\n  Poppins_400Regular,\n  Poppins_500Medium,\n  Poppins_700Bold,\n  Poppins_300Light\n} from \"@expo-google-fonts/poppins\";\nimport AppLoading from 'expo-app-loading';\n// import Toast, { DURATION } from 'react-native-easy-toast'\n\nSplashScreen.preventAutoHideAsync();\n\nconst App = () => {\n  const apptheme = useColorScheme();\n  const styles = styling(apptheme);\n  const [appIsReady, setAppIsReady] = useState(false)\n\n  let [fontsLoaded] = useFonts({\n    \"Poppins-Light\": Poppins_300Light,\n    \"Poppins-Regular\": Poppins_400Regular,\n    \"Poppins-Medium\": Poppins_500Medium,\n    \"Poppins-Bold\": Poppins_700Bold,\n  });\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        // Keep the splash screen visible while we fetch resources\n        await SplashScreen.preventAutoHideAsync();\n        // Pre-load fonts, make any API calls you need to do here\n        // await Font.loadAsync(Entypo.font);\n        // Artificially delay for two seconds to simulate a slow loading\n        // experience. Please remove this if you copy and paste the code!\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        // Tell the application to render\n        setAppIsReady(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (appIsReady) {\n      // This tells the splash screen to hide immediately! If we call this after\n      // `setAppIsReady`, then we may see a blank screen while the app is\n      // loading its initial state and rendering its first pixels. So instead,\n      // we hide the splash screen once we know the root view has already\n      // performed layout.\n      await SplashScreen.hideAsync();\n    }\n  }, [appIsReady]);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  if (!appIsReady) {\n    return null;\n  }\n\n  // const [isLoaded] = useFonts({\n  //   \"Poppins-Bold\": require('./assets/fonts/Poppins-Bold.tff'),\n  //   \"light\": require('./assets/fonts/Poppins-Light.tff'),\n  //   \"medium\": require('./assets/fonts/Poppins-Medium.tff'),\n  //   \"regular\": require('./assets/fonts/Poppins-Regular.tff'),\n  // });\n\n  // const handleOnLayout = useCallback(async () => {\n  //   if (isLoaded) {\n  //     await SplashScreen.hideAsync(); //hide the splashscreen\n  //   }\n  // }, [isLoaded]);\n\n  return (\n    // <SafeAreaView >\n    <View style={styles.screen} onLayout={onLayoutRootView}>\n      <Provider store={store} >\n        <PersistGate loading={null} persistor={persistor}>\n          <PaperProvider theme={DefaultTheme}>\n            {/* <Toast ref={(toast) => this.toast = toast} /> */}\n            <FlashMessage position={'top'} floating={true} duration={4000} />\n            <MainStack />\n            <Loader theme={apptheme} />\n          </PaperProvider>\n        </PersistGate>\n      </Provider>\n    </View>\n    // </SafeAreaView>\n  );\n};\n\nexport default App;\n"],"mappings":"wIAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,YAAA,yDAAAC,cAAA,2DAAAC,IAAA,0CAEhE,OACEC,SAAS,CACTC,YAAY,CACZC,QAAQ,GAAI,CAAAC,aAAa,KACpB,oBAAoB,CAC3B,OAASC,KAAK,CAAEC,SAAS,yBAEzB,MAAO,CAAAC,SAAS,8BAChB,OAASC,OAAO,mBAChB,OAASL,QAAQ,KAAQ,aAAa,CACtC,OAASM,WAAW,KAAQ,iCAAiC,CAC7D,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,OAASC,MAAM,wBACf,MAAO,GAAK,CAAAC,YAAY,KAAM,oBAAoB,CAClD,OACEC,QAAQ,CACRC,kBAAkB,CAClBC,iBAAiB,CACjBC,eAAe,CACfC,gBAAgB,KACX,4BAA4B,CACnC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG1CV,YAAY,CAACW,oBAAoB,CAAC,CAAC,CAEnC,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,GAAM,CAAAC,QAAQ,CAAG1B,cAAc,CAAC,CAAC,CACjC,GAAM,CAAA2B,MAAM,CAAGlB,OAAO,CAACiB,QAAQ,CAAC,CAChC,IAAAE,SAAA,CAAoC9B,QAAQ,CAAC,KAAK,CAAC,CAAA+B,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAEhC,IAAAI,SAAA,CAAoBnB,QAAQ,CAAC,CAC3B,eAAe,CAAEI,gBAAgB,CACjC,iBAAiB,CAAEH,kBAAkB,CACrC,gBAAgB,CAAEC,iBAAiB,CACnC,cAAc,CAAEC,eAClB,CAAC,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,SAAA,IALGE,WAAW,CAAAD,UAAA,IAOhBrC,SAAS,CAAC,UAAM,KAAAuC,QAAA,SACC,CAAAC,OAAOA,CAAA,SAAAD,QAAA,CAAAA,QAAA,EAAAE,iBAAA,CAAtB,WAAyB,CACvB,GAAI,CAEF,KAAM,CAAAzB,YAAY,CAACW,oBAAoB,CAAC,CAAC,CAKzC,KAAM,IAAI,CAAAe,OAAO,CAAC,SAAAC,OAAO,QAAI,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,CACzD,CAAE,MAAOE,CAAC,CAAE,CACVC,OAAO,CAACC,IAAI,CAACF,CAAC,CAAC,CACjB,CAAC,OAAS,CAERV,aAAa,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,GAAAa,KAAA,MAAAC,SAAA,GAEDT,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAU,gBAAgB,CAAGnD,WAAW,CAAA0C,iBAAA,CAAC,WAAY,CAC/C,GAAIP,UAAU,CAAE,CAMd,KAAM,CAAAlB,YAAY,CAACmC,SAAS,CAAC,CAAC,CAChC,CACF,CAAC,EAAE,CAACjB,UAAU,CAAC,CAAC,CAEhB,GAAI,CAACI,WAAW,CAAE,CAChB,MAAO,CAAAd,IAAA,CAACF,UAAU,GAAE,CAAC,CACvB,CAEA,GAAI,CAACY,UAAU,CAAE,CACf,MAAO,KAAI,CACb,CAeA,MAEE,CAAAV,IAAA,CAACpB,IAAI,EAACgD,KAAK,CAAEtB,MAAM,CAACuB,MAAO,CAACC,QAAQ,CAAEJ,gBAAiB,CAAAK,QAAA,CACrD/B,IAAA,CAACjB,QAAQ,EAACE,KAAK,CAAEA,KAAM,CAAA8C,QAAA,CACrB/B,IAAA,CAACX,WAAW,EAAC2C,OAAO,CAAE,IAAK,CAAC9C,SAAS,CAAEA,SAAU,CAAA6C,QAAA,CAC/C7B,KAAA,CAAClB,aAAa,EAACiD,KAAK,CAAEnD,YAAa,CAAAiD,QAAA,EAEjC/B,IAAA,CAACV,YAAY,EAAC4C,QAAQ,CAAE,KAAM,CAACC,QAAQ,CAAE,IAAK,CAACC,QAAQ,CAAE,IAAK,CAAE,CAAC,CACjEpC,IAAA,CAACb,SAAS,GAAE,CAAC,CACba,IAAA,CAACT,MAAM,EAAC0C,KAAK,CAAE5B,QAAS,CAAE,CAAC,EACd,CAAC,CACL,CAAC,CACN,CAAC,CACP,CAAC,CAGX,CAAC,CAED,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}