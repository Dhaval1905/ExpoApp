{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useCallback,useRef,useEffect,useState}from'react';import{askAsync,getAsync}from\"./Permissions\";export function usePermissions(type){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var isMounted=useRef(true);var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _options$ask=options.ask,ask=_options$ask===void 0?false:_options$ask,_options$get=options.get,get=_options$get===void 0?true:_options$get;var types=Array.isArray(type)?type:[type];var askPermissions=useCallback(function(){return askAsync.apply(void 0,_toConsumableArray(types)).then(function(response){if(isMounted.current){setData(response);}});},[type]);var getPermissions=useCallback(function(){return getAsync.apply(void 0,_toConsumableArray(types)).then(function(response){if(isMounted.current){setData(response);}});},[type]);useEffect(function(){if(ask){askPermissions();}if(!ask&&get){getPermissions();}},[ask,askPermissions,get,getPermissions]);useEffect(function(){isMounted.current=true;return function(){isMounted.current=false;};},[]);return[data,askPermissions,getPermissions];}","map":{"version":3,"names":["useCallback","useRef","useEffect","useState","askAsync","getAsync","usePermissions","type","options","arguments","length","undefined","isMounted","_useState","_useState2","_slicedToArray","data","setData","_options$ask","ask","_options$get","get","types","Array","isArray","askPermissions","apply","_toConsumableArray","then","response","current","getPermissions"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/expo-permissions/src/PermissionsHooks.ts"],"sourcesContent":["import { useCallback, useRef, useEffect, useState } from 'react';\n\nimport { askAsync, getAsync } from './Permissions';\nimport { PermissionResponse, PermissionType } from './Permissions.types';\n\n/**\n * Get or ask permission for protected functionality within the app.\n * It returns the permission response after fetching or asking it.\n * The hook fetches the permissions when rendered, by default.\n * To ask the user permission, use the `askPermission` callback or `ask` option.\n *\n * @see https://docs.expo.dev/versions/latest/sdk/permissions/\n * @example\n * ```tsx\n * const [permission, askPermission, getPermission] = usePermissions(Permissions.CAMERA);\n *\n * return permission?.granted\n *   ? <Camera ... />\n *   : <Button onPress={askPermission} />;\n * ```\n */\nexport function usePermissions(\n  type: PermissionType | PermissionType[],\n  options: PermissionsOptions = {}\n): [PermissionResponse | undefined, () => Promise<void>, () => Promise<void>] {\n  const isMounted = useRef(true);\n  const [data, setData] = useState<PermissionResponse>();\n  const { ask = false, get = true } = options;\n  const types = Array.isArray(type) ? type : [type];\n\n  // note: its intentional to listen to `type`, not `types`.\n  // when `type` is casted to an array, it possible creates a new one on every render.\n  // to prevent unnecessary function instances we need to listen to the \"raw\" value.\n\n  const askPermissions = useCallback(\n    () =>\n      askAsync(...types).then((response) => {\n        if (isMounted.current) {\n          setData(response);\n        }\n      }),\n    [type]\n  );\n\n  const getPermissions = useCallback(\n    () =>\n      getAsync(...types).then((response) => {\n        if (isMounted.current) {\n          setData(response);\n        }\n      }),\n    [type]\n  );\n\n  useEffect(() => {\n    if (ask) {\n      askPermissions();\n    }\n\n    if (!ask && get) {\n      getPermissions();\n    }\n  }, [ask, askPermissions, get, getPermissions]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return [data, askPermissions, getPermissions];\n}\n\nexport interface PermissionsOptions {\n  /** If it should ask the permissions when mounted, defaults to `false` */\n  ask?: boolean;\n  /** If it should fetch information about the permissions when mounted, defaults to `true` */\n  get?: boolean;\n}\n"],"mappings":"0IAAA,OAASA,WAAW,CAAEC,MAAM,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAEhE,OAASC,QAAQ,CAAEC,QAAQ,qBAmB3B,MAAM,SAAU,CAAAC,cAAcA,CAC5BC,IAAuC,CACP,IAAhC,CAAAC,OAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAA8B,EAAE,CAEhC,GAAM,CAAAG,SAAS,CAAGX,MAAM,CAAC,IAAI,CAAC,CAC9B,IAAAY,SAAA,CAAwBV,QAAQ,EAAsB,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,YAAA,CAAoCV,OAAO,CAAnCW,GAAG,CAAHA,GAAG,CAAAD,YAAA,UAAG,KAAK,CAAAA,YAAA,CAAAE,YAAA,CAAiBZ,OAAO,CAAtBa,GAAG,CAAHA,GAAG,CAAAD,YAAA,UAAG,IAAI,CAAAA,YAAA,CAC/B,GAAM,CAAAE,KAAK,CAAGC,KAAK,CAACC,OAAO,CAACjB,IAAI,CAAC,CAAGA,IAAI,CAAG,CAACA,IAAI,CAAC,CAMjD,GAAM,CAAAkB,cAAc,CAAGzB,WAAW,CAChC,iBACE,CAAAI,QAAQ,CAAAsB,KAAA,QAAAC,kBAAA,CAAIL,KAAK,EAAC,CAACM,IAAI,CAAC,SAACC,QAAQ,CAAI,CACnC,GAAIjB,SAAS,CAACkB,OAAO,CAAE,CACrBb,OAAO,CAACY,QAAQ,CAAC,C,CAErB,CAAC,CAAC,GACJ,CAACtB,IAAI,CAAC,CACP,CAED,GAAM,CAAAwB,cAAc,CAAG/B,WAAW,CAChC,iBACE,CAAAK,QAAQ,CAAAqB,KAAA,QAAAC,kBAAA,CAAIL,KAAK,EAAC,CAACM,IAAI,CAAC,SAACC,QAAQ,CAAI,CACnC,GAAIjB,SAAS,CAACkB,OAAO,CAAE,CACrBb,OAAO,CAACY,QAAQ,CAAC,C,CAErB,CAAC,CAAC,GACJ,CAACtB,IAAI,CAAC,CACP,CAEDL,SAAS,CAAC,UAAK,CACb,GAAIiB,GAAG,CAAE,CACPM,cAAc,EAAE,C,CAGlB,GAAI,CAACN,GAAG,EAAIE,GAAG,CAAE,CACfU,cAAc,EAAE,C,CAEpB,CAAC,CAAE,CAACZ,GAAG,CAAEM,cAAc,CAAEJ,GAAG,CAAEU,cAAc,CAAC,CAAC,CAE9C7B,SAAS,CAAC,UAAK,CACbU,SAAS,CAACkB,OAAO,CAAG,IAAI,CACxB,MAAO,WAAK,CACVlB,SAAS,CAACkB,OAAO,CAAG,KAAK,CAC3B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACd,IAAI,CAAES,cAAc,CAAEM,cAAc,CAAC,CAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}