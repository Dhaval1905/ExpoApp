{"ast":null,"code":"import{useRoute}from'@react-navigation/native';import React from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{TextInput}from'react-native-paper';import{CustomButton,CustomHeader}from\"../../components\";import{Strings}from\"../../constants\";import{Colors}from\"../../theme\";import styling from\"./EditBusinessAddressStyle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditBusinessAddressScreen=function EditBusinessAddressScreen(_ref){var _route$params,_Strings$businessAddr,_Colors$theme,_Strings$unitSuite,_Colors$theme2,_Strings$city,_Colors$theme3,_Strings$state,_Colors$theme4,_Strings$zip,_Colors$theme5;var navigation=_ref.navigation;var route=useRoute();var theme=route==null?void 0:(_route$params=route.params)==null?void 0:_route$params.theme;var styles=styling(theme);return _jsxs(View,{style:styles.screen,children:[_jsx(CustomHeader,{theme:theme,headerTitle:Strings.editBusinessAddress,onPressBack:function onPressBack(){return navigation.goBack();}}),_jsx(View,{style:styles.container,children:_jsxs(View,{style:styles.card,children:[_jsx(Text,{style:styles.cardTitle,children:Strings.businessAddressQuestion}),_jsx(TextInput,{label:(_Strings$businessAddr=Strings.businessAddress)==null?void 0:_Strings$businessAddr.toUpperCase(),mode:'outlined',theme:{roundness:45,colors:'#000'},style:styles.textInput,activeOutlineColor:(_Colors$theme=Colors[theme])==null?void 0:_Colors$theme.grey500}),_jsx(TextInput,{label:(_Strings$unitSuite=Strings.unitSuite)==null?void 0:_Strings$unitSuite.toUpperCase(),mode:'outlined',theme:{roundness:45,colors:'#000'},style:styles.textInput,activeOutlineColor:(_Colors$theme2=Colors[theme])==null?void 0:_Colors$theme2.grey500}),_jsx(TextInput,{label:(_Strings$city=Strings.city)==null?void 0:_Strings$city.toUpperCase(),mode:'outlined',theme:{roundness:45,colors:'#000'},style:styles.textInput,activeOutlineColor:(_Colors$theme3=Colors[theme])==null?void 0:_Colors$theme3.grey500}),_jsx(TextInput,{label:(_Strings$state=Strings.state)==null?void 0:_Strings$state.toUpperCase(),mode:'outlined',theme:{roundness:45,colors:'#000'},style:styles.textInput,activeOutlineColor:(_Colors$theme4=Colors[theme])==null?void 0:_Colors$theme4.grey500}),_jsx(TextInput,{label:(_Strings$zip=Strings.zip)==null?void 0:_Strings$zip.toUpperCase(),mode:'outlined',theme:{roundness:45,colors:'#000'},style:styles.textInput,activeOutlineColor:(_Colors$theme5=Colors[theme])==null?void 0:_Colors$theme5.grey500})]})}),_jsx(View,{style:styles.bottomView,children:_jsx(CustomButton,{theme:theme,buttonTitle:Strings.continue,buttonStyle:styles.continueButton})})]});};export default EditBusinessAddressScreen;","map":{"version":3,"names":["useRoute","React","Text","View","TextInput","CustomButton","CustomHeader","Strings","Colors","styling","jsx","_jsx","jsxs","_jsxs","EditBusinessAddressScreen","_ref","_route$params","_Strings$businessAddr","_Colors$theme","_Strings$unitSuite","_Colors$theme2","_Strings$city","_Colors$theme3","_Strings$state","_Colors$theme4","_Strings$zip","_Colors$theme5","navigation","route","theme","params","styles","style","screen","children","headerTitle","editBusinessAddress","onPressBack","goBack","container","card","cardTitle","businessAddressQuestion","label","businessAddress","toUpperCase","mode","roundness","colors","textInput","activeOutlineColor","grey500","unitSuite","city","state","zip","bottomView","buttonTitle","continue","buttonStyle","continueButton"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/EditBusinessAddress/EditBusinessAddressScreen.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport React from 'react';\nimport {Text, View} from 'react-native';\nimport {TextInput} from 'react-native-paper';\nimport {CustomButton, CustomHeader} from '../../components';\nimport {Strings} from '../../constants';\nimport {Colors} from '../../theme';\nimport styling from './EditBusinessAddressStyle';\n\nconst EditBusinessAddressScreen = ({navigation}) => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={Strings.editBusinessAddress}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.container}>\n        <View style={styles.card}>\n          <Text style={styles.cardTitle}>\n            {Strings.businessAddressQuestion}\n          </Text>\n          <TextInput\n            label={Strings.businessAddress?.toUpperCase()}\n            mode={'outlined'}\n            theme={{roundness:45,colors:'#000'}}\n            style={styles.textInput}\n            activeOutlineColor={Colors[theme]?.grey500}\n          />\n          <TextInput\n            label={Strings.unitSuite?.toUpperCase()}\n            mode={'outlined'}\n            theme={{roundness:45,colors:'#000'}}\n            style={styles.textInput}\n            activeOutlineColor={Colors[theme]?.grey500}\n          />\n            <TextInput\n              label={Strings.city?.toUpperCase()}\n              mode={'outlined'}\n              theme={{roundness:45,colors:'#000'}}\n              style={styles.textInput}\n              activeOutlineColor={Colors[theme]?.grey500}\n            />\n            <TextInput\n              label={Strings.state?.toUpperCase()}\n              mode={'outlined'}\n              theme={{roundness:45,colors:'#000'}}\n              style={styles.textInput}\n              activeOutlineColor={Colors[theme]?.grey500}\n            />\n            <TextInput\n              label={Strings.zip?.toUpperCase()}\n              mode={'outlined'}\n              theme={{roundness:45,colors:'#000'}}\n              style={styles.textInput}\n              activeOutlineColor={Colors[theme]?.grey500}\n            />\n        </View>\n      </View>\n      <View style={styles.bottomView}>\n        <CustomButton\n          theme={theme}\n          buttonTitle={Strings.continue}\n          buttonStyle={styles.continueButton}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default EditBusinessAddressScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}