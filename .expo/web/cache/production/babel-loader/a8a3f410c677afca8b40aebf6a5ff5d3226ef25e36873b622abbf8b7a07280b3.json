{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Platform from\"react-native-web/dist/exports/Platform\";import FlatList from\"react-native-web/dist/exports/FlatList\";import SectionList from\"react-native-web/dist/exports/SectionList\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import{ScrollView as GHScrollView}from'react-native-gesture-handler';import createNavigationAwareScrollable from\"./createNavigationAwareScrollable\";import invariant from\"./utils/invariant\";var WrappedScrollView;if(Platform.OS==='android'){WrappedScrollView=createNavigationAwareScrollable(ScrollView);}else{WrappedScrollView=createNavigationAwareScrollable(GHScrollView);}function propsMaybeWithRefreshControl(props){var onRefresh=props.onRefresh;if(onRefresh){invariant(typeof props.refreshing==='boolean','`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `'+JSON.stringify(props.refreshing)+'`');return _objectSpread(_objectSpread({},props),{},{refreshControl:props.refreshControl==null?React.createElement(RefreshControl,{refreshing:props.refreshing,onRefresh:onRefresh,progressViewOffset:props.progressViewOffset}):props.refreshControl});}else{return props;}}var WrappedFlatList=React.forwardRef(function(props,ref){return React.createElement(FlatList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(props){return React.createElement(WrappedScrollView,propsMaybeWithRefreshControl(props));}}));});var WrappedSectionList=React.forwardRef(function(props,ref){return React.createElement(SectionList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(props){return React.createElement(WrappedScrollView,propsMaybeWithRefreshControl(props));}}));});export{WrappedScrollView as ScrollView,WrappedFlatList as FlatList,WrappedSectionList as SectionList};","map":{"version":3,"names":["React","ScrollView","Platform","FlatList","SectionList","RefreshControl","GHScrollView","createNavigationAwareScrollable","invariant","WrappedScrollView","OS","propsMaybeWithRefreshControl","props","onRefresh","refreshing","JSON","stringify","_objectSpread","refreshControl","createElement","progressViewOffset","WrappedFlatList","forwardRef","ref","_extends","renderScrollComponent","WrappedSectionList"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-navigation/node_modules/@react-navigation/native/lib/module/Scrollables.js"],"sourcesContent":["import * as React from 'react';\nimport {\n  ScrollView,\n  Platform,\n  FlatList,\n  SectionList,\n  RefreshControl,\n} from 'react-native';\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\nimport createNavigationAwareScrollable from './createNavigationAwareScrollable';\nimport invariant from './utils/invariant';\n\nlet WrappedScrollView;\nif (Platform.OS === 'android') {\n  // @todo: use GHScrollView again when\n  // https://github.com/kmagiera/react-native-gesture-handler/issues/560 has\n  // been fixed.\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\n} else {\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\n}\n\nfunction propsMaybeWithRefreshControl(props) {\n  const onRefresh = props.onRefresh;\n  if (onRefresh) {\n    invariant(\n      typeof props.refreshing === 'boolean',\n      '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n        JSON.stringify(props.refreshing) +\n        '`'\n    );\n    return {\n      ...props,\n      refreshControl:\n        props.refreshControl == null ? (\n          <RefreshControl\n            refreshing={props.refreshing}\n            onRefresh={onRefresh}\n            progressViewOffset={props.progressViewOffset}\n          />\n        ) : (\n          props.refreshControl\n        ),\n    };\n  } else {\n    return props;\n  }\n}\n\nconst WrappedFlatList = React.forwardRef((props, ref) => (\n  <FlatList\n    ref={ref}\n    {...props}\n    renderScrollComponent={(props) => (\n      <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />\n    )}\n  />\n));\n\nconst WrappedSectionList = React.forwardRef((props, ref) => (\n  <SectionList\n    ref={ref}\n    {...props}\n    renderScrollComponent={(props) => (\n      <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />\n    )}\n  />\n));\n\nexport {\n  WrappedScrollView as ScrollView,\n  WrappedFlatList as FlatList,\n  WrappedSectionList as SectionList,\n};\n"],"mappings":"s8BAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,UAAA,uDAAAC,QAAA,qDAAAC,QAAA,qDAAAC,WAAA,wDAAAC,cAAA,oDAQA,OAASJ,UAAU,GAAI,CAAAK,YAAvB,KAA2C,8BAA3C,CACA,MAAO,CAAAC,+BAAP,yCACA,MAAO,CAAAC,SAAP,yBAEA,GAAI,CAAAC,iBAAJ,CACA,GAAIP,QAAQ,CAACQ,EAAT,GAAgB,SAApB,CAA+B,CAI7BD,iBAAiB,CAAGF,+BAA+B,CAACN,UAAD,CAAnD,CACD,CALD,IAKO,CACLQ,iBAAiB,CAAGF,+BAA+B,CAACD,YAAD,CAAnD,CACD,CAED,QAAS,CAAAK,4BAATA,CAAsCC,KAAtC,CAA6C,CAC3C,GAAM,CAAAC,SAAS,CAAGD,KAAK,CAACC,SAAxB,CACA,GAAIA,SAAJ,CAAe,CACbL,SAAS,CACP,MAAO,CAAAI,KAAK,CAACE,UAAb,GAA4B,SADrB,CAEP,oFACEC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACE,UAArB,CADF,CAEE,GAJK,CAAT,CAMA,OAAAG,aAAA,CAAAA,aAAA,IACKL,KADE,MAELM,cAAc,CACZN,KAAK,CAACM,cAAN,EAAwB,IAAxB,CACElB,KAAA,CAAAmB,aAAA,CAACd,cAAD,EACES,UAAU,CAAEF,KAAK,CAACE,UADpB,CAEED,SAAS,CAAEA,SAFb,CAGEO,kBAAkB,CAAER,KAAK,CAACQ,kBAH5B,EADF,CAOER,KAAK,CAACM,cAAA,GAGb,CApBD,IAoBO,CACL,MAAO,CAAAN,KAAP,CACD,CACF,CAED,GAAM,CAAAS,eAAe,CAAGrB,KAAK,CAACsB,UAAN,CAAiB,SAACV,KAAD,CAAQW,GAAR,QACvC,CAAAvB,KAAA,CAAAmB,aAAA,CAAChB,QAAD,CAAAqB,QAAA,EACED,GAAG,CAAEA,GADP,EAEMX,KAFN,EAGEa,qBAAqB,CAAG,SAAAA,sBAAAb,KAAD,QACrB,CAAAZ,KAAA,CAAAmB,aAAA,CAACV,iBAAD,CAAuBE,4BAA4B,CAACC,KAAD,CAAnD,GAJJ,GADsB,GAAxB,CAUA,GAAM,CAAAc,kBAAkB,CAAG1B,KAAK,CAACsB,UAAN,CAAiB,SAACV,KAAD,CAAQW,GAAR,QAC1C,CAAAvB,KAAA,CAAAmB,aAAA,CAACf,WAAD,CAAAoB,QAAA,EACED,GAAG,CAAEA,GADP,EAEMX,KAFN,EAGEa,qBAAqB,CAAG,SAAAA,sBAAAb,KAAD,QACrB,CAAAZ,KAAA,CAAAmB,aAAA,CAACV,iBAAD,CAAuBE,4BAA4B,CAACC,KAAD,CAAnD,GAJJ,GADyB,GAA3B,CAUA,OACEH,iBAAiB,GAAI,CAAAR,UADvB,CAEEoB,eAAe,GAAI,CAAAlB,QAFrB,CAGEuB,kBAAkB,GAAI,CAAAtB,WAHxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}