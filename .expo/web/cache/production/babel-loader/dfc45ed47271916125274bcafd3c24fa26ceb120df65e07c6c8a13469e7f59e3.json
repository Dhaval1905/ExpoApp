{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"elevation\",\"onLongPress\",\"onPress\",\"mode\",\"children\",\"style\",\"theme\",\"testID\",\"accessible\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{white,black}from\"../../styles/colors\";import CardContent from\"./CardContent\";import CardActions from\"./CardActions\";import CardCover from\"./CardCover\";import CardTitle from\"./CardTitle\";import Surface from\"../Surface\";import{withTheme}from\"../../core/theming\";var Card=function Card(_ref){var _ref$elevation=_ref.elevation,cardElevation=_ref$elevation===void 0?1:_ref$elevation,onLongPress=_ref.onLongPress,onPress=_ref.onPress,_ref$mode=_ref.mode,cardMode=_ref$mode===void 0?'elevated':_ref$mode,children=_ref.children,style=_ref.style,theme=_ref.theme,testID=_ref.testID,accessible=_ref.accessible,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(cardElevation)),elevation=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(cardElevation)),elevationDarkAdaptive=_React$useRef2.current;var animation=theme.animation,dark=theme.dark,mode=theme.mode,roundness=theme.roundness;var prevDarkRef=React.useRef(dark);React.useEffect(function(){prevDarkRef.current=dark;});var prevDark=prevDarkRef.current;var isAdaptiveMode=mode==='adaptive';var animationDuration=150*animation.scale;React.useEffect(function(){if(dark&&isAdaptiveMode&&!prevDark){elevation.setValue(cardElevation);elevationDarkAdaptive.setValue(cardElevation);}},[prevDark,dark,isAdaptiveMode,cardElevation,elevation,elevationDarkAdaptive]);var runElevationAnimation=function runElevationAnimation(pressType){var isPressTypeIn=pressType==='in';if(dark&&isAdaptiveMode){Animated.timing(elevationDarkAdaptive,{toValue:isPressTypeIn?8:cardElevation,duration:animationDuration,useNativeDriver:false}).start();}else{Animated.timing(elevation,{toValue:isPressTypeIn?8:cardElevation,duration:animationDuration,useNativeDriver:true}).start();}};var handlePressIn=function handlePressIn(){runElevationAnimation('in');};var handlePressOut=function handlePressOut(){runElevationAnimation('out');};var total=React.Children.count(children);var siblings=React.Children.map(children,function(child){return React.isValidElement(child)&&child.type?child.type.displayName:null;});var borderColor=color(dark?white:black).alpha(0.12).rgb().string();var computedElevation=dark&&isAdaptiveMode?elevationDarkAdaptive:elevation;return React.createElement(Surface,_extends({style:[{borderRadius:roundness,elevation:computedElevation,borderColor:borderColor},cardMode==='outlined'?styles.outlined:{},style],theme:theme},rest),React.createElement(TouchableWithoutFeedback,{delayPressIn:0,disabled:!(onPress||onLongPress),onLongPress:onLongPress,onPress:onPress,onPressIn:onPress||onLongPress?handlePressIn:undefined,onPressOut:onPress||onLongPress?handlePressOut:undefined,testID:testID,accessible:accessible},React.createElement(View,{style:styles.innerContainer},React.Children.map(children,function(child,index){return React.isValidElement(child)?React.cloneElement(child,{index:index,total:total,siblings:siblings}):child;}))));};Card.Content=CardContent;Card.Actions=CardActions;Card.Cover=CardCover;Card.Title=CardTitle;var styles=StyleSheet.create({innerContainer:{flexGrow:1,flexShrink:1},outlined:{elevation:0,borderWidth:1}});export default withTheme(Card);","map":{"version":3,"names":["React","StyleSheet","Animated","TouchableWithoutFeedback","View","color","white","black","CardContent","CardActions","CardCover","CardTitle","Surface","withTheme","Card","_ref","_ref$elevation","elevation","cardElevation","onLongPress","onPress","_ref$mode","mode","cardMode","children","style","theme","testID","accessible","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","current","_React$useRef2","elevationDarkAdaptive","animation","dark","roundness","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","borderColor","alpha","rgb","string","computedElevation","createElement","_extends","borderRadius","styles","outlined","delayPressIn","disabled","onPressIn","undefined","onPressOut","innerContainer","index","cloneElement","Content","Actions","Cover","Title","create","flexGrow","flexShrink","borderWidth"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-paper/lib/module/components/Card/Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport { white, black } from '../../styles/colors';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\ntype OutlinedCardProps = {\n  mode: 'outlined';\n  elevation?: never;\n};\n\ntype ElevatedCardProps = {\n  mode?: 'elevated';\n  elevation?: number;\n};\n\ntype HandlePressType = 'in' | 'out';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: never | number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Mode of the Card.\n   * - `elevated` - Card with elevation.\n   * - `outlined` - Card with an outline.\n   */\n  mode?: 'elevated' | 'outlined';\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  mode: cardMode = 'elevated',\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}: (OutlinedCardProps | ElevatedCardProps) & Props) => {\n  // Default animated value\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  // Dark adaptive animated value, used in case of toggling the theme,\n  // it prevents animating the background with native drivers inside Surface\n  const { current: elevationDarkAdaptive } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  const { animation, dark, mode, roundness } = theme;\n\n  const prevDarkRef = React.useRef<boolean>(dark);\n  React.useEffect(() => {\n    prevDarkRef.current = dark;\n  });\n\n  const prevDark = prevDarkRef.current;\n  const isAdaptiveMode = mode === 'adaptive';\n  const animationDuration = 150 * animation.scale;\n\n  React.useEffect(() => {\n    /**\n     * Resets animations values if updating to dark adaptive mode,\n     * otherwise, any card that is in the middle of animation while\n     * toggling the theme will stay at that animated value until\n     * the next press-in\n     */\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [\n    prevDark,\n    dark,\n    isAdaptiveMode,\n    cardElevation,\n    elevation,\n    elevationDarkAdaptive,\n  ]);\n\n  const runElevationAnimation = (pressType: HandlePressType) => {\n    const isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressIn = () => {\n    runElevationAnimation('in');\n  };\n\n  const handlePressOut = () => {\n    runElevationAnimation('out');\n  };\n\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, (child) =>\n    React.isValidElement(child) && child.type\n      ? (child.type as any).displayName\n      : null\n  );\n  const borderColor = color(dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n  const computedElevation =\n    dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n\n  return (\n    <Surface\n      style={[\n        { borderRadius: roundness, elevation: computedElevation, borderColor },\n        cardMode === 'outlined' ? styles.outlined : {},\n        style,\n      ]}\n      theme={theme}\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        delayPressIn={0}\n        disabled={!(onPress || onLongPress)}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        onPressIn={onPress || onLongPress ? handlePressIn : undefined}\n        onPressOut={onPress || onLongPress ? handlePressOut : undefined}\n        testID={testID}\n        accessible={accessible}\n      >\n        <View style={styles.innerContainer}>\n          {React.Children.map(children, (child, index) =>\n            React.isValidElement(child)\n              ? React.cloneElement(child, {\n                  index,\n                  total,\n                  siblings,\n                })\n              : child\n          )}\n        </View>\n      </TouchableWithoutFeedback>\n    </Surface>\n  );\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  outlined: {\n    elevation: 0,\n    borderWidth: 1,\n  },\n});\n\nexport default withTheme(Card);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}