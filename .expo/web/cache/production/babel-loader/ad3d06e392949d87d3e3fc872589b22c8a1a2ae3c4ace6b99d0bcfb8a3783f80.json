{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import invariant from\"../utils/invariant\";import getScreenForRouteName from\"./getScreenForRouteName\";import createConfigGetter from\"./createConfigGetter\";import*as NavigationActions from\"../NavigationActions\";import*as SwitchActions from\"./SwitchActions\";import*as StackActions from\"./StackActions\";import validateRouteConfigMap from\"./validateRouteConfigMap\";import{createPathParser}from\"./pathUtils\";var defaultActionCreators=function defaultActionCreators(){return{};};export default(function(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};validateRouteConfigMap(routeConfigs);var order=config.order||Object.keys(routeConfigs);var getCustomActionCreators=config.getCustomActionCreators||defaultActionCreators;var initialRouteParams=config.initialRouteParams;var initialRouteName=config.initialRouteName||order[0];var backBehavior=config.backBehavior||'none';var resetOnBlur=config.hasOwnProperty('resetOnBlur')?config.resetOnBlur:true;var initialRouteIndex=order.indexOf(initialRouteName);if(initialRouteIndex===-1){throw new Error(\"Invalid initialRouteName '\".concat(initialRouteName,\"'.\")+\"Should be one of \".concat(order.map(function(n){return\"\\\"\".concat(n,\"\\\"\");}).join(', ')));}var childRouters={};order.forEach(function(routeName){childRouters[routeName]=null;var screen=getScreenForRouteName(routeConfigs,routeName);if(screen.router){childRouters[routeName]=screen.router;}});function getParamsForRoute(routeName,params){var routeConfig=routeConfigs[routeName];if(routeConfig&&routeConfig.params){return _objectSpread(_objectSpread({},routeConfig.params),params);}else{return params;}}var _createPathParser=createPathParser(childRouters,routeConfigs,config),getPathAndParamsForRoute=_createPathParser.getPathAndParamsForRoute,_getActionForPathAndParams=_createPathParser.getActionForPathAndParams;function resetChildRoute(routeName){var initialParams=routeName===initialRouteName?initialRouteParams:null;var params=getParamsForRoute(routeName,initialParams);var childRouter=childRouters[routeName];if(childRouter){var childAction=NavigationActions.init();return _objectSpread(_objectSpread({},childRouter.getStateForAction(childAction)),{},{key:routeName,routeName:routeName},params?{params:params}:{});}return _objectSpread({key:routeName,routeName:routeName},params?{params:params}:{});}function getNextState(action,prevState,possibleNextState){function updateNextStateHistory(prevState,nextState){if(backBehavior!=='history'||prevState&&nextState&&nextState.index===prevState.index){return nextState;}var nextRouteKeyHistory=prevState?prevState.routeKeyHistory:[];if(action.type===NavigationActions.NAVIGATE){nextRouteKeyHistory=_toConsumableArray(nextRouteKeyHistory);var keyToAdd=nextState.routes[nextState.index].key;nextRouteKeyHistory=nextRouteKeyHistory.filter(function(k){return k!==keyToAdd;});nextRouteKeyHistory.push(keyToAdd);}else if(action.type===NavigationActions.BACK){nextRouteKeyHistory=_toConsumableArray(nextRouteKeyHistory);nextRouteKeyHistory.pop();}return _objectSpread(_objectSpread({},nextState),{},{routeKeyHistory:nextRouteKeyHistory});}var nextState=possibleNextState;if(prevState&&possibleNextState&&prevState.index!==possibleNextState.index&&resetOnBlur){var prevRouteName=prevState.routes[prevState.index].routeName;var nextRoutes=_toConsumableArray(possibleNextState.routes);nextRoutes[prevState.index]=resetChildRoute(prevRouteName);nextState=_objectSpread(_objectSpread({},possibleNextState),{},{routes:nextRoutes});}return updateNextStateHistory(prevState,nextState);}function getInitialState(){var routes=order.map(resetChildRoute);var initialState={routes:routes,index:initialRouteIndex};if(backBehavior==='history'){var initialKey=routes[initialRouteIndex].key;initialState['routeKeyHistory']=[initialKey];}return initialState;}return{childRouters:childRouters,getActionCreators:function getActionCreators(route,stateKey){return getCustomActionCreators(route,stateKey);},getStateForAction:function getStateForAction(action,inputState){var prevState=inputState?_objectSpread({},inputState):inputState;var state=inputState||getInitialState();var activeChildIndex=state.index;if(action.type===NavigationActions.INIT){var params=action.params;if(params){state.routes=state.routes.map(function(route){return _objectSpread(_objectSpread({},route),{},{params:_objectSpread(_objectSpread(_objectSpread({},route.params),params),route.routeName===initialRouteName?initialRouteParams:null)});});}}if(action.type===SwitchActions.JUMP_TO&&(action.key==null||action.key===state.key)){var _params=action.params;var index=state.routes.findIndex(function(route){return route.routeName===action.routeName;});if(index===-1){throw new Error(\"There is no route named '\".concat(action.routeName,\"' in the navigator with the key '\").concat(action.key,\"'.\\n\")+\"Must be one of: \".concat(state.routes.map(function(route){return\"'\".concat(route.routeName,\"'\");}).join(',')));}return getNextState(action,prevState,_objectSpread(_objectSpread({},state),{},{routes:_params?state.routes.map(function(route,i){return i===index?_objectSpread(_objectSpread({},route),{},{params:_objectSpread(_objectSpread({},route.params),_params)}):route;}):state.routes,index:index}));}var activeChildLastState=state.routes[state.index];var activeChildRouter=childRouters[order[state.index]];if(activeChildRouter){var activeChildState=activeChildRouter.getStateForAction(action,activeChildLastState);if(!activeChildState&&inputState){return null;}if(activeChildState&&activeChildState!==activeChildLastState){var routes=_toConsumableArray(state.routes);routes[state.index]=activeChildState;return getNextState(action,prevState,_objectSpread(_objectSpread({},state),{},{routes:routes}));}}var isBackEligible=action.key==null||action.key===activeChildLastState.key;if(action.type===NavigationActions.BACK){if(isBackEligible&&backBehavior==='initialRoute'){activeChildIndex=initialRouteIndex;}else if(isBackEligible&&backBehavior==='order'){activeChildIndex=Math.max(0,activeChildIndex-1);}else if(isBackEligible&&backBehavior==='history'&&state.routeKeyHistory.length>1){var routeKey=state.routeKeyHistory[state.routeKeyHistory.length-2];activeChildIndex=order.indexOf(routeKey);}}var didNavigate=false;if(action.type===NavigationActions.NAVIGATE){didNavigate=!!order.find(function(childId,i){if(childId===action.routeName){activeChildIndex=i;return true;}return false;});if(didNavigate){var childState=state.routes[activeChildIndex];var childRouter=childRouters[action.routeName];var newChildState=childState;if(action.action&&childRouter){var childStateUpdate=childRouter.getStateForAction(action.action,childState);if(childStateUpdate){newChildState=childStateUpdate;}}if(action.params){newChildState=_objectSpread(_objectSpread({},newChildState),{},{params:_objectSpread(_objectSpread({},newChildState.params||{}),action.params)});}if(newChildState!==childState){var _routes=_toConsumableArray(state.routes);_routes[activeChildIndex]=newChildState;var nextState=_objectSpread(_objectSpread({},state),{},{routes:_routes,index:activeChildIndex});return getNextState(action,prevState,nextState);}else if(newChildState===childState&&state.index===activeChildIndex&&prevState){return null;}}}if(action.type===NavigationActions.SET_PARAMS){var key=action.key;var lastRoute=state.routes.find(function(route){return route.key===key;});if(lastRoute){var _params2=_objectSpread(_objectSpread({},lastRoute.params),action.params);var _routes2=_toConsumableArray(state.routes);_routes2[state.routes.indexOf(lastRoute)]=_objectSpread(_objectSpread({},lastRoute),{},{params:_params2});return getNextState(action,prevState,_objectSpread(_objectSpread({},state),{},{routes:_routes2}));}}if(activeChildIndex!==state.index){return getNextState(action,prevState,_objectSpread(_objectSpread({},state),{},{index:activeChildIndex}));}else if(didNavigate&&!inputState){return state;}else if(didNavigate){return _objectSpread({},state);}var isActionBackOrPop=action.type===NavigationActions.BACK||action.type===StackActions.POP||action.type===StackActions.POP_TO_TOP;var sendActionToInactiveChildren=!isActionBackOrPop||action.type===NavigationActions.BACK&&action.key!=null;if(sendActionToInactiveChildren){var _index=state.index;var _routes3=state.routes;order.find(function(childId,i){var childRouter=childRouters[childId];if(i===_index){return false;}var childState=_routes3[i];if(childRouter){childState=childRouter.getStateForAction(action,childState);}if(!childState){_index=i;return true;}if(childState!==_routes3[i]){_routes3=_toConsumableArray(_routes3);_routes3[i]=childState;_index=i;return true;}return false;});if(action.preserveFocus){_index=state.index;}if(_index!==state.index||_routes3!==state.routes){return getNextState(action,prevState,_objectSpread(_objectSpread({},state),{},{index:_index,routes:_routes3}));}}return state;},getComponentForState:function getComponentForState(state){var routeName=state.routes[state.index].routeName;invariant(routeName,\"There is no route defined for index \".concat(state.index,\". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\"));var childRouter=childRouters[routeName];if(childRouter){return childRouter.getComponentForState(state.routes[state.index]);}return getScreenForRouteName(routeConfigs,routeName);},getComponentForRouteName:function getComponentForRouteName(routeName){return getScreenForRouteName(routeConfigs,routeName);},getPathAndParamsForState:function getPathAndParamsForState(state){var route=state.routes[state.index];return getPathAndParamsForRoute(route);},getActionForPathAndParams:function getActionForPathAndParams(path,params){return _getActionForPathAndParams(path,params);},getScreenOptions:createConfigGetter(routeConfigs,config.defaultNavigationOptions)};});","map":{"version":3,"names":["invariant","getScreenForRouteName","createConfigGetter","NavigationActions","SwitchActions","StackActions","validateRouteConfigMap","createPathParser","defaultActionCreators","routeConfigs","config","arguments","length","undefined","order","Object","keys","getCustomActionCreators","initialRouteParams","initialRouteName","backBehavior","resetOnBlur","hasOwnProperty","initialRouteIndex","indexOf","Error","concat","map","n","join","childRouters","forEach","routeName","screen","router","getParamsForRoute","params","routeConfig","_objectSpread","_createPathParser","getPathAndParamsForRoute","getActionForPathAndParams","resetChildRoute","initialParams","childRouter","childAction","init","getStateForAction","key","getNextState","action","prevState","possibleNextState","updateNextStateHistory","nextState","index","nextRouteKeyHistory","routeKeyHistory","type","NAVIGATE","_toConsumableArray","keyToAdd","routes","filter","k","push","BACK","pop","prevRouteName","nextRoutes","getInitialState","initialState","initialKey","getActionCreators","route","stateKey","inputState","state","activeChildIndex","INIT","JUMP_TO","findIndex","i","activeChildLastState","activeChildRouter","activeChildState","isBackEligible","Math","max","routeKey","didNavigate","find","childId","childState","newChildState","childStateUpdate","SET_PARAMS","lastRoute","isActionBackOrPop","POP","POP_TO_TOP","sendActionToInactiveChildren","preserveFocus","getComponentForState","getComponentForRouteName","getPathAndParamsForState","path","getScreenOptions","defaultNavigationOptions"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-navigation/node_modules/@react-navigation/core/lib/module/routers/SwitchRouter.js"],"sourcesContent":["import invariant from '../utils/invariant';\nimport getScreenForRouteName from './getScreenForRouteName';\nimport createConfigGetter from './createConfigGetter';\n\nimport * as NavigationActions from '../NavigationActions';\nimport * as SwitchActions from './SwitchActions';\nimport * as StackActions from './StackActions';\nimport validateRouteConfigMap from './validateRouteConfigMap';\nimport { createPathParser } from './pathUtils';\n\nconst defaultActionCreators = () => ({});\n\nexport default (routeConfigs, config = {}) => {\n  // Fail fast on invalid route definitions\n  validateRouteConfigMap(routeConfigs);\n\n  const order = config.order || Object.keys(routeConfigs);\n\n  const getCustomActionCreators =\n    config.getCustomActionCreators || defaultActionCreators;\n\n  const { initialRouteParams } = config;\n  const initialRouteName = config.initialRouteName || order[0];\n  const backBehavior = config.backBehavior || 'none';\n  const resetOnBlur = config.hasOwnProperty('resetOnBlur')\n    ? config.resetOnBlur\n    : true;\n\n  const initialRouteIndex = order.indexOf(initialRouteName);\n  if (initialRouteIndex === -1) {\n    throw new Error(\n      `Invalid initialRouteName '${initialRouteName}'.` +\n        `Should be one of ${order.map((n) => `\"${n}\"`).join(', ')}`\n    );\n  }\n\n  const childRouters = {};\n  order.forEach((routeName) => {\n    childRouters[routeName] = null;\n    const screen = getScreenForRouteName(routeConfigs, routeName);\n    if (screen.router) {\n      childRouters[routeName] = screen.router;\n    }\n  });\n\n  function getParamsForRoute(routeName, params) {\n    let routeConfig = routeConfigs[routeName];\n    if (routeConfig && routeConfig.params) {\n      return { ...routeConfig.params, ...params };\n    } else {\n      return params;\n    }\n  }\n\n  const {\n    getPathAndParamsForRoute,\n    getActionForPathAndParams,\n  } = createPathParser(childRouters, routeConfigs, config);\n\n  function resetChildRoute(routeName) {\n    let initialParams =\n      routeName === initialRouteName ? initialRouteParams : null;\n    // note(brentvatne): merging initialRouteParams *on top* of default params\n    // on the route seems incorrect but it's consistent with existing behavior\n    // in stackrouter\n    let params = getParamsForRoute(routeName, initialParams);\n    const childRouter = childRouters[routeName];\n    if (childRouter) {\n      const childAction = NavigationActions.init();\n      return {\n        ...childRouter.getStateForAction(childAction),\n        key: routeName,\n        routeName,\n        ...(params ? { params } : {}),\n      };\n    }\n    return {\n      key: routeName,\n      routeName,\n      ...(params ? { params } : {}),\n    };\n  }\n\n  function getNextState(action, prevState, possibleNextState) {\n    function updateNextStateHistory(prevState, nextState) {\n      if (\n        backBehavior !== 'history' ||\n        (prevState && nextState && nextState.index === prevState.index)\n      ) {\n        return nextState;\n      }\n      let nextRouteKeyHistory = prevState ? prevState.routeKeyHistory : [];\n      if (action.type === NavigationActions.NAVIGATE) {\n        nextRouteKeyHistory = [...nextRouteKeyHistory]; // copy\n        const keyToAdd = nextState.routes[nextState.index].key;\n        nextRouteKeyHistory = nextRouteKeyHistory.filter((k) => k !== keyToAdd); // dedup\n        nextRouteKeyHistory.push(keyToAdd);\n      } else if (action.type === NavigationActions.BACK) {\n        nextRouteKeyHistory = [...nextRouteKeyHistory]; // copy\n        nextRouteKeyHistory.pop();\n      }\n      return {\n        ...nextState,\n        routeKeyHistory: nextRouteKeyHistory,\n      };\n    }\n\n    let nextState = possibleNextState;\n    if (\n      prevState &&\n      possibleNextState &&\n      prevState.index !== possibleNextState.index &&\n      resetOnBlur\n    ) {\n      const prevRouteName = prevState.routes[prevState.index].routeName;\n      const nextRoutes = [...possibleNextState.routes];\n      nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n      nextState = {\n        ...possibleNextState,\n        routes: nextRoutes,\n      };\n    }\n    return updateNextStateHistory(prevState, nextState);\n  }\n\n  function getInitialState() {\n    const routes = order.map(resetChildRoute);\n    const initialState = {\n      routes,\n      index: initialRouteIndex,\n    };\n\n    if (backBehavior === 'history') {\n      const initialKey = routes[initialRouteIndex].key;\n      initialState['routeKeyHistory'] = [initialKey];\n    }\n    return initialState;\n  }\n\n  return {\n    childRouters,\n\n    getActionCreators(route, stateKey) {\n      return getCustomActionCreators(route, stateKey);\n    },\n\n    getStateForAction(action, inputState) {\n      let prevState = inputState ? { ...inputState } : inputState;\n      let state = inputState || getInitialState();\n      let activeChildIndex = state.index;\n\n      if (action.type === NavigationActions.INIT) {\n        // NOTE(brentvatne): this seems weird... why are we merging these\n        // params into child routes?\n        // ---------------------------------------------------------------\n        // Merge any params from the action into all the child routes\n        const { params } = action;\n        if (params) {\n          state.routes = state.routes.map((route) => ({\n            ...route,\n            params: {\n              ...route.params,\n              ...params,\n              ...(route.routeName === initialRouteName\n                ? initialRouteParams\n                : null),\n            },\n          }));\n        }\n      }\n\n      if (\n        action.type === SwitchActions.JUMP_TO &&\n        (action.key == null || action.key === state.key)\n      ) {\n        const { params } = action;\n        const index = state.routes.findIndex(\n          (route) => route.routeName === action.routeName\n        );\n\n        if (index === -1) {\n          throw new Error(\n            `There is no route named '${action.routeName}' in the navigator with the key '${action.key}'.\\n` +\n              `Must be one of: ${state.routes\n                .map((route) => `'${route.routeName}'`)\n                .join(',')}`\n          );\n        }\n\n        return getNextState(action, prevState, {\n          ...state,\n          routes: params\n            ? state.routes.map((route, i) =>\n                i === index\n                  ? {\n                      ...route,\n                      params: {\n                        ...route.params,\n                        ...params,\n                      },\n                    }\n                  : route\n              )\n            : state.routes,\n          index,\n        });\n      }\n\n      // Let the current child handle it\n      const activeChildLastState = state.routes[state.index];\n      const activeChildRouter = childRouters[order[state.index]];\n      if (activeChildRouter) {\n        const activeChildState = activeChildRouter.getStateForAction(\n          action,\n          activeChildLastState\n        );\n        if (!activeChildState && inputState) {\n          return null;\n        }\n        if (activeChildState && activeChildState !== activeChildLastState) {\n          const routes = [...state.routes];\n          routes[state.index] = activeChildState;\n          return getNextState(action, prevState, {\n            ...state,\n            routes,\n          });\n        }\n      }\n\n      // Handle tab changing. Do this after letting the current tab try to\n      // handle the action, to allow inner children to change first\n      const isBackEligible =\n        action.key == null || action.key === activeChildLastState.key;\n      if (action.type === NavigationActions.BACK) {\n        if (isBackEligible && backBehavior === 'initialRoute') {\n          activeChildIndex = initialRouteIndex;\n        } else if (isBackEligible && backBehavior === 'order') {\n          activeChildIndex = Math.max(0, activeChildIndex - 1);\n        }\n        // The history contains current route, so we can only go back\n        // if there is more than one item in the history\n        else if (\n          isBackEligible &&\n          backBehavior === 'history' &&\n          state.routeKeyHistory.length > 1\n        ) {\n          const routeKey =\n            state.routeKeyHistory[state.routeKeyHistory.length - 2];\n          activeChildIndex = order.indexOf(routeKey);\n        }\n      }\n\n      let didNavigate = false;\n      if (action.type === NavigationActions.NAVIGATE) {\n        didNavigate = !!order.find((childId, i) => {\n          if (childId === action.routeName) {\n            activeChildIndex = i;\n            return true;\n          }\n          return false;\n        });\n        if (didNavigate) {\n          const childState = state.routes[activeChildIndex];\n          const childRouter = childRouters[action.routeName];\n          let newChildState = childState;\n\n          if (action.action && childRouter) {\n            const childStateUpdate = childRouter.getStateForAction(\n              action.action,\n              childState\n            );\n            if (childStateUpdate) {\n              newChildState = childStateUpdate;\n            }\n          }\n\n          if (action.params) {\n            newChildState = {\n              ...newChildState,\n              params: {\n                ...(newChildState.params || {}),\n                ...action.params,\n              },\n            };\n          }\n\n          if (newChildState !== childState) {\n            const routes = [...state.routes];\n            routes[activeChildIndex] = newChildState;\n            const nextState = {\n              ...state,\n              routes,\n              index: activeChildIndex,\n            };\n            return getNextState(action, prevState, nextState);\n          } else if (\n            newChildState === childState &&\n            state.index === activeChildIndex &&\n            prevState\n          ) {\n            return null;\n          }\n        }\n      }\n\n      if (action.type === NavigationActions.SET_PARAMS) {\n        const key = action.key;\n        const lastRoute = state.routes.find((route) => route.key === key);\n        if (lastRoute) {\n          const params = {\n            ...lastRoute.params,\n            ...action.params,\n          };\n          const routes = [...state.routes];\n          routes[state.routes.indexOf(lastRoute)] = {\n            ...lastRoute,\n            params,\n          };\n          return getNextState(action, prevState, {\n            ...state,\n            routes,\n          });\n        }\n      }\n\n      if (activeChildIndex !== state.index) {\n        return getNextState(action, prevState, {\n          ...state,\n          index: activeChildIndex,\n        });\n      } else if (didNavigate && !inputState) {\n        return state;\n      } else if (didNavigate) {\n        return { ...state };\n      }\n\n      const isActionBackOrPop =\n        action.type === NavigationActions.BACK ||\n        action.type === StackActions.POP ||\n        action.type === StackActions.POP_TO_TOP;\n      const sendActionToInactiveChildren =\n        !isActionBackOrPop ||\n        (action.type === NavigationActions.BACK && action.key != null);\n\n      // Let other children handle it and switch to the first child that returns a new state\n      // Do not do this for StackActions.POP or NavigationActions.BACK actions without a key:\n      // it would be unintuitive for these actions to switch to another tab just because that tab had a Stack that could accept a back action\n      if (sendActionToInactiveChildren) {\n        let index = state.index;\n        let routes = state.routes;\n        order.find((childId, i) => {\n          const childRouter = childRouters[childId];\n          if (i === index) {\n            return false;\n          }\n          let childState = routes[i];\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n          if (!childState) {\n            index = i;\n            return true;\n          }\n          if (childState !== routes[i]) {\n            routes = [...routes];\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n          return false;\n        });\n\n        // Nested routers can be updated after switching children with actions such as SET_PARAMS\n        // and COMPLETE_TRANSITION.\n        if (action.preserveFocus) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return getNextState(action, prevState, {\n            ...state,\n            index,\n            routes,\n          });\n        }\n      }\n\n      return state;\n    },\n\n    getComponentForState(state) {\n      const routeName = state.routes[state.index].routeName;\n      invariant(\n        routeName,\n        `There is no route defined for index ${state.index}. Check that\n        that you passed in a navigation state with a valid tab/screen index.`\n      );\n      const childRouter = childRouters[routeName];\n      if (childRouter) {\n        return childRouter.getComponentForState(state.routes[state.index]);\n      }\n      return getScreenForRouteName(routeConfigs, routeName);\n    },\n\n    getComponentForRouteName(routeName) {\n      return getScreenForRouteName(routeConfigs, routeName);\n    },\n\n    getPathAndParamsForState(state) {\n      const route = state.routes[state.index];\n      return getPathAndParamsForRoute(route);\n    },\n\n    getActionForPathAndParams(path, params) {\n      return getActionForPathAndParams(path, params);\n    },\n\n    getScreenOptions: createConfigGetter(\n      routeConfigs,\n      config.defaultNavigationOptions\n    ),\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}