{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";var markerClipConfig={numberOfLines:1,ellipsizeMode:'clip'};export default function MarkerBox(_ref){var style=_ref.style,counterRenderer=_ref.counterRenderer,counterIndex=_ref.counterIndex,markerTextStyle=_ref.markerTextStyle,markerTextWidth=_ref.markerTextWidth,enableMarkerClipping=_ref.enableMarkerClipping;var markerStyle=typeof markerTextWidth==='number'?[markerTextStyle,{width:markerTextWidth}]:markerTextStyle;return React.createElement(View,{style:style},React.createElement(Text,_extends({},enableMarkerClipping?markerClipConfig:null,{testID:\"marker-box\",style:markerStyle}),counterRenderer.renderMarker(counterIndex)));}","map":{"version":3,"names":["React","Text","View","markerClipConfig","numberOfLines","ellipsizeMode","MarkerBox","_ref","style","counterRenderer","counterIndex","markerTextStyle","markerTextWidth","enableMarkerClipping","markerStyle","width","createElement","_extends","testID","renderMarker"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/node_modules/@jsamr/react-native-li/lib/module/MarkerBox.tsx"],"sourcesContent":["import React from 'react';\nimport { Text, TextProps, View } from 'react-native';\nimport { MarkerBoxProps } from './shared-types';\n\nconst markerClipConfig: Partial<TextProps> = {\n  numberOfLines: 1,\n  ellipsizeMode: 'clip'\n};\n\n/**\n * Default component to render the list marker.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#marker-pseudo | CSS Lists and Counters Module Level 3, Markers}\n *\n * @public\n */\nexport default function MarkerBox({\n  style,\n  counterRenderer,\n  counterIndex,\n  markerTextStyle,\n  markerTextWidth,\n  enableMarkerClipping\n}: MarkerBoxProps) {\n  const markerStyle =\n    typeof markerTextWidth === 'number'\n      ? [markerTextStyle, { width: markerTextWidth }]\n      : markerTextStyle;\n  return (\n    <View style={style}>\n      <Text\n        {...(enableMarkerClipping ? markerClipConfig : null)}\n        testID=\"marker-box\"\n        style={markerStyle}>\n        {counterRenderer.renderMarker(counterIndex)}\n      </Text>\n    </View>\n  );\n}\n"],"mappings":"uRAAA,MAAO,CAAAA,KAAP,KAAkB,OAAlB,QAAAC,IAAA,iDAAAC,IAAA,0CAIA,GAAM,CAAAC,gBAAoC,CAAG,CAC3CC,aAAa,CAAE,CAD4B,CAE3CC,aAAa,CAAE,MAF4B,CAA7C,CAYA,cAAe,SAAS,CAAAC,SAATA,CAAAC,IAAA,CAOI,IANjB,CAAAC,KADgC,CAAAD,IAAA,CAChCC,KADgC,CAEhCC,eAFgC,CAAAF,IAAA,CAEhCE,eAFgC,CAGhCC,YAHgC,CAAAH,IAAA,CAGhCG,YAHgC,CAIhCC,eAJgC,CAAAJ,IAAA,CAIhCI,eAJgC,CAKhCC,eALgC,CAAAL,IAAA,CAKhCK,eALgC,CAMhCC,oBAAA,CAAAN,IAAA,CAAAM,oBAAA,CAEA,GAAM,CAAAC,WAAW,CACf,MAAO,CAAAF,eAAP,GAA2B,QAA3B,CACI,CAACD,eAAD,CAAkB,CAAEI,KAAK,CAAEH,eAAT,CAAlB,CADJ,CAEID,eAHN,CAIA,MACE,CAAAX,KAAA,CAAAgB,aAAA,CAACd,IAAD,EAAMM,KAAK,CAAEA,KAAb,EACER,KAAA,CAAAgB,aAAA,CAACf,IAAD,CAAAgB,QAAA,IACOJ,oBAAoB,CAAGV,gBAAH,CAAsB,IADjD,EAEEe,MAAM,CAAC,YAFT,CAGEV,KAAK,CAAEM,WAHT,GAIGL,eAAe,CAACU,YAAhB,CAA6BT,YAA7B,CAJH,CADF,CADF,CAUD"},"metadata":{},"sourceType":"module","externalDependencies":[]}