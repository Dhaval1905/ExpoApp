{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.default=createTheming;var React=_interopRequireWildcard(require(\"react\"));var _deepmerge=_interopRequireDefault(require(\"deepmerge\"));var _createThemeProvider=_interopRequireDefault(require(\"./createThemeProvider\"));var _createWithTheme=_interopRequireDefault(require(\"./createWithTheme\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function createTheming(defaultTheme){var ThemeContext=React.createContext(defaultTheme);var ThemeProvider=(0,_createThemeProvider.default)(defaultTheme,ThemeContext);var withTheme=(0,_createWithTheme.default)(ThemeProvider,ThemeContext);var useTheme=function useTheme(overrides){var theme=React.useContext(ThemeContext);var result=React.useMemo(function(){return theme&&overrides?(0,_deepmerge.default)(theme,overrides):theme||overrides;},[theme,overrides]);return result;};return{ThemeContext:ThemeContext,ThemeProvider:ThemeProvider,withTheme:withTheme,useTheme:useTheme};}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_deepmerge","_interopRequireDefault","_createThemeProvider","_createWithTheme","createTheming","defaultTheme","ThemeContext","createContext","ThemeProvider","default","withTheme","useTheme","overrides","theme","useContext","result","useMemo"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-paper/node_modules/@callstack/react-theme-provider/src/createTheming.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport deepmerge from 'deepmerge';\nimport createThemeProvider from './createThemeProvider';\nimport createWithTheme from './createWithTheme';\nimport type { WithThemeType } from './createWithTheme';\nimport type { ThemeProviderType } from './createThemeProvider';\nimport type { $DeepShape } from './types';\n\nexport type ThemingType<T> = {\n  ThemeProvider: ThemeProviderType<T>,\n  withTheme: WithThemeType<T>,\n  useTheme(overrides?: $DeepShape<T>): T,\n};\n\nexport default function createTheming<T: Object>(\n  defaultTheme: T\n): ThemingType<T> {\n  const ThemeContext: React.Context<T> = React.createContext(defaultTheme);\n\n  const ThemeProvider: ThemeProviderType<T> = createThemeProvider(\n    defaultTheme,\n    ThemeContext\n  );\n\n  const withTheme: WithThemeType<T> = createWithTheme(\n    ThemeProvider,\n    ThemeContext\n  );\n\n  const useTheme = (overrides?: $DeepShape<T>): T => {\n    const theme = React.useContext(ThemeContext);\n    const result = React.useMemo(\n      () =>\n        theme && overrides ? deepmerge(theme, overrides) : theme || overrides,\n      [theme, overrides]\n    );\n\n    return result;\n  };\n\n  return {\n    ThemeContext,\n    ThemeProvider,\n    withTheme,\n    useTheme,\n  };\n}\n"],"mappings":"mEAEA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WACA,IAAAC,UAAA,CAAAC,sBAAA,CAAAF,OAAA,eACA,IAAAG,oBAAA,CAAAD,sBAAA,CAAAF,OAAA,2BACA,IAAAI,gBAAA,CAAAF,sBAAA,CAAAF,OAAA,uB,gfAWe,QAAS,CAAAK,aAATA,CACbC,YADa,CAEG,CAChB,GAAM,CAAAC,YAA8B,CAAGT,KAAK,CAACU,aAAN,CAAoBF,YAApB,CAAvC,CAEA,GAAM,CAAAG,aAAmC,CAAG,GAAAN,oBAAA,CAAAO,OAAA,EAC1CJ,YAD0C,CAE1CC,YAF0C,CAA5C,CAKA,GAAM,CAAAI,SAA2B,CAAG,GAAAP,gBAAA,CAAAM,OAAA,EAClCD,aADkC,CAElCF,YAFkC,CAApC,CAKA,GAAM,CAAAK,QAAQ,CAAG,QAAX,CAAAA,QAAWA,CAACC,SAAD,CAAkC,CACjD,GAAM,CAAAC,KAAK,CAAGhB,KAAK,CAACiB,UAAN,CAAiBR,YAAjB,CAAd,CACA,GAAM,CAAAS,MAAM,CAAGlB,KAAK,CAACmB,OAAN,CACb,iBACE,CAAAH,KAAK,EAAID,SAAT,CAAqB,GAAAZ,UAAA,CAAAS,OAAA,EAAUI,KAAV,CAAiBD,SAAjB,CAArB,CAAmDC,KAAK,EAAID,SAD9D,EADa,CAGb,CAACC,KAAD,CAAQD,SAAR,CAHa,CAAf,CAMA,MAAO,CAAAG,MAAP,CACD,CATD,CAWA,MAAO,CACLT,YAAY,CAAZA,YADK,CAELE,aAAa,CAAbA,aAFK,CAGLE,SAAS,CAATA,SAHK,CAILC,QAAQ,CAARA,QAJK,CAAP,CAMD"},"metadata":{},"sourceType":"script","externalDependencies":[]}