{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useRoute}from'@react-navigation/native';import React,{useState}from'react';import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Modal from\"react-native-web/dist/exports/Modal\";import Platform from\"react-native-web/dist/exports/Platform\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{Switch,TextInput}from'react-native-paper';import FontAwesomeIcon from\"@expo/vector-icons/FontAwesome\";import Icon from\"@expo/vector-icons/Ionicons\";import{useDispatch,useSelector}from'react-redux';import{CustomButton,CustomHeader,ModalButton}from\"../../../components\";import{Strings,type}from\"../../../constants\";import{externalAccountAdd}from\"../../../redux/actions/ach\";import{showLoader}from\"../../../redux/actions/user\";import{Colors,moderateScale}from\"../../../theme\";import styling from\"./PaperCheckStyles\";import{showMessage,hideMessage}from\"react-native-flash-message\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PaperCheckScreen=function PaperCheckScreen(_ref){var _route$params,_ref2,_Colors$theme,_Strings$legalName,_Colors$theme2,_Strings$nickname,_Colors$theme3,_Strings$bankName,_Colors$theme4,_Strings$accountNumbe,_Colors$theme5,_Strings$routingNumbe,_Colors$theme6,_Colors$theme7;var navigation=_ref.navigation;var route=useRoute();var dispatch=useDispatch();var userDetails=useSelector(function(state){var _state$user;return state==null?void 0:(_state$user=state.user)==null?void 0:_state$user.login;});var theme=route==null?void 0:(_route$params=route.params)==null?void 0:_route$params.theme;var styles=styling(theme);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSwitchOn=_useState2[0],setIsSwitchOn=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isVisibleType=_useState4[0],setIsVisibleType=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),selectedType=_useState6[0],setSelectedType=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),legalName=_useState8[0],setLegalName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),nickName=_useState10[0],setNickName=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),accountNumber=_useState12[0],setAccountNumber=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),routingNumber=_useState14[0],setRoutingNumber=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),bankName=_useState16[0],setBankName=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),legalNameError=_useState18[0],setLegalNameError=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),bankNameError=_useState20[0],setBankNameError=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),accountNumberError=_useState22[0],setAccountNumberError=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),routingNumberError=_useState24[0],setRoutingNumberError=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),accountTypeError=_useState26[0],setAccountTypeError=_useState26[1];var _useState27=useState(\"US\"),_useState28=_slicedToArray(_useState27,2),country=_useState28[0],setCountry=_useState28[1];var validation=function validation(){var isValid=false;if(legalName.length===0){isValid=true;setLegalNameError('Please enter legal name.');}if(!selectedType){isValid=true;setAccountTypeError('Please select account type.');}if(bankName.length===0){isValid=true;setBankNameError('Please enter bank name.');}if(accountNumber.length===0){isValid=true;setAccountNumberError('Please enter account number.');}if(routingNumber.length===0){isValid=true;setRoutingNumberError('Please enter routing number.');}return isValid;};var addAccountPress=function addAccountPress(){return(_ref2=_ref2||_asyncToGenerator(function*(){if(!validation()){var _userDetails$data,_userDetails$data$per,_userDetails$data$per2,_userDetails$data2,_userDetails$data2$ac,_userDetails$data2$ac2,_res$response,_res$response$data;yield dispatch(showLoader(true));var date=new Date();var data={account_identifiers:{number:accountNumber},account_owner_names:[legalName],metadata:{date:`created at ${date.getDate()} march by ${legalName}`},customer_type:selectedType,routing_identifiers:{bank_countries:[country],wire_routing_number:routingNumber,bank_name:bankName},nickname:nickName,customer_id:userDetails==null?void 0:(_userDetails$data=userDetails.data)==null?void 0:(_userDetails$data$per=_userDetails$data.personDetail)==null?void 0:(_userDetails$data$per2=_userDetails$data$per[0])==null?void 0:_userDetails$data$per2.id,type:userDetails==null?void 0:(_userDetails$data2=userDetails.data)==null?void 0:(_userDetails$data2$ac=_userDetails$data2.accountDetail)==null?void 0:(_userDetails$data2$ac2=_userDetails$data2$ac[0])==null?void 0:_userDetails$data2$ac2.account_type};var res=yield externalAccountAdd(data);yield dispatch(showLoader(false));if((res==null?void 0:(_res$response=res.response)==null?void 0:(_res$response$data=_res$response.data)==null?void 0:_res$response$data.status)===0){var _res$response2,_res$response2$data;showMessage({message:res==null?void 0:(_res$response2=res.response)==null?void 0:(_res$response2$data=_res$response2.data)==null?void 0:_res$response2$data.message,type:\"danger\"});}else{navigation.goBack();}}})).apply(this,arguments);};return _jsxs(View,{style:styles.screen,children:[_jsx(CustomHeader,{theme:theme,headerTitle:\"\",onPressBack:function onPressBack(){return navigation.goBack();}}),_jsxs(View,{style:styles.container,children:[_jsxs(View,{style:styles.titleParent,children:[_jsx(FontAwesomeIcon,{name:'bank',size:moderateScale(22),color:(_Colors$theme=Colors[theme])==null?void 0:_Colors$theme.blue}),_jsx(Text,{style:styles.title,children:\"Wire Transfer\"})]}),_jsx(View,{style:styles.card,children:_jsx(ScrollView,{style:styles.scrollView,showsVerticalScrollIndicator:false,children:_jsxs(KeyboardAvoidingView,{behavior:Platform.OS==='ios'?'padding':undefined,style:{flex:1},enabled:true,children:[_jsx(TextInput,{mode:'outlined',label:(_Strings$legalName=Strings.legalName)==null?void 0:_Strings$legalName.toUpperCase(),style:styles.textInput,activeOutlineColor:(_Colors$theme2=Colors[theme])==null?void 0:_Colors$theme2.black,value:legalName,onChangeText:function onChangeText(text){setLegalName(text);setLegalNameError('');}}),(legalNameError==null?void 0:legalNameError.length)>0&&_jsx(Text,{style:styles.errorText,children:legalNameError}),_jsx(TextInput,{mode:'outlined',label:(_Strings$nickname=Strings.nickname)==null?void 0:_Strings$nickname.toUpperCase(),style:styles.textInput,activeOutlineColor:(_Colors$theme3=Colors[theme])==null?void 0:_Colors$theme3.black,value:nickName,onChangeText:function onChangeText(text){return setNickName(text);}}),_jsx(ModalButton,{theme:theme,buttonValue:selectedType?selectedType:'TYPE',width:'100%',onPressButton:function onPressButton(){setIsVisibleType(true);setAccountTypeError('');}}),(accountTypeError==null?void 0:accountTypeError.length)>0&&_jsx(Text,{style:styles.errorText,children:accountTypeError}),_jsx(TextInput,{mode:'outlined',label:(_Strings$bankName=Strings.bankName)==null?void 0:_Strings$bankName.toUpperCase(),style:styles.textInput,activeOutlineColor:(_Colors$theme4=Colors[theme])==null?void 0:_Colors$theme4.black,value:bankName,onChangeText:function onChangeText(text){setBankName(text);setBankNameError('');}}),(bankNameError==null?void 0:bankNameError.length)>0&&_jsx(Text,{style:styles.errorText,children:bankNameError}),_jsx(TextInput,{mode:'outlined',label:(_Strings$accountNumbe=Strings.accountNumber)==null?void 0:_Strings$accountNumbe.toUpperCase(),style:styles.textInput,activeOutlineColor:(_Colors$theme5=Colors[theme])==null?void 0:_Colors$theme5.black,value:accountNumber,keyboardType:'number-pad',onChangeText:function onChangeText(text){setAccountNumber(text);setAccountNumberError('');}}),(accountNumberError==null?void 0:accountNumberError.length)>0&&_jsx(Text,{style:styles.errorText,children:accountNumberError}),_jsx(TextInput,{mode:'outlined',label:(_Strings$routingNumbe=Strings.routingNumber)==null?void 0:_Strings$routingNumbe.toUpperCase(),style:styles.textInput,activeOutlineColor:(_Colors$theme6=Colors[theme])==null?void 0:_Colors$theme6.black,value:routingNumber,keyboardType:'number-pad',onChangeText:function onChangeText(text){setRoutingNumber(text);setRoutingNumberError('');}}),(routingNumberError==null?void 0:routingNumberError.length)>0&&_jsx(Text,{style:styles.errorText,children:routingNumberError}),_jsx(TextInput,{mode:'outlined',label:\"US\",style:styles.textInput,activeOutlineColor:(_Colors$theme7=Colors[theme])==null?void 0:_Colors$theme7.black,disabled:true})]})})})]}),_jsx(View,{style:styles.reviewButtonParent,children:_jsx(CustomButton,{theme:theme,buttonTitle:Strings.review,buttonTitleStyle:styles.review,buttonStyle:styles.reviewButtonStyle,onBtnPress:function onBtnPress(){return addAccountPress();}})}),_jsx(Modal,{visible:isVisibleType,transparent:true,children:_jsx(SafeAreaView,{style:styles.modalParent,children:_jsxs(View,{style:styles.modalContainer,children:[_jsx(View,{style:styles.modalHeader,children:_jsx(Text,{style:styles.modalTitle,children:Strings.type})}),_jsx(View,{style:styles.divider}),_jsx(View,{style:styles.modalList,children:type==null?void 0:type.map(function(item,index){var _Colors$theme8;var isSelected=item===selectedType;return _jsxs(View,{children:[_jsxs(TouchableOpacity,{style:styles.itemParent,onPress:function onPress(){setSelectedType(item);setIsVisibleType(false);},children:[_jsx(Text,{style:[styles.modalItem,isSelected&&styles.selectedModalItem],children:item}),isSelected?_jsx(Icon,{name:\"checkmark\",size:moderateScale(24),color:(_Colors$theme8=Colors[theme])==null?void 0:_Colors$theme8.blue}):_jsx(_Fragment,{})]}),_jsx(View,{style:styles.divider})]},index);})})]})})})]});};export default PaperCheckScreen;","map":{"version":3,"names":["useRoute","React","useState","KeyboardAvoidingView","Modal","Platform","SafeAreaView","ScrollView","Text","TouchableOpacity","View","Switch","TextInput","FontAwesomeIcon","Icon","useDispatch","useSelector","CustomButton","CustomHeader","ModalButton","Strings","type","externalAccountAdd","showLoader","Colors","moderateScale","styling","showMessage","hideMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PaperCheckScreen","_ref","_route$params","_ref2","_Colors$theme","_Strings$legalName","_Colors$theme2","_Strings$nickname","_Colors$theme3","_Strings$bankName","_Colors$theme4","_Strings$accountNumbe","_Colors$theme5","_Strings$routingNumbe","_Colors$theme6","_Colors$theme7","navigation","route","dispatch","userDetails","state","_state$user","user","login","theme","params","styles","_useState","_useState2","_slicedToArray","isSwitchOn","setIsSwitchOn","_useState3","_useState4","isVisibleType","setIsVisibleType","_useState5","_useState6","selectedType","setSelectedType","_useState7","_useState8","legalName","setLegalName","_useState9","_useState10","nickName","setNickName","_useState11","_useState12","accountNumber","setAccountNumber","_useState13","_useState14","routingNumber","setRoutingNumber","_useState15","_useState16","bankName","setBankName","_useState17","_useState18","legalNameError","setLegalNameError","_useState19","_useState20","bankNameError","setBankNameError","_useState21","_useState22","accountNumberError","setAccountNumberError","_useState23","_useState24","routingNumberError","setRoutingNumberError","_useState25","_useState26","accountTypeError","setAccountTypeError","_useState27","_useState28","country","setCountry","validation","isValid","length","addAccountPress","_asyncToGenerator","_userDetails$data","_userDetails$data$per","_userDetails$data$per2","_userDetails$data2","_userDetails$data2$ac","_userDetails$data2$ac2","_res$response","_res$response$data","date","Date","data","account_identifiers","number","account_owner_names","metadata","getDate","customer_type","routing_identifiers","bank_countries","wire_routing_number","bank_name","nickname","customer_id","personDetail","id","accountDetail","account_type","res","response","status","_res$response2","_res$response2$data","message","goBack","apply","arguments","style","screen","children","headerTitle","onPressBack","container","titleParent","name","size","color","blue","title","card","scrollView","showsVerticalScrollIndicator","behavior","OS","undefined","flex","enabled","mode","label","toUpperCase","textInput","activeOutlineColor","black","value","onChangeText","text","errorText","buttonValue","width","onPressButton","keyboardType","disabled","reviewButtonParent","buttonTitle","review","buttonTitleStyle","buttonStyle","reviewButtonStyle","onBtnPress","visible","transparent","modalParent","modalContainer","modalHeader","modalTitle","divider","modalList","map","item","index","_Colors$theme8","isSelected","itemParent","onPress","modalItem","selectedModalItem"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/AddPayee/PaperCheck/PaperCheckScreen.js"],"sourcesContent":["import { useRoute } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport {\n  KeyboardAvoidingView,\n  Modal,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { Switch, TextInput } from 'react-native-paper';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CustomButton, CustomHeader, ModalButton } from '../../../components';\nimport { Strings, type } from '../../../constants';\nimport { externalAccountAdd } from '../../../redux/actions/ach';\nimport { showLoader } from '../../../redux/actions/user';\nimport { Colors, moderateScale } from '../../../theme';\nimport styling from './PaperCheckStyles';\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\n\nconst PaperCheckScreen = ({ navigation }) => {\n  const route = useRoute();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state?.user?.login)\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n  const [isSwitchOn, setIsSwitchOn] = useState(false);\n  const [isVisibleType, setIsVisibleType] = useState(false);\n  const [selectedType, setSelectedType] = useState(false);\n\n  const [legalName, setLegalName] = useState(\"\");\n  const [nickName, setNickName] = useState(\"\");\n  // const [Type, setType] = useState(\"\");\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [routingNumber, setRoutingNumber] = useState(\"\");\n  const [bankName, setBankName] = useState(\"\");\n  const [legalNameError, setLegalNameError] = useState(\"\");\n  const [bankNameError, setBankNameError] = useState(\"\");\n  const [accountNumberError, setAccountNumberError] = useState(\"\");\n  const [routingNumberError, setRoutingNumberError] = useState(\"\");\n  const [accountTypeError, setAccountTypeError] = useState(\"\");\n  const [country, setCountry] = useState(\"US\");\n\n  const validation = () => {\n    let isValid = false\n    if (legalName.length === 0) {\n      isValid = true\n      setLegalNameError('Please enter legal name.')\n    }\n    if (!selectedType) {\n      isValid = true\n      setAccountTypeError('Please select account type.')\n    }\n    if (bankName.length === 0) {\n      isValid = true\n      setBankNameError('Please enter bank name.')\n    }\n    if (accountNumber.length === 0) {\n      isValid = true\n      setAccountNumberError('Please enter account number.')\n    }\n    if (routingNumber.length === 0) {\n      isValid = true\n      setRoutingNumberError('Please enter routing number.')\n    }\n    return isValid\n  }\n\n  const addAccountPress = async () => {\n    if (!validation()) {\n      await dispatch(showLoader(true))\n      let date = new Date()\n      let data = {\n        account_identifiers: {\n          number: accountNumber\n        },\n        account_owner_names: [\n          legalName\n        ],\n        metadata: {\n          date: `created at ${date.getDate()} march by ${legalName}`\n        },\n        customer_type: selectedType,\n        routing_identifiers: {\n          bank_countries: [\n            country\n          ],\n          wire_routing_number: routingNumber,\n          bank_name: bankName\n        },\n        nickname: nickName,\n        customer_id: userDetails?.data?.personDetail?.[0]?.id,\n        type: userDetails?.data?.accountDetail?.[0]?.account_type\n      }\n      let res = await externalAccountAdd(data)\n      await dispatch(showLoader(false))\n      if (res?.response?.data?.status === 0) {\n        showMessage({\n          message: res?.response?.data?.message,\n          type: \"danger\",\n        });\n      } else {\n        navigation.goBack()\n      }\n    }\n  }\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={\"\"}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.container}>\n        <View style={styles.titleParent}>\n          <FontAwesomeIcon\n            name={'bank'}\n            size={moderateScale(22)}\n            color={Colors[theme]?.blue}\n          />\n          <Text style={styles.title}>{\"Wire Transfer\"}</Text>\n        </View>\n        <View style={styles.card}>\n          <ScrollView\n            style={styles.scrollView}\n            showsVerticalScrollIndicator={false}>\n            <KeyboardAvoidingView\n              behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n              style={{ flex: 1 }}\n              enabled>\n              <TextInput\n                mode={'outlined'}\n                label={Strings.legalName?.toUpperCase()}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n                value={legalName}\n                onChangeText={(text) => {\n                  setLegalName(text)\n                  setLegalNameError('')\n                }}\n              />\n              {legalNameError?.length > 0 && (\n                <Text style={styles.errorText}>\n                  {legalNameError}\n                </Text>\n              )}\n              <TextInput\n                mode={'outlined'}\n                label={Strings.nickname?.toUpperCase()}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n                value={nickName}\n                onChangeText={(text) => setNickName(text)}\n              />\n              {/* <Text style={styles.onlyVisible}>{Strings.onlyVisible}</Text> */}\n              <ModalButton\n                theme={theme}\n                buttonValue={selectedType ? selectedType : 'TYPE'}\n                width={'100%'}\n                onPressButton={() => {\n                  setIsVisibleType(true)\n                  setAccountTypeError('')\n                }}\n              />\n              {accountTypeError?.length > 0 && (\n                <Text style={styles.errorText}>\n                  {accountTypeError}\n                </Text>\n              )}\n              <TextInput\n                mode={'outlined'}\n                label={Strings.bankName?.toUpperCase()}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n                value={bankName}\n                onChangeText={(text) => {\n                  setBankName(text)\n                  setBankNameError('')\n                }}\n              />\n              {bankNameError?.length > 0 && (\n                <Text style={styles.errorText}>\n                  {bankNameError}\n                </Text>\n              )}\n              <TextInput\n                mode={'outlined'}\n                label={Strings.accountNumber?.toUpperCase()}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n                value={accountNumber}\n                keyboardType={'number-pad'}\n                onChangeText={(text) => {\n                  setAccountNumber(text)\n                  setAccountNumberError('')\n                }}\n              />\n              {accountNumberError?.length > 0 && (\n                <Text style={styles.errorText}>\n                  {accountNumberError}\n                </Text>\n              )}\n              <TextInput\n                mode={'outlined'}\n                label={Strings.routingNumber?.toUpperCase()}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n                value={routingNumber}\n                keyboardType={'number-pad'}\n                onChangeText={(text) => {\n                  setRoutingNumber(text)\n                  setRoutingNumberError('')\n                }}\n              />\n              {routingNumberError?.length > 0 && (\n                <Text style={styles.errorText}>\n                  {routingNumberError}\n                </Text>\n              )}\n              <TextInput\n                mode={'outlined'}\n                label={\"US\"}\n                // placeholderTextColor={\"Black\"}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n                disabled\n              />\n              {/* <View style={styles.checkingAccountParent}>\n                <Text style={styles.checkingAccount}>\n                  {Strings.checkingAccount}\n                </Text>\n                <Switch\n                  value={isSwitchOn}\n                  onValueChange={() => setIsSwitchOn(!isSwitchOn)}\n                  color={Colors[theme]?.blue}\n                />\n              </View> */}\n              {/* <TextInput\n                mode={'outlined'}\n                label={Strings.emailOptional?.toUpperCase()}\n                style={styles.textInput}\n                activeOutlineColor={Colors[theme]?.black}\n              /> */}\n              {/* <TextInput\n                multiline\n                mode={'outlined'}\n                label={Strings.notes}\n                placeholder={Strings.notes}\n                defaultValue={' '}\n                style={[styles.textInput, styles.textInputMulti]}\n                textAlignVertical={'top'}\n                activeOutlineColor={Colors[theme]?.black}\n                maxLength={250}\n              /> */}\n              {/* <View style={styles.onlyVisibleParent}>\n                <Text style={styles.onlyVisible}>{Strings.onlyVisible}</Text>\n                <Text style={styles.rangeText}>0/250</Text>\n              </View> */}\n            </KeyboardAvoidingView>\n          </ScrollView>\n        </View>\n      </View>\n      <View style={styles.reviewButtonParent}>\n        <CustomButton\n          theme={theme}\n          buttonTitle={Strings.review}\n          buttonTitleStyle={styles.review}\n          buttonStyle={styles.reviewButtonStyle}\n          onBtnPress={() => addAccountPress()}\n        />\n      </View>\n      <Modal visible={isVisibleType} transparent>\n        <SafeAreaView style={styles.modalParent}>\n          <View style={styles.modalContainer}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>{Strings.type}</Text>\n            </View>\n            <View style={styles.divider} />\n            <View style={styles.modalList}>\n              {type?.map((item, index) => {\n                const isSelected = item === selectedType;\n                return (\n                  <View key={index}>\n                    <TouchableOpacity\n                      style={styles.itemParent}\n                      onPress={() => {\n                        setSelectedType(item);\n                        setIsVisibleType(false);\n                      }}>\n                      <Text\n                        style={[\n                          styles.modalItem,\n                          isSelected && styles.selectedModalItem,\n                        ]}>\n                        {item}\n                      </Text>\n                      {isSelected ? (\n                        <Icon\n                          name=\"checkmark\"\n                          size={moderateScale(24)}\n                          color={Colors[theme]?.blue}\n                        />\n                      ) : (\n                        <></>\n                      )}\n                    </TouchableOpacity>\n                    <View style={styles.divider} />\n                  </View>\n                );\n              })}\n            </View>\n          </View>\n        </SafeAreaView>\n      </Modal>\n    </View>\n  );\n};\n\nexport default PaperCheckScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}