{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"label\",\"active\",\"theme\",\"style\",\"onPress\",\"accessibilityLabel\",\"right\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"../Typography/Text\";import Icon from\"../Icon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../core/theming\";var DrawerItem=function DrawerItem(_ref){var icon=_ref.icon,label=_ref.label,active=_ref.active,theme=_ref.theme,style=_ref.style,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,right=_ref.right,rest=_objectWithoutProperties(_ref,_excluded);var colors=theme.colors,roundness=theme.roundness;var backgroundColor=active?color(colors.primary).alpha(0.12).rgb().string():'transparent';var contentColor=active?colors.primary:color(colors.text).alpha(0.68).rgb().string();var font=theme.fonts.medium;var labelMargin=icon?32:0;return React.createElement(View,rest,React.createElement(TouchableRipple,{borderless:true,delayPressIn:0,onPress:onPress,style:[styles.container,{backgroundColor:backgroundColor,borderRadius:roundness},style],accessibilityTraits:active?['button','selected']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{selected:active},accessibilityLabel:accessibilityLabel},React.createElement(View,{style:styles.wrapper},React.createElement(View,{style:styles.content},icon?React.createElement(Icon,{source:icon,size:24,color:contentColor}):null,React.createElement(Text,{selectable:false,numberOfLines:1,style:[styles.label,_objectSpread(_objectSpread({color:contentColor},font),{},{marginLeft:labelMargin})]},label)),right===null||right===void 0?void 0:right({color:contentColor}))));};DrawerItem.displayName='Drawer.Item';var styles=StyleSheet.create({container:{marginHorizontal:10,marginVertical:4},wrapper:{flexDirection:'row',alignItems:'center',padding:8},content:{flex:1,flexDirection:'row',alignItems:'center'},label:{marginRight:32}});export default withTheme(DrawerItem);","map":{"version":3,"names":["color","React","View","StyleSheet","Text","Icon","TouchableRipple","withTheme","DrawerItem","_ref","icon","label","active","theme","style","onPress","accessibilityLabel","right","rest","_objectWithoutProperties","_excluded","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","createElement","borderless","delayPressIn","styles","container","borderRadius","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","wrapper","content","source","size","selectable","numberOfLines","_objectSpread","marginLeft","displayName","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","flex","marginRight"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-paper/lib/module/components/Drawer/DrawerItem.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const { colors, roundness } = theme;\n  const backgroundColor = active\n    ? color(colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? colors.primary\n    : color(colors.text).alpha(0.68).rgb().string();\n  const font = theme.fonts.medium;\n  const labelMargin = icon ? 32 : 0;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius: roundness },\n          style,\n        ]}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n      >\n        <View style={styles.wrapper}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  ...font,\n                  marginLeft: labelMargin,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}