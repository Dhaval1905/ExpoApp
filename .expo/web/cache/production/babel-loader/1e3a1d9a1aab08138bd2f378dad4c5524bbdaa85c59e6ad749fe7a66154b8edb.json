{"ast":null,"code":"export var BACK='Navigation/BACK';export var INIT='Navigation/INIT';export var NAVIGATE='Navigation/NAVIGATE';export var SET_PARAMS='Navigation/SET_PARAMS';export var back=function back(){var payload=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return{type:BACK,key:payload.key,immediate:payload.immediate};};export var init=function init(){var payload=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action={type:INIT};if(payload.params){action.params=payload.params;}return action;};export var navigate=function navigate(payload){var action={type:NAVIGATE,routeName:payload.routeName};if(payload.params){action.params=payload.params;}if(payload.action){action.action=payload.action;}if(payload.key){action.key=payload.key;}return action;};export var setParams=function setParams(payload){return{type:SET_PARAMS,key:payload.key,params:payload.params,preserveFocus:true};};","map":{"version":3,"names":["BACK","INIT","NAVIGATE","SET_PARAMS","back","payload","arguments","length","undefined","type","key","immediate","init","action","params","navigate","routeName","setParams","preserveFocus"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-navigation/node_modules/@react-navigation/core/lib/module/NavigationActions.ts"],"sourcesContent":["export interface NavigationParams {\n  [key: string]: any;\n}\n\nexport interface NavigationNavigateActionPayload {\n  routeName: string;\n  params?: NavigationParams;\n\n  // The action to run inside the sub-router\n  action?: NavigationNavigateAction;\n\n  key?: string;\n}\n\nexport interface NavigationNavigateAction\n  extends NavigationNavigateActionPayload {\n  type: 'Navigation/NAVIGATE';\n}\n\nexport interface NavigationBackActionPayload {\n  key?: string | null;\n  immediate?: boolean;\n}\n\nexport interface NavigationBackAction extends NavigationBackActionPayload {\n  type: 'Navigation/BACK';\n}\n\nexport interface NavigationInitActionPayload {\n  params?: NavigationParams;\n}\n\nexport interface NavigationInitAction extends NavigationInitActionPayload {\n  type: 'Navigation/INIT';\n}\n\nexport interface NavigationSetParamsActionPayload {\n  // The key of the route where the params should be set\n  key: string;\n\n  // The new params to merge into the existing route params\n  params?: NavigationParams;\n}\n\nexport interface NavigationSetParamsAction\n  extends NavigationSetParamsActionPayload {\n  type: 'Navigation/SET_PARAMS';\n  preserveFocus: true;\n}\n\n// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS';\n\n// Action creators\nexport const back = (\n  payload: NavigationBackActionPayload = {}\n): NavigationBackAction => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n});\n\nexport const init = (payload: NavigationInitActionPayload = {}) => {\n  const action: NavigationInitAction = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\n\nexport const navigate = (\n  payload: NavigationNavigateActionPayload\n): NavigationNavigateAction => {\n  const action: NavigationNavigateAction = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\n\nexport const setParams = (\n  payload: NavigationSetParamsActionPayload\n): NavigationSetParamsAction => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true,\n});\n"],"mappings":"AAmDA,MAAO,IAAM,CAAAA,IAAI,CAAG,iBAAb,CACP,MAAO,IAAM,CAAAC,IAAI,CAAG,iBAAb,CACP,MAAO,IAAM,CAAAC,QAAQ,CAAG,qBAAjB,CACP,MAAO,IAAM,CAAAC,UAAU,CAAG,uBAAnB,CAGP,MAAO,IAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAA,KACf,CAAAC,OAAoC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EADrB,OAEQ,CAC1BG,IAAI,CAAET,IADoB,CAE1BU,GAAG,CAAEL,OAAO,CAACK,GAFa,CAG1BC,SAAS,CAAEN,OAAO,CAACM,SAHO,CAFR,EAAb,CAQP,MAAO,IAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAA,CAAkD,IAA9C,CAAAP,OAAoC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAxC,CAClB,GAAM,CAAAO,MAA4B,CAAG,CACnCJ,IAAI,CAAER,IAD6B,CAArC,CAGA,GAAII,OAAO,CAACS,MAAZ,CAAoB,CAClBD,MAAM,CAACC,MAAP,CAAgBT,OAAO,CAACS,MAAxB,CACD,CACD,MAAO,CAAAD,MAAP,CACD,CARM,CAUP,MAAO,IAAM,CAAAE,QAAQ,CACnB,QADW,CAAAA,QAAQA,CACnBV,OADsB,CAEO,CAC7B,GAAM,CAAAQ,MAAgC,CAAG,CACvCJ,IAAI,CAAEP,QADiC,CAEvCc,SAAS,CAAEX,OAAO,CAACW,SAFoB,CAAzC,CAIA,GAAIX,OAAO,CAACS,MAAZ,CAAoB,CAClBD,MAAM,CAACC,MAAP,CAAgBT,OAAO,CAACS,MAAxB,CACD,CACD,GAAIT,OAAO,CAACQ,MAAZ,CAAoB,CAClBA,MAAM,CAACA,MAAP,CAAgBR,OAAO,CAACQ,MAAxB,CACD,CACD,GAAIR,OAAO,CAACK,GAAZ,CAAiB,CACfG,MAAM,CAACH,GAAP,CAAaL,OAAO,CAACK,GAArB,CACD,CACD,MAAO,CAAAG,MAAP,CACD,CAjBM,CAmBP,MAAO,IAAM,CAAAI,SAAS,CACpB,QADW,CAAAA,SAASA,CACpBZ,OADuB,QAEQ,CAC/BI,IAAI,CAAEN,UADyB,CAE/BO,GAAG,CAAEL,OAAO,CAACK,GAFkB,CAG/BI,MAAM,CAAET,OAAO,CAACS,MAHe,CAI/BI,aAAa,CAAE,IAJgB,CAFR,EAAlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}