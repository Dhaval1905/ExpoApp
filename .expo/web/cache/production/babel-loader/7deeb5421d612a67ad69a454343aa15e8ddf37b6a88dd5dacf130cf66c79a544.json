{"ast":null,"code":"module.exports={get StateUtils(){return require(\"./StateUtils\").default;},get getNavigation(){return require(\"./getNavigation\").default;},get createNavigator(){return require(\"./navigators/createNavigator\").default;},get NavigationContext(){return require(\"./views/NavigationContext\").default;},get NavigationProvider(){return require(\"./views/NavigationContext\").default.Provider;},get NavigationConsumer(){return require(\"./views/NavigationContext\").default.Consumer;},get createSwitchNavigator(){return require(\"./navigators/createSwitchNavigator\").default;},get ThemeContext(){return require(\"./views/ThemeContext\").default;},get ThemeProvider(){return require(\"./views/ThemeContext\").default.Provider;},get ThemeConsumer(){return require(\"./views/ThemeContext\").default.Consumer;},get ThemeColors(){return require(\"./ThemeColors\").default;},get useTheme(){return require(\"./useTheme\").default;},get NavigationActions(){return require(\"./NavigationActions\");},get StackActions(){return require(\"./routers/StackActions\");},get SwitchActions(){return require(\"./routers/SwitchActions\");},get StackRouter(){return require(\"./routers/StackRouter\").default;},get TabRouter(){return require(\"./routers/TabRouter\").default;},get SwitchRouter(){return require(\"./routers/SwitchRouter\").default;},get createConfigGetter(){return require(\"./routers/createConfigGetter\").default;},get getScreenForRouteName(){return require(\"./routers/getScreenForRouteName\").default;},get validateRouteConfigMap(){return require(\"./routers/validateRouteConfigMap\").default;},get getActiveChildNavigationOptions(){return require(\"./utils/getActiveChildNavigationOptions\").default;},get pathUtils(){return require(\"./routers/pathUtils\");},get SceneView(){return require(\"./views/SceneView\").default;},get SwitchView(){return require(\"./views/SwitchView/SwitchView\").default;},get NavigationEvents(){return require(\"./views/NavigationEvents\").default;},get withNavigation(){return require(\"./views/withNavigation\").default;},get withNavigationFocus(){return require(\"./views/withNavigationFocus\").default;}};","map":{"version":3,"names":["module","exports","StateUtils","require","default","getNavigation","createNavigator","NavigationContext","NavigationProvider","Provider","NavigationConsumer","Consumer","createSwitchNavigator","ThemeContext","ThemeProvider","ThemeConsumer","ThemeColors","useTheme","NavigationActions","StackActions","SwitchActions","StackRouter","TabRouter","SwitchRouter","createConfigGetter","getScreenForRouteName","validateRouteConfigMap","getActiveChildNavigationOptions","pathUtils","SceneView","SwitchView","NavigationEvents","withNavigation","withNavigationFocus"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-navigation/node_modules/@react-navigation/core/lib/module/index.js"],"sourcesContent":["/* eslint-disable import/no-commonjs */\n\nmodule.exports = {\n  get StateUtils() {\n    return require('./StateUtils').default;\n  },\n  get getNavigation() {\n    return require('./getNavigation').default;\n  },\n\n  // Navigators\n  get createNavigator() {\n    return require('./navigators/createNavigator').default;\n  },\n  get NavigationContext() {\n    return require('./views/NavigationContext').default;\n  },\n  get NavigationProvider() {\n    return require('./views/NavigationContext').default.Provider;\n  },\n  get NavigationConsumer() {\n    return require('./views/NavigationContext').default.Consumer;\n  },\n  get createSwitchNavigator() {\n    return require('./navigators/createSwitchNavigator').default;\n  },\n\n  // Themes\n  get ThemeContext() {\n    return require('./views/ThemeContext').default;\n  },\n  get ThemeProvider() {\n    return require('./views/ThemeContext').default.Provider;\n  },\n  get ThemeConsumer() {\n    return require('./views/ThemeContext').default.Consumer;\n  },\n  get ThemeColors() {\n    return require('./ThemeColors').default;\n  },\n  get useTheme() {\n    return require('./useTheme').default;\n  },\n\n  // Actions\n  get NavigationActions() {\n    return require('./NavigationActions');\n  },\n  get StackActions() {\n    return require('./routers/StackActions');\n  },\n  get SwitchActions() {\n    return require('./routers/SwitchActions');\n  },\n\n  // Routers\n  get StackRouter() {\n    return require('./routers/StackRouter').default;\n  },\n  get TabRouter() {\n    return require('./routers/TabRouter').default;\n  },\n  get SwitchRouter() {\n    return require('./routers/SwitchRouter').default;\n  },\n\n  get createConfigGetter() {\n    return require('./routers/createConfigGetter').default;\n  },\n  get getScreenForRouteName() {\n    return require('./routers/getScreenForRouteName').default;\n  },\n  get validateRouteConfigMap() {\n    return require('./routers/validateRouteConfigMap').default;\n  },\n\n  // Utils\n  get getActiveChildNavigationOptions() {\n    return require('./utils/getActiveChildNavigationOptions').default;\n  },\n  get pathUtils() {\n    return require('./routers/pathUtils');\n  },\n\n  get SceneView() {\n    return require('./views/SceneView').default;\n  },\n\n  // SwitchView\n  get SwitchView() {\n    return require('./views/SwitchView/SwitchView').default;\n  },\n\n  // NavigationEvents\n  get NavigationEvents() {\n    return require('./views/NavigationEvents').default;\n  },\n\n  // HOCs\n  get withNavigation() {\n    return require('./views/withNavigation').default;\n  },\n  get withNavigationFocus() {\n    return require('./views/withNavigationFocus').default;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}