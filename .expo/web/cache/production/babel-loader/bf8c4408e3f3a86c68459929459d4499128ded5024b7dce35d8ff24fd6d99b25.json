{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useRoute}from'@react-navigation/native';import React,{useState}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{TextInput}from'react-native-paper';import{useSelector}from'react-redux';import{CustomButton,CustomHeader}from\"../../components\";import{Strings}from\"../../constants\";import{Colors}from\"../../theme\";import styling from\"./EditMailingAddressStyle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditMailingAddressScreen=function EditMailingAddressScreen(_ref){var _route$params,_userDetails$data,_userDetails$data$bus,_Strings$mailingAddre,_Colors$theme;var navigation=_ref.navigation;var route=useRoute();var theme=route==null?void 0:(_route$params=route.params)==null?void 0:_route$params.theme;var styles=styling(theme);var userDetails=useSelector(function(state){var _state$user;return state==null?void 0:(_state$user=state.user)==null?void 0:_state$user.login;});var _useState=useState((userDetails==null?void 0:(_userDetails$data=userDetails.data)==null?void 0:(_userDetails$data$bus=_userDetails$data.businessDetail)==null?void 0:_userDetails$data$bus.email)||''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];return _jsxs(View,{style:styles.screen,children:[_jsx(CustomHeader,{theme:theme,headerTitle:Strings.editMailingAddress,onPressBack:function onPressBack(){return navigation.goBack();}}),_jsx(View,{style:styles.container,children:_jsxs(View,{style:styles.card,children:[_jsx(Text,{style:styles.cardTitle,children:Strings.mailingAddressQuestion}),_jsx(TextInput,{label:(_Strings$mailingAddre=Strings.mailingAddress)==null?void 0:_Strings$mailingAddre.toUpperCase(),mode:'outlined',theme:{roundness:45},style:styles.textInput,activeOutlineColor:(_Colors$theme=Colors[theme])==null?void 0:_Colors$theme.grey500,value:email,onChangeText:function onChangeText(text){return setEmail(text);}})]})}),_jsx(View,{style:styles.bottomView,children:_jsx(CustomButton,{theme:theme,buttonTitle:Strings.continue,buttonStyle:styles.continueButton})})]});};export default EditMailingAddressScreen;","map":{"version":3,"names":["useRoute","React","useState","Text","View","TextInput","useSelector","CustomButton","CustomHeader","Strings","Colors","styling","jsx","_jsx","jsxs","_jsxs","EditMailingAddressScreen","_ref","_route$params","_userDetails$data","_userDetails$data$bus","_Strings$mailingAddre","_Colors$theme","navigation","route","theme","params","styles","userDetails","state","_state$user","user","login","_useState","data","businessDetail","email","_useState2","_slicedToArray","setEmail","style","screen","children","headerTitle","editMailingAddress","onPressBack","goBack","container","card","cardTitle","mailingAddressQuestion","label","mailingAddress","toUpperCase","mode","roundness","textInput","activeOutlineColor","grey500","value","onChangeText","text","bottomView","buttonTitle","continue","buttonStyle","continueButton"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/EditMailingAddress/EditMailingAddressScreen.js"],"sourcesContent":["import { useRoute } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { Text, View } from 'react-native';\nimport { TextInput } from 'react-native-paper';\nimport { useSelector } from 'react-redux';\nimport { CustomButton, CustomHeader } from '../../components';\nimport { Strings } from '../../constants';\nimport { Colors } from '../../theme';\nimport styling from './EditMailingAddressStyle';\n\nconst EditMailingAddressScreen = ({ navigation }) => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n  const userDetails = useSelector(state => state?.user?.login)\n  const [email, setEmail] = useState(userDetails?.data?.businessDetail?.email || '')\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={Strings.editMailingAddress}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.container}>\n        <View style={styles.card}>\n          <Text style={styles.cardTitle}>{Strings.mailingAddressQuestion}</Text>\n          <TextInput\n            label={Strings.mailingAddress?.toUpperCase()}\n            mode={'outlined'}\n            theme={{roundness:45}}\n            style={styles.textInput}\n            activeOutlineColor={Colors[theme]?.grey500}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n          />\n          {/* <TextInput\n            label={Strings.unitSuite?.toUpperCase()}\n            mode={'outlined'}\n            style={styles.textInput}\n            activeOutlineColor={Colors[theme]?.grey500}\n          /> */}\n          {/* <View style={styles.cityParent}>\n            <TextInput\n              label={Strings.city?.toUpperCase()}\n              mode={'outlined'}\n              style={styles.textInputRows}\n              activeOutlineColor={Colors[theme]?.grey500}\n            />\n            <TextInput\n              label={Strings.state?.toUpperCase()}\n              mode={'outlined'}\n              style={styles.textInputRows}\n              activeOutlineColor={Colors[theme]?.grey500}\n            />\n            <TextInput\n              label={Strings.zip?.toUpperCase()}\n              mode={'outlined'}\n              style={styles.textInputRows}\n              activeOutlineColor={Colors[theme]?.grey500}\n            />\n          </View> */}\n        </View>\n      </View>\n      <View style={styles.bottomView}>\n        <CustomButton\n          theme={theme}\n          buttonTitle={Strings.continue}\n          buttonStyle={styles.continueButton}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default EditMailingAddressScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}