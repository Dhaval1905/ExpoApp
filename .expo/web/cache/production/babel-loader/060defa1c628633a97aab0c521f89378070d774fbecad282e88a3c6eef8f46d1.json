{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.useTNodeChildrenProps=useTNodeChildrenProps;exports.default=void 0;var _SharedPropsProvider=require(\"./context/SharedPropsProvider\");var _TChildrenRenderer=require(\"./TChildrenRenderer\");var _renderChildren=_interopRequireDefault(require(\"./renderChildren\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isCollapsible(tnode){return tnode.type==='block'||tnode.type==='phrasing';}function useTNodeChildrenProps(_ref){var tnode=_ref.tnode,propsForChildren=_ref.propsForChildren,_ref$disableMarginCol=_ref.disableMarginCollapsing,disableMarginCollapsing=_ref$disableMarginCol===void 0?false:_ref$disableMarginCol,renderChild=_ref.renderChild;var _ref2=(0,_SharedPropsProvider.useSharedProps)(),enableExperimentalMarginCollapsing=_ref2.enableExperimentalMarginCollapsing;var shouldCollapseChildren=enableExperimentalMarginCollapsing&&!disableMarginCollapsing&&isCollapsible(tnode);return{propsForChildren:propsForChildren,disableMarginCollapsing:!shouldCollapseChildren,tchildren:tnode.children,renderChild:renderChild};}function TNodeChildrenRenderer(props){if(props.tnode.type==='text'){return props.tnode.data;}return(0,_renderChildren.default)(useTNodeChildrenProps(props));}TNodeChildrenRenderer.defaultProps=_TChildrenRenderer.tchildrenRendererDefaultProps;var _default=TNodeChildrenRenderer;exports.default=_default;","map":{"version":3,"names":["_SharedPropsProvider","require","_TChildrenRenderer","_renderChildren","_interopRequireDefault","isCollapsible","tnode","type","useTNodeChildrenProps","_ref","propsForChildren","_ref$disableMarginCol","disableMarginCollapsing","renderChild","_ref2","useSharedProps","enableExperimentalMarginCollapsing","shouldCollapseChildren","tchildren","children","TNodeChildrenRenderer","props","data","default","defaultProps","tchildrenRendererDefaultProps"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.tsx"],"sourcesContent":["import { ReactElement } from 'react';\nimport { TNode } from '@native-html/transient-render-engine';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport { tchildrenRendererDefaultProps } from './TChildrenRenderer';\nimport {\n  TChildrenRendererProps,\n  TNodeChildrenRendererProps\n} from './shared-types';\nimport renderChildren from './renderChildren';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * A hook especially useful when one need to tamper with children in a custom\n * renderer. Should be used with {@link TChildrenRenderer}.\n *\n * @example\n * For example, a custom renderer which inserts ads in an article:\n *\n * ```tsx\n * function ArticleRenderer(props) {\n *   const { tnode, TDefaultRenderer, ...defaultRendererProps } = props;\n *   const tchildrenProps = useTNodeChildrenProps(props);\n *   const firstChildrenChunk = tnode.children.slice(0, 2);\n *   const secondChildrenChunk = tnode.children.slice(2, 4);\n *   const thirdChildrenChunk = tnode.children.slice(4, 5);\n *   return (\n *     <TDefaultRenderer tnode={tnode} {...defaultRendererProps}>\n *       <TChildrenRenderer {...tchildrenProps} tchildren={firstChildrenChunk} />\n *       {firstChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={secondChildrenChunk} />\n *       {secondChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={thirdChildrenChunk} />\n *     </TDefaultRenderer>\n *   );\n * };\n * ```\n */\nexport function useTNodeChildrenProps({\n  tnode,\n  propsForChildren,\n  disableMarginCollapsing = false,\n  renderChild\n}: TNodeChildrenRendererProps): TChildrenRendererProps {\n  const { enableExperimentalMarginCollapsing } = useSharedProps();\n  const shouldCollapseChildren =\n    enableExperimentalMarginCollapsing &&\n    !disableMarginCollapsing &&\n    isCollapsible(tnode);\n  return {\n    propsForChildren,\n    disableMarginCollapsing: !shouldCollapseChildren,\n    tchildren: tnode.children,\n    renderChild\n  };\n}\n\n/**\n * A component to render all children of a {@link TNode}.\n */\nfunction TNodeChildrenRenderer(\n  props: TNodeChildrenRendererProps\n): ReactElement {\n  if (props.tnode.type === 'text') {\n    // see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n    return props.tnode.data as unknown as ReactElement;\n  }\n  // A tnode type will never change. We can safely\n  // ignore the non-conditional rule of hooks.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return renderChildren(useTNodeChildrenProps(props));\n}\n\n/**\n * @ignore\n */\nTNodeChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\n\nexport default TNodeChildrenRenderer;\n"],"mappings":"iJAEA,IAAAA,oBAAA,CAAAC,OAAA,kCACA,IAAAC,kBAAA,CAAAD,OAAA,wBAKA,IAAAE,eAAA,CAAAC,sBAAA,CAAAH,OAAA,sB,mFAEA,QAAS,CAAAI,aAATA,CAAuBC,KAAvB,CAAqC,CACnC,MAAO,CAAAA,KAAK,CAACC,IAAN,GAAe,OAAf,EAA0BD,KAAK,CAACC,IAAN,GAAe,UAAhD,CACD,CA4BM,QAAS,CAAAC,qBAATA,CAAAC,IAAA,CAKgD,IAJrD,CAAAH,KADoC,CAAAG,IAAA,CACpCH,KADoC,CAEpCI,gBAFoC,CAAAD,IAAA,CAEpCC,gBAFoC,CAAAC,qBAAA,CAAAF,IAAA,CAGpCG,uBAAuB,CAAvBA,uBAAuB,CAAAD,qBAAA,UAAG,KAHU,CAAAA,qBAAA,CAIpCE,WAAA,CAAAJ,IAAA,CAAAI,WAAA,CAEA,IAAAC,KAAA,CAA+C,GAAAd,oBAAA,CAAAe,cAAA,GAA/C,CAAQC,kCAAA,CAAAF,KAAA,CAAAE,kCAAA,CACR,GAAM,CAAAC,sBAAsB,CAC1BD,kCAAkC,EAClC,CAACJ,uBADD,EAEAP,aAAa,CAACC,KAAD,CAHf,CAIA,MAAO,CACLI,gBADK,CACLA,gBADK,CAELE,uBAAuB,CAAE,CAACK,sBAFrB,CAGLC,SAAS,CAAEZ,KAAK,CAACa,QAHZ,CAILN,WAAA,CAAAA,WAJK,CAAP,CAMD,CAKD,QAAS,CAAAO,qBAATA,CACEC,KADF,CAEgB,CACd,GAAIA,KAAK,CAACf,KAAN,CAAYC,IAAZ,GAAqB,MAAzB,CAAiC,CAE/B,MAAO,CAAAc,KAAK,CAACf,KAAN,CAAYgB,IAAnB,CACD,CAID,MAAO,GAAAnB,eAAA,CAAAoB,OAAA,EAAef,qBAAqB,CAACa,KAAD,CAApC,CAAP,CACD,CAKDD,qBAAqB,CAACI,YAAtB,CAAqCtB,kBAAA,CAAAuB,6BAArC,C,aAEeL,qB"},"metadata":{},"sourceType":"script","externalDependencies":[]}