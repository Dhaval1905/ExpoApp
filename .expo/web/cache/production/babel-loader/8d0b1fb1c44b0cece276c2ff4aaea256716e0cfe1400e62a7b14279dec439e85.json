{"ast":null,"code":"import{isValidElementType}from'react-is';import invariant from\"../utils/invariant\";export default function getScreenForRouteName(routeConfigs,routeName){var routeConfig=routeConfigs[routeName];if(!routeConfig){throw new Error(\"There is no route defined for key \".concat(routeName,\".\\n\")+\"Must be one of: \".concat(Object.keys(routeConfigs).map(function(a){return\"'\".concat(a,\"'\");}).join(',')));}if(routeConfig.screen){return routeConfig.screen;}if(typeof routeConfig.getScreen==='function'){var screen=routeConfig.getScreen();invariant(isValidElementType(screen),\"The getScreen defined for route '\".concat(routeName,\" didn't return a valid \")+'screen or navigator.\\n\\n'+'Please pass it like this:\\n'+\"\".concat(routeName,\": {\\n  getScreen: () => require('./MyScreen').default\\n}\"));return screen;}return routeConfig;}","map":{"version":3,"names":["isValidElementType","invariant","getScreenForRouteName","routeConfigs","routeName","routeConfig","Error","concat","Object","keys","map","a","join","screen","getScreen"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-navigation/node_modules/@react-navigation/core/lib/module/routers/getScreenForRouteName.js"],"sourcesContent":["import { isValidElementType } from 'react-is';\n\nimport invariant from '../utils/invariant';\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nexport default function getScreenForRouteName(routeConfigs, routeName) {\n  const routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\n      `There is no route defined for key ${routeName}.\\n` +\n        `Must be one of: ${Object.keys(routeConfigs)\n          .map((a) => `'${a}'`)\n          .join(',')}`\n    );\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(\n      isValidElementType(screen),\n      `The getScreen defined for route '${routeName} didn't return a valid ` +\n        'screen or navigator.\\n\\n' +\n        'Please pass it like this:\\n' +\n        `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`\n    );\n    return screen;\n  }\n\n  return routeConfig;\n}\n"],"mappings":"AAAA,OAASA,kBAAT,KAAmC,UAAnC,CAEA,MAAO,CAAAC,SAAP,0BAMA,cAAe,SAAS,CAAAC,qBAATA,CAA+BC,YAA/B,CAA6CC,SAA7C,CAAwD,CACrE,GAAM,CAAAC,WAAW,CAAGF,YAAY,CAACC,SAAD,CAAhC,CAEA,GAAI,CAACC,WAAL,CAAkB,CAChB,KAAM,IAAI,CAAAC,KAAJ,CACJ,qCAAAC,MAAA,CAAqCH,SAArC,2BAAAG,MAAA,CACqBC,MAAM,CAACC,IAAP,CAAYN,YAAZ,EAChBO,GADgB,CACX,SAAAC,CAAD,YAAAJ,MAAA,CAAWI,CAAX,KADY,IAEhBC,IAFgB,CAEX,GAFW,CADrB,CADI,CAAN,CAMD,CAED,GAAIP,WAAW,CAACQ,MAAhB,CAAwB,CACtB,MAAO,CAAAR,WAAW,CAACQ,MAAnB,CACD,CAED,GAAI,MAAO,CAAAR,WAAW,CAACS,SAAnB,GAAiC,UAArC,CAAiD,CAC/C,GAAM,CAAAD,MAAM,CAAGR,WAAW,CAACS,SAAZ,EAAf,CACAb,SAAS,CACPD,kBAAkB,CAACa,MAAD,CADX,CAEP,oCAAAN,MAAA,CAAoCH,SAApC,4BACE,0BADF,CAEE,6BAFF,IAAAG,MAAA,CAGKH,SAHL,4DAFO,CAAT,CAOA,MAAO,CAAAS,MAAP,CACD,CAED,MAAO,CAAAR,WAAP,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}