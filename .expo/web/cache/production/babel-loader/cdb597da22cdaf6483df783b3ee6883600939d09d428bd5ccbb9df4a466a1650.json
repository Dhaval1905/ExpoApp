{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from'react';import Appearance from\"react-native-web/dist/exports/Appearance\";import Platform from\"react-native-web/dist/exports/Platform\";import Text from\"react-native-web/dist/exports/Text\";import DatePickerAndroid from\"./DatePickerAndroid\";import DatePickerIOS from\"./DatePickerIOS\";import{colorToHex}from\"./colorToHex\";import{throwIfInvalidProps}from\"./propChecker\";import{jsx as _jsx}from\"react/jsx-runtime\";var DatePicker=Platform.select({android:DatePickerAndroid,ios:DatePickerIOS,default:function _default(){return _jsx(Text,{children:\"DatePicker is not supported on this platform.\"});}});var DatePickerWrapper=function DatePickerWrapper(props){if(__DEV__)throwIfInvalidProps(props);return _jsx(DatePicker,_objectSpread(_objectSpread({ref:props.innerRef},props),{},{textColor:colorToHex(getTextColor(props)),theme:getTheme(props),fadeToColor:colorToHex(props.fadeToColor),title:getTitle(props),confirmText:props.confirmText?props.confirmText:'Confirm',cancelText:props.cancelText?props.cancelText:'Cancel',androidVariant:getAndroidVariant(props),minuteInterval:props.minuteInterval?props.minuteInterval:1,mode:props.mode?props.mode:'datetime',timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes==null?'':props.timeZoneOffsetInMinutes.toString()}));};var getTheme=function getTheme(props){if(props.theme)return props.theme;if(!Appearance)return'auto';return Appearance.getColorScheme();};var getTextColor=function getTextColor(props){if(props.textColor)return props.textColor;var darkTheme=getTheme(props)==='dark';if(darkTheme)return'white';return undefined;};var getAndroidVariant=function getAndroidVariant(props){var modal=props.modal,androidVariant=props.androidVariant;if(androidVariant)return androidVariant;return modal?'nativeAndroid':'iosClone';};var getTitle=function getTitle(props){var title=props.title,mode=props.mode;if(title===null)return'';if(title)return title;if(mode==='time')return'Select time';return'Select date';};export default React.memo(DatePickerWrapper);","map":{"version":3,"names":["React","Appearance","Platform","Text","DatePickerAndroid","DatePickerIOS","colorToHex","throwIfInvalidProps","jsx","_jsx","DatePicker","select","android","ios","default","_default","children","DatePickerWrapper","props","__DEV__","_objectSpread","ref","innerRef","textColor","getTextColor","theme","getTheme","fadeToColor","title","getTitle","confirmText","cancelText","androidVariant","getAndroidVariant","minuteInterval","mode","timeZoneOffsetInMinutes","toString","getColorScheme","darkTheme","undefined","modal","memo"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-date-picker/src/index.js"],"sourcesContent":["import React from 'react'\nimport { Appearance, Platform, Text } from 'react-native'\nimport DatePickerAndroid from './DatePickerAndroid'\nimport DatePickerIOS from './DatePickerIOS'\nimport { colorToHex } from './colorToHex'\nimport { throwIfInvalidProps } from './propChecker'\n\nconst DatePicker = Platform.select({\n  android: DatePickerAndroid,\n  ios: DatePickerIOS,\n  default: () => <Text>DatePicker is not supported on this platform.</Text>,\n})\n\nconst DatePickerWrapper = (props) => {\n  if (__DEV__) throwIfInvalidProps(props)\n  return (\n    <DatePicker\n      ref={props.innerRef}\n      {...props}\n      textColor={colorToHex(getTextColor(props))}\n      theme={getTheme(props)}\n      fadeToColor={colorToHex(props.fadeToColor)}\n      title={getTitle(props)}\n      confirmText={props.confirmText ? props.confirmText : 'Confirm'}\n      cancelText={props.cancelText ? props.cancelText : 'Cancel'}\n      androidVariant={getAndroidVariant(props)}\n      minuteInterval={props.minuteInterval ? props.minuteInterval : 1}\n      mode={props.mode ? props.mode : 'datetime'}\n      timeZoneOffsetInMinutes={\n        props.timeZoneOffsetInMinutes == null\n          ? ''\n          : props.timeZoneOffsetInMinutes.toString()\n      }\n    />\n  )\n}\n\nconst getTheme = (props) => {\n  if (props.theme) return props.theme\n  if (!Appearance) return 'auto'\n  return Appearance.getColorScheme()\n}\n\nconst getTextColor = (props) => {\n  if (props.textColor) return props.textColor\n  const darkTheme = getTheme(props) === 'dark'\n  if (darkTheme) return 'white'\n  return undefined\n}\n\nconst getAndroidVariant = (props) => {\n  const { modal, androidVariant } = props\n  if (androidVariant) return androidVariant\n  return modal ? 'nativeAndroid' : 'iosClone'\n}\n\nconst getTitle = (props) => {\n  const { title, mode } = props\n  if (title === null) return ''\n  if (title) return title\n  if (mode === 'time') return 'Select time'\n  return 'Select date'\n}\n\nexport default React.memo(DatePickerWrapper)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}