{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _defineProperty2=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.TRenderEngine=void 0;var _collapse=require(\"./flow/collapse\");var _hoist=require(\"./flow/hoist\");var _translate=require(\"./flow/translate\");var _omit=_interopRequireDefault(require(\"ramda/src/omit\"));var _cssProcessor=require(\"@native-html/css-processor\");var _parseDocument=_interopRequireDefault(require(\"./dom/parseDocument\"));var _TStylesMerger=require(\"./styles/TStylesMerger\");var _defaults=require(\"./styles/defaults\");var _TStyles=require(\"./styles/TStyles\");var _HTMLModelRegistry=_interopRequireDefault(require(\"./model/HTMLModelRegistry\"));var _domUtils=require(\"./dom/dom-utils\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function createStylesConfig(options){var _options$stylesConfig,_options$stylesConfig2;var enableUserAgentStyles=typeof(options===null||options===void 0?void 0:(_options$stylesConfig=options.stylesConfig)===null||_options$stylesConfig===void 0?void 0:_options$stylesConfig.enableUserAgentStyles)==='boolean'?options.stylesConfig.enableUserAgentStyles:_defaults.defaultStylesConfig.enableUserAgentStyles;var baseStyle=_objectSpread(_objectSpread({},enableUserAgentStyles?_defaults.defaultStylesConfig.baseStyle:(0,_omit.default)(['fontSize'],_defaults.defaultStylesConfig.baseStyle)),options===null||options===void 0?void 0:(_options$stylesConfig2=options.stylesConfig)===null||_options$stylesConfig2===void 0?void 0:_options$stylesConfig2.baseStyle);return _objectSpread(_objectSpread(_objectSpread({},_defaults.defaultStylesConfig),options===null||options===void 0?void 0:options.stylesConfig),{},{baseStyle:baseStyle});}var TRenderEngine=function(){function TRenderEngine(options){_classCallCheck(this,TRenderEngine);var _options$dangerouslyD,_options$dangerouslyD2,_options$cssProcessor,_stylesConfig$baseSty;_defineProperty(this,\"htmlParserOptions\",void 0);_defineProperty(this,\"dataFlowParams\",void 0);_defineProperty(this,\"hoistingEnabled\",void 0);_defineProperty(this,\"whitespaceCollapsingEnabled\",void 0);_defineProperty(this,\"selectDomRoot\",void 0);var stylesConfig=createStylesConfig(options);this.hoistingEnabled=!((_options$dangerouslyD=options===null||options===void 0?void 0:options.dangerouslyDisableHoisting)!==null&&_options$dangerouslyD!==void 0?_options$dangerouslyD:false);this.whitespaceCollapsingEnabled=!((_options$dangerouslyD2=options===null||options===void 0?void 0:options.dangerouslyDisableWhitespaceCollapsing)!==null&&_options$dangerouslyD2!==void 0?_options$dangerouslyD2:false);var modelRegistry=new _HTMLModelRegistry.default(options===null||options===void 0?void 0:options.customizeHTMLModels);var userSelectedFontSize=(options===null||options===void 0?void 0:(_options$cssProcessor=options.cssProcessorConfig)===null||_options$cssProcessor===void 0?void 0:_options$cssProcessor.rootFontSize)||((_stylesConfig$baseSty=stylesConfig.baseStyle)===null||_stylesConfig$baseSty===void 0?void 0:_stylesConfig$baseSty.fontSize);var stylesMerger=new _TStylesMerger.TStylesMerger(stylesConfig,modelRegistry,_objectSpread(_objectSpread(_objectSpread({},_cssProcessor.defaultCSSProcessorConfig),options===null||options===void 0?void 0:options.cssProcessorConfig),{},{rootFontSize:typeof userSelectedFontSize==='number'?userSelectedFontSize:14}));this.htmlParserOptions=_objectSpread({decodeEntities:true,lowerCaseTags:true,ignoredTags:options===null||options===void 0?void 0:options.ignoredDomTags,ignoreNode:options===null||options===void 0?void 0:options.ignoreDomNode,visitors:options===null||options===void 0?void 0:options.domVisitors},options===null||options===void 0?void 0:options.htmlParserOptions);this.dataFlowParams={stylesMerger:stylesMerger,modelRegistry:modelRegistry,setMarkersForTNode:options===null||options===void 0?void 0:options.setMarkersForTNode,baseStyles:new _TStyles.TStyles(stylesMerger.compileStyleDeclaration(stylesConfig.baseStyle)),removeLineBreaksAroundEastAsianDiscardSet:(options===null||options===void 0?void 0:options.removeLineBreaksAroundEastAsianDiscardSet)||false};this.selectDomRoot=options===null||options===void 0?void 0:options.selectDomRoot;}_createClass(TRenderEngine,[{key:\"normalizeDocument\",value:function normalizeDocument(document){var body;var head;for(var child of document.children){if(body&&head){break;}if((0,_domUtils.isDomElement)(child)&&child.tagName==='body'){body=child;}if((0,_domUtils.isDomElement)(child)&&child.tagName==='head'){head=child;}}if(!body&&!head){body=new _domUtils.Element('body',{});body.childNodes=document.children;document.children.forEach(function(c){c.parent=body;c.parentNode=body;});body.parent=document;body.parentNode=document;document.childNodes=[body];}return document;}},{key:\"parseDocument\",value:function parseDocument(html){var document=(0,_parseDocument.default)(html,this.htmlParserOptions);if(this.selectDomRoot){var selected=this.selectDomRoot(document);if(selected&&selected!==document){document.childNodes=[selected];selected.parent=document;}}for(var child of document.children){if((0,_domUtils.isDomElement)(child)&&child.tagName==='html'){document=child;break;}}return this.normalizeDocument(document);}},{key:\"buildTTreeFromDoc\",value:function buildTTreeFromDoc(document){var tdoc=(0,_translate.translateDocument)(document,this.dataFlowParams);var hoistedTDoc=this.hoistingEnabled?(0,_hoist.hoist)(tdoc):tdoc;var collapsedTDoc=this.whitespaceCollapsingEnabled?(0,_collapse.collapse)(hoistedTDoc):tdoc;return collapsedTDoc;}},{key:\"buildTTree\",value:function buildTTree(html){return this.buildTTreeFromDoc(this.parseDocument(html));}},{key:\"getHTMLElementsModels\",value:function getHTMLElementsModels(){return this.dataFlowParams.modelRegistry.modelRecords;}}]);return TRenderEngine;}();exports.TRenderEngine=TRenderEngine;","map":{"version":3,"names":["_collapse","require","_hoist","_translate","_omit","_interopRequireDefault","_cssProcessor","_parseDocument","_TStylesMerger","_defaults","_TStyles","_HTMLModelRegistry","_domUtils","createStylesConfig","options","_options$stylesConfig","_options$stylesConfig2","enableUserAgentStyles","stylesConfig","defaultStylesConfig","baseStyle","_objectSpread","default","TRenderEngine","_classCallCheck","_options$dangerouslyD","_options$dangerouslyD2","_options$cssProcessor","_stylesConfig$baseSty","_defineProperty","hoistingEnabled","dangerouslyDisableHoisting","whitespaceCollapsingEnabled","dangerouslyDisableWhitespaceCollapsing","modelRegistry","customizeHTMLModels","userSelectedFontSize","cssProcessorConfig","rootFontSize","fontSize","stylesMerger","TStylesMerger","defaultCSSProcessorConfig","htmlParserOptions","decodeEntities","lowerCaseTags","ignoredTags","ignoredDomTags","ignoreNode","ignoreDomNode","visitors","domVisitors","dataFlowParams","setMarkersForTNode","baseStyles","TStyles","compileStyleDeclaration","removeLineBreaksAroundEastAsianDiscardSet","selectDomRoot","_createClass","key","value","normalizeDocument","document","body","head","child","children","isDomElement","tagName","Element","childNodes","forEach","c","parent","parentNode","parseDocument","html","selected","buildTTreeFromDoc","tdoc","translateDocument","hoistedTDoc","hoist","collapsedTDoc","collapse","buildTTree","getHTMLElementsModels","modelRecords"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/node_modules/@native-html/transient-render-engine/lib/commonjs/TRenderEngine.ts"],"sourcesContent":["import { collapse } from './flow/collapse';\nimport { hoist } from './flow/hoist';\nimport { translateDocument } from './flow/translate';\nimport { ParserOptions as HTMLParserOptions } from 'htmlparser2';\nimport omit from 'ramda/src/omit';\nimport {\n  CSSProcessorConfig,\n  defaultCSSProcessorConfig\n} from '@native-html/css-processor';\nimport parseDocument from './dom/parseDocument';\nimport { StylesConfig } from './styles/types';\nimport { TStylesMerger } from './styles/TStylesMerger';\nimport { defaultStylesConfig } from './styles/defaults';\nimport { TStyles } from './styles/TStyles';\nimport HTMLModelRegistry from './model/HTMLModelRegistry';\nimport { HTMLModelRecord, TagName } from './model/model-types';\nimport { DefaultHTMLElementModelsStatic } from './model/defaultHTMLElementModels';\nimport { DataFlowParams } from './flow/types';\nimport {\n  Document,\n  Element,\n  Node,\n  NodeWithChildren,\n  isDomElement\n} from './dom/dom-utils';\nimport { SetMarkersForTNode, TDocument } from './tree/tree-types';\nimport { DomHandlerOptions, DomVisitorCallbacks } from './dom/DomHandler';\n\nexport interface TRenderEngineOptions<E extends string = never> {\n  /**\n   * Customization for CSS inline processing.\n   */\n  readonly cssProcessorConfig?: Partial<CSSProcessorConfig>;\n  /**\n   * Options for htmlparser2 library parser.\n   */\n  readonly htmlParserOptions?: Readonly<HTMLParserOptions>;\n  /**\n   * Various configuration for styling.\n   */\n  readonly stylesConfig?: StylesConfig;\n  /**\n   * Customize supported tags in the engine.\n   *\n   * @remarks If you need to add new tags, always use lowercase names.\n   */\n  readonly customizeHTMLModels?: (\n    defaultHTMLElementModels: DefaultHTMLElementModelsStatic\n  ) => HTMLModelRecord<TagName | E>;\n  /**\n   * Remove line breaks around special east-asian characters such as defined here:\n   * https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n   *\n   * @defaultValue false\n   */\n  readonly removeLineBreaksAroundEastAsianDiscardSet?: boolean;\n  /**\n   * A list of tags which should not be included in the DOM.\n   */\n  readonly ignoredDomTags?: string[];\n\n  /**\n   * An object which callbacks will be invoked when a DOM element or text node\n   * has been parsed and its children attached.\n   *\n   * @remark Each callback is applied during parsing, thus with very little\n   * overhead. However, it means that one node next siblings won't be\n   * available. If you need some siblings logic, apply this logic to the\n   * children of this node.\n   */\n  readonly domVisitors?: DomVisitorCallbacks;\n\n  /**\n   * Ignore specific DOM nodes.\n   *\n   * **Warning**: when this function is invoked, the node has not yet been\n   * attached to its parent or siblings. Use the second argument (`parent`)\n   * if you need to perform logic based on parent.\n   *\n   * @remarks The function is applied during parsing, thus with very little\n   * overhead. However, it means that one node next siblings won't be\n   * available.\n   *\n   * @returns `true` if this node should not be included in the DOM, anything\n   * else otherwise.\n   */\n  readonly ignoreDomNode?: (\n    node: Node,\n    parent: NodeWithChildren\n  ) => boolean | void | unknown;\n\n  /**\n   * Select the DOM root before TTree generation. For example, you could\n   * iterate over children until you reach an article element and return this\n   * element.\n   *\n   * @remarks Applied after DOM parsing, before normalization and TTree\n   * construction. Before normalization implies that a body will be added in\n   * the tree **after** selecting root.\n   */\n  readonly selectDomRoot?: (node: NodeWithChildren) => any;\n\n  /**\n   * Customize markers logic by extracting markers from TNode properties such\n   * as classes, ids, attributes, tagName ...\n   *\n   * @remarks If you are using JavaScript, you can use module augmentation and\n   * declaration merging to add properties to the {@link Markers} shape.\n   */\n  readonly setMarkersForTNode?: SetMarkersForTNode;\n\n  /**\n   * Disable hoisting. Note that your layout might break!\n   */\n  readonly dangerouslyDisableHoisting?: boolean;\n  /**\n   * Disable whitespace collapsing. Especially useful if your html is\n   * being pre-processed server-side with a minifier.\n   */\n  readonly dangerouslyDisableWhitespaceCollapsing?: boolean;\n}\n\nfunction createStylesConfig(\n  options?: TRenderEngineOptions\n): Required<StylesConfig> {\n  const enableUserAgentStyles =\n    typeof options?.stylesConfig?.enableUserAgentStyles === 'boolean'\n      ? options.stylesConfig.enableUserAgentStyles\n      : defaultStylesConfig.enableUserAgentStyles;\n  const baseStyle = {\n    ...(enableUserAgentStyles\n      ? defaultStylesConfig.baseStyle\n      : omit(['fontSize'], defaultStylesConfig.baseStyle)),\n    ...options?.stylesConfig?.baseStyle\n  };\n  return {\n    ...defaultStylesConfig,\n    ...options?.stylesConfig,\n    baseStyle\n  };\n}\n\n/**\n * The Transient Render Engine.\n *\n * @public\n */\nexport class TRenderEngine {\n  private htmlParserOptions: Readonly<HTMLParserOptions & DomHandlerOptions>;\n  private dataFlowParams: DataFlowParams;\n  private hoistingEnabled: boolean;\n  private whitespaceCollapsingEnabled: boolean;\n  private selectDomRoot: TRenderEngineOptions['selectDomRoot'];\n  constructor(options?: TRenderEngineOptions) {\n    const stylesConfig = createStylesConfig(options);\n    this.hoistingEnabled = !(options?.dangerouslyDisableHoisting ?? false);\n    this.whitespaceCollapsingEnabled = !(\n      options?.dangerouslyDisableWhitespaceCollapsing ?? false\n    );\n    const modelRegistry = new HTMLModelRegistry(options?.customizeHTMLModels);\n    const userSelectedFontSize =\n      options?.cssProcessorConfig?.rootFontSize ||\n      stylesConfig.baseStyle?.fontSize;\n    // TODO log a warning when type is string\n    const stylesMerger = new TStylesMerger(stylesConfig, modelRegistry, {\n      ...defaultCSSProcessorConfig,\n      ...options?.cssProcessorConfig,\n      rootFontSize:\n        typeof userSelectedFontSize === 'number' ? userSelectedFontSize : 14\n    });\n    this.htmlParserOptions = {\n      decodeEntities: true,\n      lowerCaseTags: true,\n      ignoredTags: options?.ignoredDomTags,\n      ignoreNode: options?.ignoreDomNode,\n      visitors: options?.domVisitors,\n      ...options?.htmlParserOptions\n    };\n    this.dataFlowParams = {\n      stylesMerger,\n      modelRegistry,\n      setMarkersForTNode: options?.setMarkersForTNode,\n      baseStyles: new TStyles(\n        stylesMerger.compileStyleDeclaration(stylesConfig.baseStyle)\n      ),\n      removeLineBreaksAroundEastAsianDiscardSet:\n        options?.removeLineBreaksAroundEastAsianDiscardSet || false\n    };\n    this.selectDomRoot = options?.selectDomRoot;\n  }\n\n  private normalizeDocument(document: Document) {\n    let body: Element | undefined;\n    let head: Element | undefined;\n    for (const child of document.children) {\n      if (body && head) {\n        break;\n      }\n      if (isDomElement(child) && child.tagName === 'body') {\n        body = child;\n      }\n      if (isDomElement(child) && child.tagName === 'head') {\n        head = child;\n      }\n    }\n    //@ts-ignore\n    if (!body && !head) {\n      body = new Element('body', {});\n      body.childNodes = document.children;\n      document.children.forEach((c) => {\n        c.parent = body as Element;\n        c.parentNode = body as Element;\n      });\n      body.parent = document;\n      body.parentNode = document;\n      document.childNodes = [body];\n    }\n    return document;\n  }\n\n  parseDocument(html: string) {\n    let document = parseDocument(html, this.htmlParserOptions);\n    if (this.selectDomRoot) {\n      const selected = this.selectDomRoot(document) as Document;\n      if (selected && selected !== document) {\n        document.childNodes = [selected];\n        selected.parent = document;\n      }\n    }\n    for (const child of document.children) {\n      if (isDomElement(child) && child.tagName === 'html') {\n        document = child;\n        break;\n      }\n    }\n    return this.normalizeDocument(document);\n  }\n\n  buildTTreeFromDoc(document: Document | Element): TDocument {\n    const tdoc = translateDocument(document, this.dataFlowParams);\n    const hoistedTDoc = this.hoistingEnabled ? hoist(tdoc) : tdoc;\n    const collapsedTDoc = this.whitespaceCollapsingEnabled\n      ? collapse(hoistedTDoc)\n      : tdoc;\n    return collapsedTDoc as unknown as TDocument;\n  }\n\n  buildTTree(html: string): TDocument {\n    return this.buildTTreeFromDoc(this.parseDocument(html));\n  }\n\n  getHTMLElementsModels() {\n    return this.dataFlowParams.modelRegistry.modelRecords;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}