{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _defineProperty2=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.TStyles=void 0;var _cssProcessor=require(\"@native-html/css-processor\");var _isNil=_interopRequireDefault(require(\"ramda/src/isNil\"));var _not=_interopRequireDefault(require(\"ramda/src/not\"));var _compose=_interopRequireDefault(require(\"ramda/src/compose\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var notNil=(0,_compose.default)(_not.default,_isNil.default);function inheritProperties(){for(var _len=arguments.length,properties=new Array(_len),_key=0;_key<_len;_key++){properties[_key]=arguments[_key];}var realProperties=properties.filter(notNil);if(realProperties.length===1){return realProperties[0];}if(Object.keys(realProperties[0]).length===0){return realProperties[1];}return realProperties.reduce(function(prev,curr){return _objectSpread(_objectSpread({},prev),curr);},Object.prototype);}var TStyles=function(){function TStyles(ownProcessedProps,parentStyles){_classCallCheck(this,TStyles);_defineProperty(this,\"nativeTextFlow\",void 0);_defineProperty(this,\"nativeBlockFlow\",void 0);_defineProperty(this,\"nativeTextRet\",void 0);_defineProperty(this,\"nativeBlockRet\",void 0);_defineProperty(this,\"webTextFlow\",void 0);_defineProperty(this,\"webBlockRet\",void 0);this.nativeTextFlow=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.nativeTextFlow,ownProcessedProps.native.text.flow);this.nativeBlockFlow=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.nativeBlockFlow,ownProcessedProps.native.block.flow);this.webTextFlow=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.webTextFlow,ownProcessedProps.web.text.flow);this.nativeTextRet=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.nativeTextRet,ownProcessedProps.native.text.retain);this.nativeBlockRet=ownProcessedProps.native.block.retain;this.webBlockRet=ownProcessedProps.web.block.retain;}_createClass(TStyles,null,[{key:\"empty\",value:function empty(){return new TStyles(new _cssProcessor.CSSProcessedProps());}}]);return TStyles;}();exports.TStyles=TStyles;","map":{"version":3,"names":["_cssProcessor","require","_isNil","_interopRequireDefault","_not","_compose","notNil","default","inheritProperties","_len","arguments","length","properties","Array","_key","realProperties","filter","Object","keys","reduce","prev","curr","_objectSpread","prototype","TStyles","ownProcessedProps","parentStyles","_classCallCheck","_defineProperty","nativeTextFlow","native","text","flow","nativeBlockFlow","block","webTextFlow","web","nativeTextRet","retain","nativeBlockRet","webBlockRet","_createClass","key","value","empty","CSSProcessedProps"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/node_modules/@native-html/transient-render-engine/lib/commonjs/styles/TStyles.ts"],"sourcesContent":["import { CSSProperties, CSSProcessedProps } from '@native-html/css-processor';\nimport nil from 'ramda/src/isNil';\nimport not from 'ramda/src/not';\nimport compose from 'ramda/src/compose';\n\nconst notNil = compose(not, nil);\n/**\n * A merge properties from left to right.\n *\n * @param child\n * @param parent\n */\nfunction inheritProperties(\n  ...properties: Array<CSSProperties | null | undefined>\n): CSSProperties {\n  const realProperties = properties.filter(notNil) as CSSProperties[];\n  if (realProperties.length === 1) {\n    return realProperties[0];\n  }\n  if (Object.keys(realProperties[0]).length === 0) {\n    return realProperties[1];\n  }\n  return realProperties.reduce(\n    (prev, curr) => ({ ...prev, ...curr }),\n    Object.prototype as CSSProperties\n  ) as CSSProperties;\n}\n\n/**\n * A record of styles organized in logical chunks:\n *\n * - wether they are supported in React Native (native) and others (web).\n * - wether they target native Views (block) or Text (text).\n * - wether they are inherited by this node's children (flow) or not (retain).\n *\n * @public\n */\nexport interface TStylesShape {\n  readonly nativeTextFlow: CSSProcessedProps['native']['text']['flow'];\n  readonly nativeBlockFlow: CSSProcessedProps['native']['block']['flow'];\n  readonly nativeTextRet: CSSProcessedProps['native']['text']['retain'];\n  readonly nativeBlockRet: CSSProcessedProps['native']['block']['retain'];\n  readonly webTextFlow: CSSProcessedProps['web']['text']['flow'];\n  readonly webBlockRet: CSSProcessedProps['web']['block']['retain'];\n}\n\nexport class TStyles implements TStylesShape {\n  public readonly nativeTextFlow: CSSProcessedProps['native']['text']['flow'];\n  public readonly nativeBlockFlow: CSSProcessedProps['native']['block']['flow'];\n  public readonly nativeTextRet: CSSProcessedProps['native']['text']['retain'];\n  public readonly nativeBlockRet: CSSProcessedProps['native']['block']['retain'];\n  public readonly webTextFlow: CSSProcessedProps['web']['text']['flow'];\n  public readonly webBlockRet: CSSProcessedProps['web']['block']['retain'];\n\n  constructor(\n    ownProcessedProps: CSSProcessedProps,\n    parentStyles?: TStyles | null\n  ) {\n    this.nativeTextFlow = inheritProperties(\n      parentStyles?.nativeTextFlow,\n      ownProcessedProps.native.text.flow\n    );\n    this.nativeBlockFlow = inheritProperties(\n      parentStyles?.nativeBlockFlow,\n      ownProcessedProps.native.block.flow\n    );\n    this.webTextFlow = inheritProperties(\n      parentStyles?.webTextFlow,\n      ownProcessedProps.web.text.flow\n    );\n    // In theory, we shouldn't merge those properties. However, these\n    // properties being textDecoration*, we actually want children nodes to\n    // inherit from them. A cleaner solution would be to to let each TNode\n    // handle its merging logic, because only TPhrasing and TText nodes would\n    // need to merge these.\n    this.nativeTextRet = inheritProperties(\n      parentStyles?.nativeTextRet,\n      ownProcessedProps.native.text.retain\n    );\n    this.nativeBlockRet = ownProcessedProps.native.block.retain;\n    this.webBlockRet = ownProcessedProps.web.block.retain;\n  }\n\n  static empty(): TStyles {\n    return new TStyles(new CSSProcessedProps());\n  }\n}\n"],"mappings":"o5BAAA,IAAAA,aAAA,CAAAC,OAAA,+BACA,IAAAC,MAAA,CAAAC,sBAAA,CAAAF,OAAA,qBACA,IAAAG,IAAA,CAAAD,sBAAA,CAAAF,OAAA,mBACA,IAAAI,QAAA,CAAAF,sBAAA,CAAAF,OAAA,uB,yQAEA,GAAM,CAAAK,MAAM,CAAG,GAAAD,QAAA,CAAAE,OAAA,EAAQH,IAAA,CAAAG,OAAR,CAAaL,MAAA,CAAAK,OAAb,CAAf,CAOA,QAAS,CAAAC,iBAATA,CAAA,CAEiB,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CADZC,UADL,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IACKF,UADL,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GAGE,GAAM,CAAAC,cAAc,CAAGH,UAAU,CAACI,MAAX,CAAkBV,MAAlB,CAAvB,CACA,GAAIS,cAAc,CAACJ,MAAf,GAA0B,CAA9B,CAAiC,CAC/B,MAAO,CAAAI,cAAc,CAAC,CAAD,CAArB,CACD,CACD,GAAIE,MAAM,CAACC,IAAP,CAAYH,cAAc,CAAC,CAAD,CAA1B,EAA+BJ,MAA/B,GAA0C,CAA9C,CAAiD,CAC/C,MAAO,CAAAI,cAAc,CAAC,CAAD,CAArB,CACD,CACD,MAAO,CAAAA,cAAc,CAACI,MAAf,CACL,SAACC,IAAD,CAAOC,IAAP,SAAAC,aAAA,CAAAA,aAAA,IAAsBF,IAAL,EAAcC,IAAA,GAD1B,CAELJ,MAAM,CAACM,SAFF,CAAP,CAID,IAoBY,CAAAC,OAAN,YAQL,SAAAA,QACEC,iBADS,CAETC,YAFS,CAGT,CAAAC,eAAA,MAAAH,OAAA,EAAAI,eAAA,+BAAAA,eAAA,gCAAAA,eAAA,8BAAAA,eAAA,+BAAAA,eAAA,4BAAAA,eAAA,4BACA,KAAKC,cAAL,CAAsBrB,iBAAiB,CACrCkB,YADqC,SACrCA,YADqC,iBACrCA,YAAY,CAAEG,cADuB,CAErCJ,iBAAiB,CAACK,MAAlB,CAAyBC,IAAzB,CAA8BC,IAFO,CAAvC,CAIA,KAAKC,eAAL,CAAuBzB,iBAAiB,CACtCkB,YADsC,SACtCA,YADsC,iBACtCA,YAAY,CAAEO,eADwB,CAEtCR,iBAAiB,CAACK,MAAlB,CAAyBI,KAAzB,CAA+BF,IAFO,CAAxC,CAIA,KAAKG,WAAL,CAAmB3B,iBAAiB,CAClCkB,YADkC,SAClCA,YADkC,iBAClCA,YAAY,CAAES,WADoB,CAElCV,iBAAiB,CAACW,GAAlB,CAAsBL,IAAtB,CAA2BC,IAFO,CAApC,CASA,KAAKK,aAAL,CAAqB7B,iBAAiB,CACpCkB,YADoC,SACpCA,YADoC,iBACpCA,YAAY,CAAEW,aADsB,CAEpCZ,iBAAiB,CAACK,MAAlB,CAAyBC,IAAzB,CAA8BO,MAFM,CAAtC,CAIA,KAAKC,cAAL,CAAsBd,iBAAiB,CAACK,MAAlB,CAAyBI,KAAzB,CAA+BI,MAArD,CACA,KAAKE,WAAL,CAAmBf,iBAAiB,CAACW,GAAlB,CAAsBF,KAAtB,CAA4BI,MAA/C,CACD,CAAAG,YAAA,CAAAjB,OAAA,QAAAkB,GAAA,SAAAC,KAAA,CAEW,SAAAC,MAAA,CAAY,CACtB,MAAO,IAAI,CAAApB,OAAJ,CAAY,GAAI,CAAAxB,aAAA,CAAA6C,iBAAJ,EAAZ,CAAP,CACD,YAAArB,OAAA,K"},"metadata":{},"sourceType":"script","externalDependencies":[]}