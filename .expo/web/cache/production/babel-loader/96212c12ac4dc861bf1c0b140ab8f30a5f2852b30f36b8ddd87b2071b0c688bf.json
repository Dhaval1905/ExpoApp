{"ast":null,"code":"\"use strict\";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.decodeXML=exports.decodeHTMLStrict=exports.decodeHTML=exports.determineBranch=exports.JUMP_OFFSET_BASE=exports.BinTrieFlags=exports.xmlDecodeTree=exports.htmlDecodeTree=void 0;var decode_data_html_1=__importDefault(require(\"./generated/decode-data-html\"));exports.htmlDecodeTree=decode_data_html_1.default;var decode_data_xml_1=__importDefault(require(\"./generated/decode-data-xml\"));exports.xmlDecodeTree=decode_data_xml_1.default;var decode_codepoint_1=__importDefault(require(\"./decode_codepoint\"));var BinTrieFlags;(function(BinTrieFlags){BinTrieFlags[BinTrieFlags[\"HAS_VALUE\"]=32768]=\"HAS_VALUE\";BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"]=32512]=\"BRANCH_LENGTH\";BinTrieFlags[BinTrieFlags[\"MULTI_BYTE\"]=128]=\"MULTI_BYTE\";BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"]=127]=\"JUMP_TABLE\";})(BinTrieFlags=exports.BinTrieFlags||(exports.BinTrieFlags={}));exports.JUMP_OFFSET_BASE=48-1;function getDecoder(decodeTree){return function decodeHTMLBinary(str,strict){var ret=\"\";var lastIdx=0;var strIdx=0;while((strIdx=str.indexOf(\"&\",strIdx))>=0){ret+=str.slice(lastIdx,strIdx);lastIdx=strIdx;strIdx+=1;if(str.charCodeAt(strIdx)===35){var start=strIdx+1;var base=10;var cp=str.charCodeAt(start);if((cp|32)===120){base=16;strIdx+=1;start+=1;}while((cp=str.charCodeAt(++strIdx))>=48&&cp<=57||base===16&&(cp|32)>=97&&(cp|32)<=102);if(start!==strIdx){var entity=str.substring(start,strIdx);var parsed=parseInt(entity,base);if(str.charCodeAt(strIdx)===59){strIdx+=1;}else if(strict){continue;}ret+=decode_codepoint_1.default(parsed);lastIdx=strIdx;}continue;}var result=null;var excess=1;var treeIdx=0;var current=decodeTree[treeIdx];for(;strIdx<str.length;strIdx++,excess++){treeIdx=determineBranch(decodeTree,current,treeIdx+1,str.charCodeAt(strIdx));if(treeIdx<0)break;current=decodeTree[treeIdx];if(current&BinTrieFlags.HAS_VALUE){if(strict&&str.charCodeAt(strIdx)!==59){treeIdx+=1;}else{result=current&BinTrieFlags.MULTI_BYTE?String.fromCharCode(decodeTree[++treeIdx],decodeTree[++treeIdx]):String.fromCharCode(decodeTree[++treeIdx]);excess=0;}}}if(result!=null){ret+=result;lastIdx=strIdx-excess+1;}}return ret+str.slice(lastIdx);};}function determineBranch(decodeTree,current,nodeIdx,char){if(current<=128){return char===current?nodeIdx:-1;}var branchCount=(current&BinTrieFlags.BRANCH_LENGTH)>>8;if(branchCount===0){return-1;}if(branchCount===1){return char===decodeTree[nodeIdx]?nodeIdx+1:-1;}var jumpOffset=current&BinTrieFlags.JUMP_TABLE;if(jumpOffset){var value=char-exports.JUMP_OFFSET_BASE-jumpOffset;return value<0||value>branchCount?-1:decodeTree[nodeIdx+value]-1;}var lo=nodeIdx;var hi=lo+branchCount-1;while(lo<=hi){var mid=lo+hi>>>1;var midVal=decodeTree[mid];if(midVal<char){lo=mid+1;}else if(midVal>char){hi=mid-1;}else{return decodeTree[mid+branchCount];}}return-1;}exports.determineBranch=determineBranch;var htmlDecoder=getDecoder(decode_data_html_1.default);var xmlDecoder=getDecoder(decode_data_xml_1.default);function decodeHTML(str){return htmlDecoder(str,false);}exports.decodeHTML=decodeHTML;function decodeHTMLStrict(str){return htmlDecoder(str,true);}exports.decodeHTMLStrict=decodeHTMLStrict;function decodeXML(str){return xmlDecoder(str,true);}exports.decodeXML=decodeXML;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","decodeXML","decodeHTMLStrict","decodeHTML","determineBranch","JUMP_OFFSET_BASE","BinTrieFlags","xmlDecodeTree","htmlDecodeTree","decode_data_html_1","require","default","decode_data_xml_1","decode_codepoint_1","getDecoder","decodeTree","decodeHTMLBinary","str","strict","ret","lastIdx","strIdx","indexOf","slice","charCodeAt","start","base","cp","entity","substring","parsed","parseInt","result","excess","treeIdx","current","length","HAS_VALUE","MULTI_BYTE","String","fromCharCode","nodeIdx","char","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecoder","xmlDecoder"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/node_modules/entities/lib/decode.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXML = exports.decodeHTMLStrict = exports.decodeHTML = exports.determineBranch = exports.JUMP_OFFSET_BASE = exports.BinTrieFlags = exports.xmlDecodeTree = exports.htmlDecodeTree = void 0;\nvar decode_data_html_1 = __importDefault(require(\"./generated/decode-data-html\"));\nexports.htmlDecodeTree = decode_data_html_1.default;\nvar decode_data_xml_1 = __importDefault(require(\"./generated/decode-data-xml\"));\nexports.xmlDecodeTree = decode_data_xml_1.default;\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"HAS_VALUE\"] = 32768] = \"HAS_VALUE\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 32512] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"MULTI_BYTE\"] = 128] = \"MULTI_BYTE\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags = exports.BinTrieFlags || (exports.BinTrieFlags = {}));\nexports.JUMP_OFFSET_BASE = 48 /* ZERO */ - 1;\nfunction getDecoder(decodeTree) {\n    return function decodeHTMLBinary(str, strict) {\n        var ret = \"\";\n        var lastIdx = 0;\n        var strIdx = 0;\n        while ((strIdx = str.indexOf(\"&\", strIdx)) >= 0) {\n            ret += str.slice(lastIdx, strIdx);\n            lastIdx = strIdx;\n            // Skip the \"&\"\n            strIdx += 1;\n            // If we have a numeric entity, handle this separately.\n            if (str.charCodeAt(strIdx) === 35 /* NUM */) {\n                // Skip the leading \"&#\". For hex entities, also skip the leading \"x\".\n                var start = strIdx + 1;\n                var base = 10;\n                var cp = str.charCodeAt(start);\n                if ((cp | 32 /* To_LOWER_BIT */) === 120 /* LOWER_X */) {\n                    base = 16;\n                    strIdx += 1;\n                    start += 1;\n                }\n                while (((cp = str.charCodeAt(++strIdx)) >= 48 /* ZERO */ &&\n                    cp <= 57 /* NINE */) ||\n                    (base === 16 &&\n                        (cp | 32 /* To_LOWER_BIT */) >= 97 /* LOWER_A */ &&\n                        (cp | 32 /* To_LOWER_BIT */) <= 102 /* LOWER_F */))\n                    ;\n                if (start !== strIdx) {\n                    var entity = str.substring(start, strIdx);\n                    var parsed = parseInt(entity, base);\n                    if (str.charCodeAt(strIdx) === 59 /* SEMI */) {\n                        strIdx += 1;\n                    }\n                    else if (strict) {\n                        continue;\n                    }\n                    ret += decode_codepoint_1.default(parsed);\n                    lastIdx = strIdx;\n                }\n                continue;\n            }\n            var result = null;\n            var excess = 1;\n            var treeIdx = 0;\n            var current = decodeTree[treeIdx];\n            for (; strIdx < str.length; strIdx++, excess++) {\n                treeIdx = determineBranch(decodeTree, current, treeIdx + 1, str.charCodeAt(strIdx));\n                if (treeIdx < 0)\n                    break;\n                current = decodeTree[treeIdx];\n                // If the branch is a value, store it and continue\n                if (current & BinTrieFlags.HAS_VALUE) {\n                    // If we have a legacy entity while parsing strictly, just skip the number of bytes\n                    if (strict && str.charCodeAt(strIdx) !== 59 /* SEMI */) {\n                        // No need to consider multi-byte values, as the legacy entity is always a single byte\n                        treeIdx += 1;\n                    }\n                    else {\n                        // If this is a surrogate pair, combine the higher bits from the node with the next byte\n                        result =\n                            current & BinTrieFlags.MULTI_BYTE\n                                ? String.fromCharCode(decodeTree[++treeIdx], decodeTree[++treeIdx])\n                                : String.fromCharCode(decodeTree[++treeIdx]);\n                        excess = 0;\n                    }\n                }\n            }\n            if (result != null) {\n                ret += result;\n                lastIdx = strIdx - excess + 1;\n            }\n        }\n        return ret + str.slice(lastIdx);\n    };\n}\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\n    if (current <= 128) {\n        return char === current ? nodeIdx : -1;\n    }\n    var branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 8;\n    if (branchCount === 0) {\n        return -1;\n    }\n    if (branchCount === 1) {\n        return char === decodeTree[nodeIdx] ? nodeIdx + 1 : -1;\n    }\n    var jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    if (jumpOffset) {\n        var value = char - exports.JUMP_OFFSET_BASE - jumpOffset;\n        return value < 0 || value > branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Binary search for the character.\n    var lo = nodeIdx;\n    var hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        var mid = (lo + hi) >>> 1;\n        var midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nexports.determineBranch = determineBranch;\nvar htmlDecoder = getDecoder(decode_data_html_1.default);\nvar xmlDecoder = getDecoder(decode_data_xml_1.default);\nfunction decodeHTML(str) {\n    return htmlDecoder(str, false);\n}\nexports.decodeHTML = decodeHTML;\nfunction decodeHTMLStrict(str) {\n    return htmlDecoder(str, true);\n}\nexports.decodeHTMLStrict = decodeHTMLStrict;\nfunction decodeXML(str) {\n    return xmlDecoder(str, true);\n}\nexports.decodeXML = decodeXML;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}