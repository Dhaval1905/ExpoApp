{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"size\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Icon from\"../Icon\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";var defaultSize=64;var Avatar=function Avatar(_ref){var _rest$color;var icon=_ref.icon,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=(_rest$color=rest.color)!==null&&_rest$color!==void 0?_rest$color:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default withTheme(Avatar);","map":{"version":3,"names":["React","View","StyleSheet","Icon","withTheme","white","getContrastingColor","defaultSize","Avatar","_ref","_rest$color","icon","_ref$size","size","style","theme","rest","_objectWithoutProperties","_excluded","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","color","createElement","_extends","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-paper/lib/module/components/Avatar/AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"],"mappings":"ybAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,IAAA,iDAAAC,UAAA,gDAEA,MAAO,CAAAC,IAAP,eACA,OAASC,SAAT,0BACA,OAASC,KAAT,2BACA,MAAO,CAAAC,mBAAP,uCAEA,GAAM,CAAAC,WAAW,CAAG,EAApB,CAyCA,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAGC,IAAA,CAAgE,KAAAC,WAAA,IAA7D,CAAAC,IAAF,CAA+DF,IAAA,CAA7DE,IAAF,CAAAC,SAAA,CAA+DH,IAAA,CAAvDI,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAGL,WAAf,CAAAK,SAAA,CAA4BE,KAA5B,CAA+DL,IAAA,CAAnCK,KAA5B,CAAmCC,KAAnC,CAA+DN,IAAA,CAA5BM,KAAnC,CAA6CC,IAAA,CAAAC,wBAAA,CAAkBR,IAAA,CAAAS,SAAA,EAC7E,IAAAC,KAAA,CACEjB,UAAU,CAACkB,OAAX,CAAmBN,KAAnB,GAA6B,EAD/B,CAAAO,qBAAA,CAAAF,KAAA,CAAQG,eAAe,CAAfA,eAAe,CAAAD,qBAAA,UAAGN,KAAK,CAACQ,MAAN,CAAaC,OAAjC,CAAAH,qBAAA,CAA6CI,SAAA,CAAAR,wBAAA,CAAAE,KAAA,CAAAO,UAAA,EAEnD,GAAM,CAAAC,SAAS,EAAAjB,WAAA,CACbM,IAAI,CAACY,KADQ,UAAAlB,WAAA,UAAAA,WAAA,CAEbJ,mBAAmB,CAACgB,eAAD,CAAkBjB,KAAlB,CAAyB,oBAAzB,CAFrB,CAIA,MACE,CAAAL,KAAA,CAAA6B,aAAA,CAAC5B,IAAD,CAAA6B,QAAA,EACEhB,KAAK,CAAE,CACL,CACEiB,KAAK,CAAElB,IADT,CAEEmB,MAAM,CAAEnB,IAFV,CAGEoB,YAAY,CAAEpB,IAAI,CAAG,CAHvB,CAIES,eAAA,CAAAA,eAJF,CADK,CAOLY,MAAM,CAACC,SAPF,CAQLV,SARK,CADT,EAWMT,IAXN,EAaEhB,KAAA,CAAA6B,aAAA,CAAC1B,IAAD,EAAMiC,MAAM,CAAEzB,IAAd,CAAoBiB,KAAK,CAAED,SAA3B,CAAsCd,IAAI,CAAEA,IAAI,CAAG,GAAnD,EAbF,CADF,CAiBD,CAxBD,CA0BAL,MAAM,CAAC6B,WAAP,CAAqB,aAArB,CAEA,GAAM,CAAAH,MAAM,CAAGhC,UAAU,CAACoC,MAAX,CAAkB,CAC/BH,SAAS,CAAE,CACTI,cAAc,CAAE,QADP,CAETC,UAAU,CAAE,QAFH,CADoB,CAAlB,CAAf,CAOA,cAAe,CAAApC,SAAS,CAACI,MAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}