{"ast":null,"code":"import color from'color';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Icon from\"../Icon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var MenuItem=function MenuItem(_ref){var icon=_ref.icon,title=_ref.title,disabled=_ref.disabled,onPress=_ref.onPress,style=_ref.style,contentStyle=_ref.contentStyle,testID=_ref.testID,titleStyle=_ref.titleStyle,accessibilityLabel=_ref.accessibilityLabel,theme=_ref.theme;var disabledColor=color(theme.dark?white:black).alpha(0.32).rgb().string();var titleColor=disabled?disabledColor:color(theme.colors.text).alpha(0.87).rgb().string();var iconColor=disabled?disabledColor:color(theme.colors.text).alpha(0.54).rgb().string();return React.createElement(TouchableRipple,{style:[styles.container,style],onPress:onPress,disabled:disabled,testID:testID,accessibilityLabel:accessibilityLabel,accessibilityRole:\"menuitem\",accessibilityState:{disabled:disabled}},React.createElement(View,{style:styles.row},icon?React.createElement(View,{style:[styles.item,styles.icon],pointerEvents:\"box-none\"},React.createElement(Icon,{source:icon,size:24,color:iconColor})):null,React.createElement(View,{style:[styles.item,styles.content,icon?styles.widthWithIcon:null,contentStyle],pointerEvents:\"none\"},React.createElement(Text,{selectable:false,numberOfLines:1,style:[styles.title,{color:titleColor},titleStyle]},title))));};MenuItem.displayName='Menu.Item';var minWidth=112;var maxWidth=280;var iconWidth=40;var styles=StyleSheet.create({container:{paddingHorizontal:8,minWidth:minWidth,maxWidth:maxWidth,height:48,justifyContent:'center'},row:{flexDirection:'row'},icon:{width:iconWidth},title:{fontSize:16},item:{marginHorizontal:8},content:{justifyContent:'center',minWidth:minWidth-16,maxWidth:maxWidth-16},widthWithIcon:{maxWidth:maxWidth-(iconWidth+48)}});export default withTheme(MenuItem);","map":{"version":3,"names":["color","React","StyleSheet","View","Icon","TouchableRipple","Text","black","white","withTheme","MenuItem","_ref","icon","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","disabledColor","dark","alpha","rgb","string","titleColor","colors","text","iconColor","createElement","styles","container","accessibilityRole","accessibilityState","row","item","pointerEvents","source","size","content","widthWithIcon","selectable","numberOfLines","displayName","minWidth","maxWidth","iconWidth","create","paddingHorizontal","height","justifyContent","flexDirection","width","fontSize","marginHorizontal"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-paper/lib/module/components/Menu/MenuItem.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * Icon to display for the `MenuItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item icon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item icon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item icon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item icon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item icon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  icon,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  testID,\n  titleStyle,\n  accessibilityLabel,\n  theme,\n}: Props) => {\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.32)\n    .rgb()\n    .string();\n\n  const titleColor = disabled\n    ? disabledColor\n    : color(theme.colors.text).alpha(0.87).rgb().string();\n\n  const iconColor = disabled\n    ? disabledColor\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      style={[styles.container, style]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={{ disabled }}\n    >\n      <View style={styles.row}>\n        {icon ? (\n          <View style={[styles.item, styles.icon]} pointerEvents=\"box-none\">\n            <Icon source={icon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            styles.item,\n            styles.content,\n            icon ? styles.widthWithIcon : null,\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            selectable={false}\n            numberOfLines={1}\n            style={[styles.title, { color: titleColor }, titleStyle]}\n          >\n            {title}\n          </Text>\n        </View>\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst minWidth = 112;\nconst maxWidth = 280;\nconst iconWidth = 40;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth,\n    maxWidth,\n    height: 48,\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  icon: {\n    width: iconWidth,\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16,\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48),\n  },\n});\n\nexport default withTheme(MenuItem);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAK,CAAAC,KAAZ,KAAuB,OAAvB,QAAAC,UAAA,uDAAAC,IAAA,0CAQA,MAAO,CAAAC,IAAP,eACA,MAAO,CAAAC,eAAP,0CACA,MAAO,CAAAC,IAAP,0BACA,OAASC,KAAT,CAAgBC,KAAhB,2BACA,OAASC,SAAT,0BAmEA,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAGC,IAAA,CAWJ,IAVX,CAAAC,IADgB,CAWLD,IAAA,CAVXC,IADgB,CAEhBC,KAFgB,CAWLF,IAAA,CATXE,KAFgB,CAGhBC,QAHgB,CAWLH,IAAA,CARXG,QAHgB,CAIhBC,OAJgB,CAWLJ,IAAA,CAPXI,OAJgB,CAKhBC,KALgB,CAWLL,IAAA,CANXK,KALgB,CAMhBC,YANgB,CAWLN,IAAA,CALXM,YANgB,CAOhBC,MAPgB,CAWLP,IAAA,CAJXO,MAPgB,CAQhBC,UARgB,CAWLR,IAAA,CAHXQ,UARgB,CAShBC,kBATgB,CAWLT,IAAA,CAFXS,kBATgB,CAUhBC,KAAA,CACWV,IAAA,CADXU,KAAA,CAEA,GAAM,CAAAC,aAAa,CAAGtB,KAAK,CAACqB,KAAK,CAACE,IAAN,CAAaf,KAAb,CAAqBD,KAAtB,CAAL,CACnBiB,KADmB,CACb,IADa,EAEnBC,GAFmB,GAGnBC,MAHmB,EAAtB,CAKA,GAAM,CAAAC,UAAU,CAAGb,QAAQ,CACvBQ,aADuB,CAEvBtB,KAAK,CAACqB,KAAK,CAACO,MAAN,CAAaC,IAAd,CAAL,CAAyBL,KAAzB,CAA+B,IAA/B,EAAqCC,GAArC,GAA2CC,MAA3C,EAFJ,CAIA,GAAM,CAAAI,SAAS,CAAGhB,QAAQ,CACtBQ,aADsB,CAEtBtB,KAAK,CAACqB,KAAK,CAACO,MAAN,CAAaC,IAAd,CAAL,CAAyBL,KAAzB,CAA+B,IAA/B,EAAqCC,GAArC,GAA2CC,MAA3C,EAFJ,CAIA,MACE,CAAAzB,KAAA,CAAA8B,aAAA,CAAC1B,eAAD,EACEW,KAAK,CAAE,CAACgB,MAAM,CAACC,SAAR,CAAmBjB,KAAnB,CADT,CAEED,OAAO,CAAEA,OAFX,CAGED,QAAQ,CAAEA,QAHZ,CAIEI,MAAM,CAAEA,MAJV,CAKEE,kBAAkB,CAAEA,kBALtB,CAMEc,iBAAiB,CAAC,UANpB,CAOEC,kBAAkB,CAAE,CAAErB,QAAA,CAAAA,QAAF,CAPtB,EASEb,KAAA,CAAA8B,aAAA,CAAC5B,IAAD,EAAMa,KAAK,CAAEgB,MAAM,CAACI,GAApB,EACGxB,IAAI,CACHX,KAAA,CAAA8B,aAAA,CAAC5B,IAAD,EAAMa,KAAK,CAAE,CAACgB,MAAM,CAACK,IAAR,CAAcL,MAAM,CAACpB,IAArB,CAAb,CAAyC0B,aAAa,CAAC,UAAvD,EACErC,KAAA,CAAA8B,aAAA,CAAC3B,IAAD,EAAMmC,MAAM,CAAE3B,IAAd,CAAoB4B,IAAI,CAAE,EAA1B,CAA8BxC,KAAK,CAAE8B,SAArC,EADF,CADG,CAID,IALN,CAME7B,KAAA,CAAA8B,aAAA,CAAC5B,IAAD,EACEa,KAAK,CAAE,CACLgB,MAAM,CAACK,IADF,CAELL,MAAM,CAACS,OAFF,CAGL7B,IAAI,CAAGoB,MAAM,CAACU,aAAV,CAA0B,IAHzB,CAILzB,YAJK,CADT,CAOEqB,aAAa,CAAC,MAPhB,EASErC,KAAA,CAAA8B,aAAA,CAACzB,IAAD,EACEqC,UAAU,CAAE,KADd,CAEEC,aAAa,CAAE,CAFjB,CAGE5B,KAAK,CAAE,CAACgB,MAAM,CAACnB,KAAR,CAAe,CAAEb,KAAK,CAAE2B,UAAT,CAAf,CAAsCR,UAAtC,CAHT,EAKGN,KALH,CATF,CANF,CATF,CADF,CAoCD,CA7DD,CA+DAH,QAAQ,CAACmC,WAAT,CAAuB,WAAvB,CAEA,GAAM,CAAAC,QAAQ,CAAG,GAAjB,CACA,GAAM,CAAAC,QAAQ,CAAG,GAAjB,CACA,GAAM,CAAAC,SAAS,CAAG,EAAlB,CAEA,GAAM,CAAAhB,MAAM,CAAG9B,UAAU,CAAC+C,MAAX,CAAkB,CAC/BhB,SAAS,CAAE,CACTiB,iBAAiB,CAAE,CADV,CAETJ,QAFS,CAETA,QAFS,CAGTC,QAHS,CAGTA,QAHS,CAITI,MAAM,CAAE,EAJC,CAKTC,cAAc,CAAE,QALP,CADoB,CAQ/BhB,GAAG,CAAE,CACHiB,aAAa,CAAE,KADZ,CAR0B,CAW/BzC,IAAI,CAAE,CACJ0C,KAAK,CAAEN,SADH,CAXyB,CAc/BnC,KAAK,CAAE,CACL0C,QAAQ,CAAE,EADL,CAdwB,CAiB/BlB,IAAI,CAAE,CACJmB,gBAAgB,CAAE,CADd,CAjByB,CAoB/Bf,OAAO,CAAE,CACPW,cAAc,CAAE,QADT,CAEPN,QAAQ,CAAEA,QAAQ,CAAG,EAFd,CAGPC,QAAQ,CAAEA,QAAQ,CAAG,EAHd,CApBsB,CAyB/BL,aAAa,CAAE,CACbK,QAAQ,CAAEA,QAAQ,EAAIC,SAAS,CAAG,EAAhB,CADL,CAzBgB,CAAlB,CAAf,CA8BA,cAAe,CAAAvC,SAAS,CAACC,QAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}