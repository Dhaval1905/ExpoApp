{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";var _downloadAsync;export var IS_MANAGED_ENV=false;export var IS_ENV_WITH_UPDATES_ENABLED=false;export var IS_ENV_WITHOUT_UPDATES_ENABLED=false;export var manifestBaseUrl=null;export function downloadAsync(_x,_x2,_x3,_x4){return(_downloadAsync=_downloadAsync||_asyncToGenerator(function*(uri,hash,type,name){return uri;})).apply(this,arguments);}export function getManifest(){return{};}export function getManifest2(){return{};}","map":{"version":3,"names":["IS_MANAGED_ENV","IS_ENV_WITH_UPDATES_ENABLED","IS_ENV_WITHOUT_UPDATES_ENABLED","manifestBaseUrl","downloadAsync","_x","_x2","_x3","_x4","_downloadAsync","_asyncToGenerator","uri","hash","type","name","apply","arguments","getManifest","getManifest2"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/expo-asset/src/PlatformUtils.web.ts"],"sourcesContent":["export const IS_MANAGED_ENV = false;\nexport const IS_ENV_WITH_UPDATES_ENABLED = false;\nexport const IS_ENV_WITHOUT_UPDATES_ENABLED = false;\n\n// Compute manifest base URL if available\nexport const manifestBaseUrl = null;\n\nexport async function downloadAsync(uri, hash, type, name): Promise<string> {\n  return uri;\n}\n\nexport function getManifest() {\n  return {};\n}\n\nexport function getManifest2() {\n  return {};\n}\n"],"mappings":"0FAAA,MAAO,IAAM,CAAAA,cAAc,CAAG,KAAK,CACnC,MAAO,IAAM,CAAAC,2BAA2B,CAAG,KAAK,CAChD,MAAO,IAAM,CAAAC,8BAA8B,CAAG,KAAK,CAGnD,MAAO,IAAM,CAAAC,eAAe,CAAG,IAAI,CAEnC,eAAsB,CAAAC,aAAaA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,cAAA,CAAAA,cAAA,EAAAC,iBAAA,CAA5B,UAA6BC,GAAG,CAAEC,IAAI,CAAEC,IAAI,CAAEC,IAAI,EACvD,MAAO,CAAAH,GAAG,CACZ,CAAC,GAAAI,KAAA,MAAAC,SAAA,GAED,MAAM,SAAU,CAAAC,WAAWA,CAAA,EACzB,MAAO,EAAE,CACX,CAEA,MAAM,SAAU,CAAAC,YAAYA,CAAA,EAC1B,MAAO,EAAE,CACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}