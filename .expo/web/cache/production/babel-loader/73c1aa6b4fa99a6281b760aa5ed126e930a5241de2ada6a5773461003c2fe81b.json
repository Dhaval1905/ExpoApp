{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from'react';import PropTypes from'prop-types';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";import UIManager from\"react-native-web/dist/exports/UIManager\";import TextInput from\"react-native-web/dist/exports/TextInput\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import Animated from\"react-native-web/dist/exports/Animated\";import{isIphoneX}from'react-native-iphone-x-helper';import{jsx as _jsx}from\"react/jsx-runtime\";var _KAM_DEFAULT_TAB_BAR_HEIGHT=isIphoneX()?83:49;var _KAM_KEYBOARD_OPENING_TIME=250;var _KAM_EXTRA_HEIGHT=75;var supportedKeyboardEvents=['keyboardWillShow','keyboardDidShow','keyboardWillHide','keyboardDidHide','keyboardWillChangeFrame','keyboardDidChangeFrame'];var keyboardEventToCallbackName=function keyboardEventToCallbackName(eventName){return'on'+eventName[0].toUpperCase()+eventName.substring(1);};var keyboardEventPropTypes=supportedKeyboardEvents.reduce(function(acc,eventName){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},keyboardEventToCallbackName(eventName),PropTypes.func));},{});var keyboardAwareHOCTypeEvents=supportedKeyboardEvents.reduce(function(acc,eventName){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},keyboardEventToCallbackName(eventName),Function));},{});function getDisplayName(WrappedComponent){return WrappedComponent&&(WrappedComponent.displayName||WrappedComponent.name)||'Component';}var ScrollIntoViewDefaultOptions={enableOnAndroid:false,contentContainerStyle:undefined,enableAutomaticScroll:true,extraHeight:_KAM_EXTRA_HEIGHT,extraScrollHeight:0,enableResetScrollToCoords:true,keyboardOpeningTime:_KAM_KEYBOARD_OPENING_TIME,viewIsInsideTabBar:false,refPropName:'ref',extractNativeRef:function extractNativeRef(ref){var shouldCallGetNode=!Platform.constants||Platform.constants.reactNativeVersion.major===0&&Platform.constants.reactNativeVersion.minor<62;if(ref.getNode&&shouldCallGetNode){return ref.getNode();}else{return ref;}}};function KeyboardAwareHOC(ScrollableComponent){var _class;var userOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var hocOptions=_objectSpread(_objectSpread({},ScrollIntoViewDefaultOptions),userOptions);return _class=function(_React$Component){_inherits(_class,_React$Component);var _super=_createSuper(_class);function _class(props){var _ref;var _this;_classCallCheck(this,_class);_this=_super.call(this,props);_this.getScrollResponder=function(){return _this._rnkasv_keyboardView&&_this._rnkasv_keyboardView.getScrollResponder&&_this._rnkasv_keyboardView.getScrollResponder();};_this.scrollToPosition=function(x,y){var animated=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var responder=_this.getScrollResponder();if(!responder){return;}if(responder.scrollResponderScrollTo){responder.scrollResponderScrollTo({x:x,y:y,animated:animated});}else if(responder.scrollTo){responder.scrollTo({x:x,y:y,animated:animated});}};_this.scrollToEnd=function(){var animated=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var responder=_this.getScrollResponder();if(!responder){return;}if(responder.scrollResponderScrollToEnd){responder.scrollResponderScrollToEnd({animated:animated});}else if(responder.scrollToEnd){responder.scrollToEnd({animated:animated});}};_this.scrollForExtraHeightOnAndroid=function(extraHeight){_this.scrollToPosition(0,_this.position.y+extraHeight,true);};_this.scrollToFocusedInput=function(reactNode,extraHeight,keyboardOpeningTime){if(extraHeight===undefined){extraHeight=_this.props.extraHeight||0;}if(keyboardOpeningTime===undefined){keyboardOpeningTime=_this.props.keyboardOpeningTime||0;}setTimeout(function(){if(!_this.mountedComponent){return;}var responder=_this.getScrollResponder();responder&&responder.scrollResponderScrollNativeHandleToKeyboard(reactNode,extraHeight,true);},keyboardOpeningTime);};_this.scrollIntoView=function(_x){return(_ref=_ref||_asyncToGenerator(function*(element){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!_this._rnkasv_keyboardView||!element){return;}var _yield$Promise$all=yield Promise.all([_this._measureElement(_this._rnkasv_keyboardView),_this._measureElement(element)]),_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2),parentLayout=_yield$Promise$all2[0],childLayout=_yield$Promise$all2[1];var getScrollPosition=options.getScrollPosition||_this._defaultGetScrollPosition;var _getScrollPosition=getScrollPosition(parentLayout,childLayout,_this.position),x=_getScrollPosition.x,y=_getScrollPosition.y,animated=_getScrollPosition.animated;_this.scrollToPosition(x,y,animated);})).apply(this,arguments);};_this._defaultGetScrollPosition=function(parentLayout,childLayout,contentOffset){return{x:0,y:Math.max(0,childLayout.y-parentLayout.y+contentOffset.y),animated:true};};_this._measureElement=function(element){var node=findNodeHandle(element);return new Promise(function(resolve){UIManager.measureInWindow(node,function(x,y,width,height){resolve({x:x,y:y,width:width,height:height});});});};_this._updateKeyboardSpace=function(frames){if(_this.props.enableAutomaticScroll){var keyboardSpace=frames.endCoordinates.height+_this.props.extraScrollHeight;if(_this.props.viewIsInsideTabBar){keyboardSpace-=_KAM_DEFAULT_TAB_BAR_HEIGHT;}_this.setState({keyboardSpace:keyboardSpace});var currentlyFocusedField=TextInput.State.currentlyFocusedInput?findNodeHandle(TextInput.State.currentlyFocusedInput()):TextInput.State.currentlyFocusedField();var responder=_this.getScrollResponder();if(!currentlyFocusedField||!responder){return;}UIManager.viewIsDescendantOf(currentlyFocusedField,responder.getInnerViewNode(),function(isAncestor){if(isAncestor){UIManager.measureInWindow(currentlyFocusedField,function(x,y,width,height){var textInputBottomPosition=y+height;var keyboardPosition=frames.endCoordinates.screenY;var totalExtraHeight=_this.props.extraScrollHeight+_this.props.extraHeight;if(Platform.OS==='ios'){if(textInputBottomPosition>keyboardPosition-totalExtraHeight){_this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);}}else{if(textInputBottomPosition>keyboardPosition){keyboardSpace=keyboardSpace-(textInputBottomPosition-keyboardPosition);_this.setState({keyboardSpace:keyboardSpace});_this.scrollForExtraHeightOnAndroid(totalExtraHeight);}else if(textInputBottomPosition>keyboardPosition-totalExtraHeight){_this.scrollForExtraHeightOnAndroid(totalExtraHeight-(keyboardPosition-textInputBottomPosition));}}});}});}if(!_this.props.resetScrollToCoords){if(!_this.defaultResetScrollToCoords){_this.defaultResetScrollToCoords=_this.position;}}};_this._resetKeyboardSpace=function(){var keyboardSpace=_this.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;_this.setState({keyboardSpace:keyboardSpace});if(_this.props.enableResetScrollToCoords===false){_this.defaultResetScrollToCoords=null;return;}else if(_this.props.resetScrollToCoords){_this.scrollToPosition(_this.props.resetScrollToCoords.x,_this.props.resetScrollToCoords.y,true);}else{if(_this.defaultResetScrollToCoords){_this.scrollToPosition(_this.defaultResetScrollToCoords.x,_this.defaultResetScrollToCoords.y,true);_this.defaultResetScrollToCoords=null;}else{_this.scrollToPosition(0,0,true);}}};_this._scrollToFocusedInputWithNodeHandle=function(nodeID,extraHeight,keyboardOpeningTime){if(extraHeight===undefined){extraHeight=_this.props.extraHeight;}var reactNode=findNodeHandle(nodeID);_this.scrollToFocusedInput(reactNode,extraHeight+_this.props.extraScrollHeight,keyboardOpeningTime!==undefined?keyboardOpeningTime:_this.props.keyboardOpeningTime||0);};_this._handleOnScroll=function(e){_this.position=e.nativeEvent.contentOffset;};_this._handleRef=function(ref){_this._rnkasv_keyboardView=ref?hocOptions.extractNativeRef(ref):ref;if(_this.props.innerRef){_this.props.innerRef(_this._rnkasv_keyboardView);}};_this.update=function(){var currentlyFocusedField=TextInput.State.currentlyFocusedInput?findNodeHandle(TextInput.State.currentlyFocusedInput()):TextInput.State.currentlyFocusedField();var responder=_this.getScrollResponder();if(!currentlyFocusedField||!responder){return;}_this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);};_this.keyboardWillShowEvent=undefined;_this.keyboardWillHideEvent=undefined;_this.callbacks={};_this.position={x:0,y:0};_this.defaultResetScrollToCoords=null;var _keyboardSpace=props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;_this.state={keyboardSpace:_keyboardSpace};return _this;}_createClass(_class,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.mountedComponent=true;if(Platform.OS==='ios'){this.keyboardWillShowEvent=Keyboard.addListener('keyboardWillShow',this._updateKeyboardSpace);this.keyboardWillHideEvent=Keyboard.addListener('keyboardWillHide',this._resetKeyboardSpace);}else if(Platform.OS==='android'&&this.props.enableOnAndroid){this.keyboardWillShowEvent=Keyboard.addListener('keyboardDidShow',this._updateKeyboardSpace);this.keyboardWillHideEvent=Keyboard.addListener('keyboardDidHide',this._resetKeyboardSpace);}supportedKeyboardEvents.forEach(function(eventName){var callbackName=keyboardEventToCallbackName(eventName);if(_this2.props[callbackName]){_this2.callbacks[eventName]=Keyboard.addListener(eventName,_this2.props[callbackName]);}});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.viewIsInsideTabBar!==prevProps.viewIsInsideTabBar){var keyboardSpace=this.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;if(this.state.keyboardSpace!==keyboardSpace){this.setState({keyboardSpace:keyboardSpace});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.mountedComponent=false;this.keyboardWillShowEvent&&this.keyboardWillShowEvent.remove();this.keyboardWillHideEvent&&this.keyboardWillHideEvent.remove();Object.values(this.callbacks).forEach(function(callback){return callback.remove();});}},{key:\"render\",value:function render(){var _this$props=this.props,enableOnAndroid=_this$props.enableOnAndroid,contentContainerStyle=_this$props.contentContainerStyle,onScroll=_this$props.onScroll;var newContentContainerStyle;if(Platform.OS==='android'&&enableOnAndroid){newContentContainerStyle=[].concat(contentContainerStyle).concat({paddingBottom:((contentContainerStyle||{}).paddingBottom||0)+this.state.keyboardSpace});}var refProps=_defineProperty({},hocOptions.refPropName,this._handleRef);return _jsx(ScrollableComponent,_objectSpread(_objectSpread(_objectSpread({},refProps),{},{keyboardDismissMode:\"interactive\",contentInset:{bottom:this.state.keyboardSpace},automaticallyAdjustContentInsets:false,showsVerticalScrollIndicator:true,scrollEventThrottle:1},this.props),{},{contentContainerStyle:newContentContainerStyle||contentContainerStyle,keyboardSpace:this.state.keyboardSpace,getScrollResponder:this.getScrollResponder,scrollToPosition:this.scrollToPosition,scrollToEnd:this.scrollToEnd,scrollForExtraHeightOnAndroid:this.scrollForExtraHeightOnAndroid,scrollToFocusedInput:this.scrollToFocusedInput,scrollIntoView:this.scrollIntoView,resetKeyboardSpace:this._resetKeyboardSpace,handleOnScroll:this._handleOnScroll,update:this.update,onScroll:Animated.forkEvent(onScroll,this._handleOnScroll)}));}}]);return _class;}(React.Component),_class.displayName=`KeyboardAware${getDisplayName(ScrollableComponent)}`,_class.propTypes=_objectSpread({viewIsInsideTabBar:PropTypes.bool,resetScrollToCoords:PropTypes.shape({x:PropTypes.number.isRequired,y:PropTypes.number.isRequired}),enableResetScrollToCoords:PropTypes.bool,enableAutomaticScroll:PropTypes.bool,extraHeight:PropTypes.number,extraScrollHeight:PropTypes.number,keyboardOpeningTime:PropTypes.number,onScroll:PropTypes.oneOfType([PropTypes.func,PropTypes.object]),update:PropTypes.func,contentContainerStyle:PropTypes.any,enableOnAndroid:PropTypes.bool,innerRef:PropTypes.func},keyboardEventPropTypes),_class.defaultProps={enableAutomaticScroll:hocOptions.enableAutomaticScroll,extraHeight:hocOptions.extraHeight,extraScrollHeight:hocOptions.extraScrollHeight,enableResetScrollToCoords:hocOptions.enableResetScrollToCoords,keyboardOpeningTime:hocOptions.keyboardOpeningTime,viewIsInsideTabBar:hocOptions.viewIsInsideTabBar,enableOnAndroid:hocOptions.enableOnAndroid},_class;}var listenToKeyboardEvents=function listenToKeyboardEvents(configOrComp){if(typeof configOrComp==='object'&&!configOrComp.displayName){return function(Comp){return KeyboardAwareHOC(Comp,configOrComp);};}else{return KeyboardAwareHOC(configOrComp);}};export default listenToKeyboardEvents;","map":{"version":3,"names":["React","PropTypes","Keyboard","Platform","UIManager","TextInput","findNodeHandle","Animated","isIphoneX","jsx","_jsx","_KAM_DEFAULT_TAB_BAR_HEIGHT","_KAM_KEYBOARD_OPENING_TIME","_KAM_EXTRA_HEIGHT","supportedKeyboardEvents","keyboardEventToCallbackName","eventName","toUpperCase","substring","keyboardEventPropTypes","reduce","acc","_objectSpread","_defineProperty","func","keyboardAwareHOCTypeEvents","Function","getDisplayName","WrappedComponent","displayName","name","ScrollIntoViewDefaultOptions","enableOnAndroid","contentContainerStyle","undefined","enableAutomaticScroll","extraHeight","extraScrollHeight","enableResetScrollToCoords","keyboardOpeningTime","viewIsInsideTabBar","refPropName","extractNativeRef","ref","shouldCallGetNode","constants","reactNativeVersion","major","minor","getNode","KeyboardAwareHOC","ScrollableComponent","_class","userOptions","arguments","length","hocOptions","_React$Component","_inherits","_super","_createSuper","props","_ref","_this","_classCallCheck","call","getScrollResponder","_rnkasv_keyboardView","scrollToPosition","x","y","animated","responder","scrollResponderScrollTo","scrollTo","scrollToEnd","scrollResponderScrollToEnd","scrollForExtraHeightOnAndroid","position","scrollToFocusedInput","reactNode","setTimeout","mountedComponent","scrollResponderScrollNativeHandleToKeyboard","scrollIntoView","_x","_asyncToGenerator","element","options","_yield$Promise$all","Promise","all","_measureElement","_yield$Promise$all2","_slicedToArray","parentLayout","childLayout","getScrollPosition","_defaultGetScrollPosition","_getScrollPosition","apply","contentOffset","Math","max","node","resolve","measureInWindow","width","height","_updateKeyboardSpace","frames","keyboardSpace","endCoordinates","setState","currentlyFocusedField","State","currentlyFocusedInput","viewIsDescendantOf","getInnerViewNode","isAncestor","textInputBottomPosition","keyboardPosition","screenY","totalExtraHeight","OS","_scrollToFocusedInputWithNodeHandle","resetScrollToCoords","defaultResetScrollToCoords","_resetKeyboardSpace","nodeID","_handleOnScroll","e","nativeEvent","_handleRef","innerRef","update","keyboardWillShowEvent","keyboardWillHideEvent","callbacks","state","_createClass","key","value","componentDidMount","_this2","addListener","forEach","callbackName","componentDidUpdate","prevProps","componentWillUnmount","remove","Object","values","callback","render","_this$props","onScroll","newContentContainerStyle","concat","paddingBottom","refProps","keyboardDismissMode","contentInset","bottom","automaticallyAdjustContentInsets","showsVerticalScrollIndicator","scrollEventThrottle","resetKeyboardSpace","handleOnScroll","forkEvent","Component","propTypes","bool","shape","number","isRequired","oneOfType","object","any","defaultProps","listenToKeyboardEvents","configOrComp","Comp"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-keyboard-aware-scroll-view/lib/KeyboardAwareHOC.js"],"sourcesContent":["/* @flow */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Keyboard,\n  Platform,\n  UIManager,\n  TextInput,\n  findNodeHandle,\n  Animated\n} from 'react-native'\nimport { isIphoneX } from 'react-native-iphone-x-helper'\nimport type { KeyboardAwareInterface } from './KeyboardAwareInterface'\n\nconst _KAM_DEFAULT_TAB_BAR_HEIGHT: number = isIphoneX() ? 83 : 49\nconst _KAM_KEYBOARD_OPENING_TIME: number = 250\nconst _KAM_EXTRA_HEIGHT: number = 75\n\nconst supportedKeyboardEvents = [\n  'keyboardWillShow',\n  'keyboardDidShow',\n  'keyboardWillHide',\n  'keyboardDidHide',\n  'keyboardWillChangeFrame',\n  'keyboardDidChangeFrame'\n]\nconst keyboardEventToCallbackName = (eventName: string) =>\n  'on' + eventName[0].toUpperCase() + eventName.substring(1)\nconst keyboardEventPropTypes = supportedKeyboardEvents.reduce(\n  (acc: Object, eventName: string) => ({\n    ...acc,\n    [keyboardEventToCallbackName(eventName)]: PropTypes.func\n  }),\n  {}\n)\nconst keyboardAwareHOCTypeEvents = supportedKeyboardEvents.reduce(\n  (acc: Object, eventName: string) => ({\n    ...acc,\n    [keyboardEventToCallbackName(eventName)]: Function\n  }),\n  {}\n)\n\nexport type KeyboardAwareHOCProps = {\n  viewIsInsideTabBar?: boolean,\n  resetScrollToCoords?: {\n    x: number,\n    y: number\n  },\n  enableResetScrollToCoords?: boolean,\n  enableAutomaticScroll?: boolean,\n  extraHeight?: number,\n  extraScrollHeight?: number,\n  keyboardOpeningTime?: number,\n  onScroll?: Function,\n  update?: Function,\n  contentContainerStyle?: any,\n  enableOnAndroid?: boolean,\n  innerRef?: Function,\n  ...keyboardAwareHOCTypeEvents\n}\nexport type KeyboardAwareHOCState = {\n  keyboardSpace: number\n}\n\nexport type ElementLayout = {\n  x: number,\n  y: number,\n  width: number,\n  height: number\n}\n\nexport type ContentOffset = {\n  x: number,\n  y: number\n}\n\nexport type ScrollPosition = {\n  x: number,\n  y: number,\n  animated: boolean\n}\n\nexport type ScrollIntoViewOptions = ?{\n  getScrollPosition?: (\n    parentLayout: ElementLayout,\n    childLayout: ElementLayout,\n    contentOffset: ContentOffset\n  ) => ScrollPosition\n}\n\nexport type KeyboardAwareHOCOptions = ?{\n  enableOnAndroid: boolean,\n  contentContainerStyle: ?Object,\n  enableAutomaticScroll: boolean,\n  extraHeight: number,\n  extraScrollHeight: number,\n  enableResetScrollToCoords: boolean,\n  keyboardOpeningTime: number,\n  viewIsInsideTabBar: boolean,\n  refPropName: string,\n  extractNativeRef: Function\n}\n\nfunction getDisplayName(WrappedComponent: React$Component) {\n  return (\n    (WrappedComponent &&\n      (WrappedComponent.displayName || WrappedComponent.name)) ||\n    'Component'\n  )\n}\n\nconst ScrollIntoViewDefaultOptions: KeyboardAwareHOCOptions = {\n  enableOnAndroid: false,\n  contentContainerStyle: undefined,\n  enableAutomaticScroll: true,\n  extraHeight: _KAM_EXTRA_HEIGHT,\n  extraScrollHeight: 0,\n  enableResetScrollToCoords: true,\n  keyboardOpeningTime: _KAM_KEYBOARD_OPENING_TIME,\n  viewIsInsideTabBar: false,\n\n  // The ref prop name that will be passed to the wrapped component to obtain a ref\n  // If your ScrollView is already wrapped, maybe the wrapper permit to get a ref\n  // For example, with glamorous-native ScrollView, you should use \"innerRef\"\n  refPropName: 'ref',\n  // Sometimes the ref you get is a ref to a wrapped view (ex: Animated.ScrollView)\n  // We need access to the imperative API of a real native ScrollView so we need extraction logic\n  extractNativeRef: (ref: Object) => {\n    // getNode() permit to support Animated.ScrollView automatically, but is deprecated since RN 0.62\n    // see https://github.com/facebook/react-native/issues/19650\n    // see https://stackoverflow.com/questions/42051368/scrollto-is-undefined-on-animated-scrollview/48786374\n    // see https://github.com/facebook/react-native/commit/66e72bb4e00aafbcb9f450ed5db261d98f99f82a\n    const shouldCallGetNode = !Platform.constants || (Platform.constants.reactNativeVersion.major === 0 && Platform.constants.reactNativeVersion.minor < 62)\n    if (ref.getNode && shouldCallGetNode) {\n      return ref.getNode()\n    } else {\n      return ref\n    }\n  }\n}\n\nfunction KeyboardAwareHOC(\n  ScrollableComponent: React$Component,\n  userOptions: KeyboardAwareHOCOptions = {}\n) {\n  const hocOptions: KeyboardAwareHOCOptions = {\n    ...ScrollIntoViewDefaultOptions,\n    ...userOptions\n  }\n\n  return class\n    extends React.Component<KeyboardAwareHOCProps, KeyboardAwareHOCState>\n    implements KeyboardAwareInterface {\n    _rnkasv_keyboardView: any\n    keyboardWillShowEvent: ?Function\n    keyboardWillHideEvent: ?Function\n    position: ContentOffset\n    defaultResetScrollToCoords: ?{ x: number, y: number }\n    mountedComponent: boolean\n    handleOnScroll: Function\n    state: KeyboardAwareHOCState\n    static displayName = `KeyboardAware${getDisplayName(ScrollableComponent)}`\n\n    static propTypes = {\n      viewIsInsideTabBar: PropTypes.bool,\n      resetScrollToCoords: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      }),\n      enableResetScrollToCoords: PropTypes.bool,\n      enableAutomaticScroll: PropTypes.bool,\n      extraHeight: PropTypes.number,\n      extraScrollHeight: PropTypes.number,\n      keyboardOpeningTime: PropTypes.number,\n      onScroll: PropTypes.oneOfType([\n        PropTypes.func, // Normal listener\n        PropTypes.object // Animated.event listener\n      ]),\n      update: PropTypes.func,\n      contentContainerStyle: PropTypes.any,\n      enableOnAndroid: PropTypes.bool,\n      innerRef: PropTypes.func,\n      ...keyboardEventPropTypes\n    }\n\n    // HOC options are used to init default props, so that these options can be overriden with component props\n    static defaultProps = {\n      enableAutomaticScroll: hocOptions.enableAutomaticScroll,\n      extraHeight: hocOptions.extraHeight,\n      extraScrollHeight: hocOptions.extraScrollHeight,\n      enableResetScrollToCoords: hocOptions.enableResetScrollToCoords,\n      keyboardOpeningTime: hocOptions.keyboardOpeningTime,\n      viewIsInsideTabBar: hocOptions.viewIsInsideTabBar,\n      enableOnAndroid: hocOptions.enableOnAndroid\n    }\n\n    constructor(props: KeyboardAwareHOCProps) {\n      super(props)\n      this.keyboardWillShowEvent = undefined\n      this.keyboardWillHideEvent = undefined\n      this.callbacks = {}\n      this.position = { x: 0, y: 0 }\n      this.defaultResetScrollToCoords = null\n      const keyboardSpace: number = props.viewIsInsideTabBar\n        ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n        : 0\n      this.state = { keyboardSpace }\n    }\n\n    componentDidMount() {\n      this.mountedComponent = true\n      // Keyboard events\n      if (Platform.OS === 'ios') {\n        this.keyboardWillShowEvent = Keyboard.addListener(\n          'keyboardWillShow',\n          this._updateKeyboardSpace\n        )\n        this.keyboardWillHideEvent = Keyboard.addListener(\n          'keyboardWillHide',\n          this._resetKeyboardSpace\n        )\n      } else if (Platform.OS === 'android' && this.props.enableOnAndroid) {\n        this.keyboardWillShowEvent = Keyboard.addListener(\n          'keyboardDidShow',\n          this._updateKeyboardSpace\n        )\n        this.keyboardWillHideEvent = Keyboard.addListener(\n          'keyboardDidHide',\n          this._resetKeyboardSpace\n        )\n      }\n\n      supportedKeyboardEvents.forEach((eventName: string) => {\n        const callbackName = keyboardEventToCallbackName(eventName)\n        if (this.props[callbackName]) {\n          this.callbacks[eventName] = Keyboard.addListener(\n            eventName,\n            this.props[callbackName]\n          )\n        }\n      })\n    }\n\n    componentDidUpdate(prevProps: KeyboardAwareHOCProps) {\n      if (this.props.viewIsInsideTabBar !== prevProps.viewIsInsideTabBar) {\n        const keyboardSpace: number = this.props.viewIsInsideTabBar\n          ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n          : 0\n        if (this.state.keyboardSpace !== keyboardSpace) {\n          this.setState({ keyboardSpace })\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      this.mountedComponent = false\n      this.keyboardWillShowEvent && this.keyboardWillShowEvent.remove()\n      this.keyboardWillHideEvent && this.keyboardWillHideEvent.remove()\n      Object.values(this.callbacks).forEach((callback: Object) =>\n        callback.remove()\n      )\n    }\n\n    getScrollResponder = () => {\n      return (\n        this._rnkasv_keyboardView &&\n        this._rnkasv_keyboardView.getScrollResponder &&\n        this._rnkasv_keyboardView.getScrollResponder()\n      )\n    }\n\n    scrollToPosition = (x: number, y: number, animated: boolean = true) => {\n      const responder = this.getScrollResponder()\n      if (!responder) {\n        return\n      }\n      if (responder.scrollResponderScrollTo) {\n        // React Native < 0.65\n        responder.scrollResponderScrollTo({ x, y, animated })\n      } else if (responder.scrollTo) {\n        // React Native >= 0.65\n        responder.scrollTo({ x, y, animated })\n      }\n    }\n\n    scrollToEnd = (animated?: boolean = true) => {\n      const responder = this.getScrollResponder()\n      if (!responder) {\n        return\n      }\n      if (responder.scrollResponderScrollToEnd) {\n        // React Native < 0.65\n        responder.scrollResponderScrollToEnd({ animated })\n      } else if (responder.scrollToEnd) {\n        // React Native >= 0.65\n        responder.scrollToEnd({ animated })\n      }\n    }\n\n    scrollForExtraHeightOnAndroid = (extraHeight: number) => {\n      this.scrollToPosition(0, this.position.y + extraHeight, true)\n    }\n\n    /**\n     * @param keyboardOpeningTime: takes a different keyboardOpeningTime in consideration.\n     * @param extraHeight: takes an extra height in consideration.\n     */\n    scrollToFocusedInput = (\n      reactNode: any,\n      extraHeight?: number,\n      keyboardOpeningTime?: number\n    ) => {\n      if (extraHeight === undefined) {\n        extraHeight = this.props.extraHeight || 0\n      }\n      if (keyboardOpeningTime === undefined) {\n        keyboardOpeningTime = this.props.keyboardOpeningTime || 0\n      }\n      setTimeout(() => {\n        if (!this.mountedComponent) {\n          return\n        }\n        const responder = this.getScrollResponder()\n        responder &&\n          responder.scrollResponderScrollNativeHandleToKeyboard(\n            reactNode,\n            extraHeight,\n            true\n          )\n      }, keyboardOpeningTime)\n    }\n\n    scrollIntoView = async (\n      element: React.Element<*>,\n      options: ScrollIntoViewOptions = {}\n    ) => {\n      if (!this._rnkasv_keyboardView || !element) {\n        return\n      }\n\n      const [parentLayout, childLayout] = await Promise.all([\n        this._measureElement(this._rnkasv_keyboardView),\n        this._measureElement(element)\n      ])\n\n      const getScrollPosition =\n        options.getScrollPosition || this._defaultGetScrollPosition\n      const { x, y, animated } = getScrollPosition(\n        parentLayout,\n        childLayout,\n        this.position\n      )\n      this.scrollToPosition(x, y, animated)\n    }\n\n    _defaultGetScrollPosition = (\n      parentLayout: ElementLayout,\n      childLayout: ElementLayout,\n      contentOffset: ContentOffset\n    ): ScrollPosition => {\n      return {\n        x: 0,\n        y: Math.max(0, childLayout.y - parentLayout.y + contentOffset.y),\n        animated: true\n      }\n    }\n\n    _measureElement = (element: React.Element<*>): Promise<ElementLayout> => {\n      const node = findNodeHandle(element)\n      return new Promise((resolve: ElementLayout => void) => {\n        UIManager.measureInWindow(\n          node,\n          (x: number, y: number, width: number, height: number) => {\n            resolve({ x, y, width, height })\n          }\n        )\n      })\n    }\n\n    // Keyboard actions\n    _updateKeyboardSpace = (frames: Object) => {\n      // Automatically scroll to focused TextInput\n      if (this.props.enableAutomaticScroll) {\n        let keyboardSpace: number =\n          frames.endCoordinates.height + this.props.extraScrollHeight\n        if (this.props.viewIsInsideTabBar) {\n          keyboardSpace -= _KAM_DEFAULT_TAB_BAR_HEIGHT\n        }\n        this.setState({ keyboardSpace })\n        const currentlyFocusedField =  TextInput.State.currentlyFocusedInput ? findNodeHandle(TextInput.State.currentlyFocusedInput()) : TextInput.State.currentlyFocusedField()\n        const responder = this.getScrollResponder()\n        if (!currentlyFocusedField || !responder) {\n          return\n        }\n        UIManager.viewIsDescendantOf(\n          currentlyFocusedField,\n          responder.getInnerViewNode(),\n          (isAncestor: boolean) => {\n            if (isAncestor) {\n              // Check if the TextInput will be hidden by the keyboard\n              UIManager.measureInWindow(\n                currentlyFocusedField,\n                (x: number, y: number, width: number, height: number) => {\n                  const textInputBottomPosition = y + height\n                  const keyboardPosition = frames.endCoordinates.screenY\n                  const totalExtraHeight =\n                    this.props.extraScrollHeight + this.props.extraHeight\n                  if (Platform.OS === 'ios') {\n                    if (\n                      textInputBottomPosition >\n                      keyboardPosition - totalExtraHeight\n                    ) {\n                      this._scrollToFocusedInputWithNodeHandle(\n                        currentlyFocusedField\n                      )\n                    }\n                  } else {\n                    // On android, the system would scroll the text input just\n                    // above the keyboard so we just neet to scroll the extra\n                    // height part\n                    if (textInputBottomPosition > keyboardPosition) {\n                      // Since the system already scrolled the whole view up\n                      // we should reduce that amount\n                      keyboardSpace =\n                        keyboardSpace -\n                        (textInputBottomPosition - keyboardPosition)\n                      this.setState({ keyboardSpace })\n                      this.scrollForExtraHeightOnAndroid(totalExtraHeight)\n                    } else if (\n                      textInputBottomPosition >\n                      keyboardPosition - totalExtraHeight\n                    ) {\n                      this.scrollForExtraHeightOnAndroid(\n                        totalExtraHeight -\n                          (keyboardPosition - textInputBottomPosition)\n                      )\n                    }\n                  }\n                }\n              )\n            }\n          }\n        )\n      }\n      if (!this.props.resetScrollToCoords) {\n        if (!this.defaultResetScrollToCoords) {\n          this.defaultResetScrollToCoords = this.position\n        }\n      }\n    }\n\n    _resetKeyboardSpace = () => {\n      const keyboardSpace: number = this.props.viewIsInsideTabBar\n        ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n        : 0\n      this.setState({ keyboardSpace })\n      // Reset scroll position after keyboard dismissal\n      if (this.props.enableResetScrollToCoords === false) {\n        this.defaultResetScrollToCoords = null\n        return\n      } else if (this.props.resetScrollToCoords) {\n        this.scrollToPosition(\n          this.props.resetScrollToCoords.x,\n          this.props.resetScrollToCoords.y,\n          true\n        )\n      } else {\n        if (this.defaultResetScrollToCoords) {\n          this.scrollToPosition(\n            this.defaultResetScrollToCoords.x,\n            this.defaultResetScrollToCoords.y,\n            true\n          )\n          this.defaultResetScrollToCoords = null\n        } else {\n          this.scrollToPosition(0, 0, true)\n        }\n      }\n    }\n\n    _scrollToFocusedInputWithNodeHandle = (\n      nodeID: number,\n      extraHeight?: number,\n      keyboardOpeningTime?: number\n    ) => {\n      if (extraHeight === undefined) {\n        extraHeight = this.props.extraHeight\n      }\n      const reactNode = findNodeHandle(nodeID)\n      this.scrollToFocusedInput(\n        reactNode,\n        extraHeight + this.props.extraScrollHeight,\n        keyboardOpeningTime !== undefined\n          ? keyboardOpeningTime\n          : this.props.keyboardOpeningTime || 0\n      )\n    }\n\n    _handleOnScroll = (\n      e: SyntheticEvent<*> & { nativeEvent: { contentOffset: number } }\n    ) => {\n      this.position = e.nativeEvent.contentOffset\n    }\n\n    _handleRef = (ref: React.Component<*>) => {\n      this._rnkasv_keyboardView = ref ? hocOptions.extractNativeRef(ref) : ref\n      if (this.props.innerRef) {\n        this.props.innerRef(this._rnkasv_keyboardView)\n      }\n    }\n\n    update = () => {\n      const currentlyFocusedField =  TextInput.State.currentlyFocusedInput ? findNodeHandle(TextInput.State.currentlyFocusedInput()) : TextInput.State.currentlyFocusedField()\n      const responder = this.getScrollResponder()\n\n      if (!currentlyFocusedField || !responder) {\n        return\n      }\n\n      this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField)\n    }\n\n    render() {\n      const { enableOnAndroid, contentContainerStyle, onScroll } = this.props\n      let newContentContainerStyle\n      if (Platform.OS === 'android' && enableOnAndroid) {\n        newContentContainerStyle = [].concat(contentContainerStyle).concat({\n          paddingBottom:\n            ((contentContainerStyle || {}).paddingBottom || 0) +\n            this.state.keyboardSpace\n        })\n      }\n      const refProps = { [hocOptions.refPropName]: this._handleRef }\n      return (\n        <ScrollableComponent\n          {...refProps}\n          keyboardDismissMode='interactive'\n          contentInset={{ bottom: this.state.keyboardSpace }}\n          automaticallyAdjustContentInsets={false}\n          showsVerticalScrollIndicator={true}\n          scrollEventThrottle={1}\n          {...this.props}\n          contentContainerStyle={\n            newContentContainerStyle || contentContainerStyle\n          }\n          keyboardSpace={this.state.keyboardSpace}\n          getScrollResponder={this.getScrollResponder}\n          scrollToPosition={this.scrollToPosition}\n          scrollToEnd={this.scrollToEnd}\n          scrollForExtraHeightOnAndroid={this.scrollForExtraHeightOnAndroid}\n          scrollToFocusedInput={this.scrollToFocusedInput}\n          scrollIntoView={this.scrollIntoView}\n          resetKeyboardSpace={this._resetKeyboardSpace}\n          handleOnScroll={this._handleOnScroll}\n          update={this.update}\n          onScroll={Animated.forkEvent(onScroll, this._handleOnScroll)}\n        />\n      )\n    }\n  }\n}\n\n// Allow to pass options, without breaking change, and curried for composition\n// listenToKeyboardEvents(ScrollView);\n// listenToKeyboardEvents(options)(Comp);\nconst listenToKeyboardEvents = (configOrComp: any) => {\n  if (typeof configOrComp === 'object' && !configOrComp.displayName) {\n    return (Comp: Function) => KeyboardAwareHOC(Comp, configOrComp)\n  } else {\n    return KeyboardAwareHOC(configOrComp)\n  }\n}\n\nexport default listenToKeyboardEvents\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}