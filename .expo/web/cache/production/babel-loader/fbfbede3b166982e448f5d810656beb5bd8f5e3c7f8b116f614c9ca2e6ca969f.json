{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"style\",\"children\",\"borderless\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=GenericPressable;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _SharedPropsProvider=require(\"./context/SharedPropsProvider\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function GenericPressable(_ref){var style=_ref.style,children=_ref.children,_ref$borderless=_ref.borderless,borderless=_ref$borderless===void 0?false:_ref$borderless,otherProps=_objectWithoutProperties(_ref,_excluded);var _ref2=(0,_SharedPropsProvider.useSharedProps)(),pressableHightlightColor=_ref2.pressableHightlightColor,UserProvidedPressable=_ref2.GenericPressable;if(UserProvidedPressable){return _react.default.createElement(UserProvidedPressable,_extends({style:style,borderless:borderless},otherProps),children);}if(_reactNative.Platform.OS==='android'){return _react.default.createElement(_reactNative.View,{style:style},_react.default.createElement(_reactNative.TouchableNativeFeedback,_extends({useForeground:true,background:_reactNative.TouchableNativeFeedback.Ripple(pressableHightlightColor,borderless)},otherProps),_react.default.createElement(_reactNative.View,{testID:\"generic-pressable\"},children)));}return _react.default.createElement(_reactNative.TouchableHighlight,_extends({underlayColor:pressableHightlightColor,style:style},otherProps),_react.default.createElement(_reactNative.View,{testID:\"generic-pressable\"},children));}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_SharedPropsProvider","GenericPressable","_ref","style","children","_ref$borderless","borderless","otherProps","_objectWithoutProperties","_excluded","_ref2","useSharedProps","pressableHightlightColor","UserProvidedPressable","default","createElement","_extends","Platform","OS","View","TouchableNativeFeedback","useForeground","background","Ripple","testID","TouchableHighlight","underlayColor"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/lib/commonjs/GenericPressable.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport {\n  Platform,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  View\n} from 'react-native';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport { GenericPressableProps } from './shared-types';\n\nexport default function GenericPressable({\n  style,\n  children,\n  borderless = false,\n  ...otherProps\n}: PropsWithChildren<GenericPressableProps>) {\n  const { pressableHightlightColor, GenericPressable: UserProvidedPressable } =\n    useSharedProps();\n  if (UserProvidedPressable) {\n    return (\n      <UserProvidedPressable\n        style={style}\n        borderless={borderless}\n        {...(otherProps as any)}>\n        {children}\n      </UserProvidedPressable>\n    );\n  }\n  if (Platform.OS === 'android') {\n    // TouchableNativeFeedback does not support a\n    // style prop. So we must wrap it inside a View.\n    return (\n      <View style={style}>\n        <TouchableNativeFeedback\n          useForeground\n          background={TouchableNativeFeedback.Ripple(\n            pressableHightlightColor,\n            borderless\n          )}\n          {...(otherProps as any)}>\n          <View testID=\"generic-pressable\">{children}</View>\n        </TouchableNativeFeedback>\n      </View>\n    );\n  }\n  return (\n    <TouchableHighlight\n      underlayColor={pressableHightlightColor}\n      style={style}\n      {...(otherProps as any)}>\n      <View testID=\"generic-pressable\">{children}</View>\n    </TouchableHighlight>\n  );\n}\n"],"mappings":"8OAAA,IAAAA,MAAA,CAAAC,sBAAA,CAAAC,OAAA,eAAAC,YAAA,CAAAD,OAAA,gCAOA,IAAAE,oBAAA,CAAAF,OAAA,kC,0WAGe,QAAS,CAAAG,gBAATA,CAAAC,IAAA,CAK8B,IAJ3C,CAAAC,KADuC,CAAAD,IAAA,CACvCC,KADuC,CAEvCC,QAFuC,CAAAF,IAAA,CAEvCE,QAFuC,CAAAC,eAAA,CAAAH,IAAA,CAGvCI,UAAU,CAAVA,UAAU,CAAAD,eAAA,UAAG,KAH0B,CAAAA,eAAA,CAIpCE,UAAA,CAAAC,wBAAA,CAAAN,IAAA,CAAAO,SAAA,EAEH,IAAAC,KAAA,CACE,GAAAV,oBAAA,CAAAW,cAAA,GADF,CAAQC,wBAAF,CAAAF,KAAA,CAAEE,wBAAF,CAA8CC,qBAAA,CAAAH,KAAA,CAAlBT,gBAAgB,CAElD,GAAIY,qBAAJ,CAA2B,CACzB,MACE,CAAAjB,MAAA,CAAAkB,OAAA,CAAAC,aAAA,CAACF,qBAAD,CAAAG,QAAA,EACEb,KAAK,CAAEA,KADT,CAEEG,UAAU,CAAEA,UAFd,EAGOC,UAHP,EAIGH,QAJH,CADF,CAQD,CACD,GAAIL,YAAA,CAAAkB,QAAA,CAASC,EAAT,GAAgB,SAApB,CAA+B,CAG7B,MACE,CAAAtB,MAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,YAAA,CAAAoB,IAAD,EAAMhB,KAAK,CAAEA,KAAb,EACEP,MAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,YAAA,CAAAqB,uBAAD,CAAAJ,QAAA,EACEK,aAAa,KADf,CAEEC,UAAU,CAAEvB,YAAA,CAAAqB,uBAAA,CAAwBG,MAAxB,CACVX,wBADU,CAEVN,UAFU,CAFd,EAMOC,UANP,EAOEX,MAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,YAAA,CAAAoB,IAAD,EAAMK,MAAM,CAAC,mBAAb,EAAkCpB,QAAlC,CAPF,CADF,CADF,CAaD,CACD,MACE,CAAAR,MAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,YAAA,CAAA0B,kBAAD,CAAAT,QAAA,EACEU,aAAa,CAAEd,wBADjB,CAEET,KAAK,CAAEA,KAFT,EAGOI,UAHP,EAIEX,MAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,YAAA,CAAAoB,IAAD,EAAMK,MAAM,CAAC,mBAAb,EAAkCpB,QAAlC,CAJF,CADF,CAQD"},"metadata":{},"sourceType":"script","externalDependencies":[]}