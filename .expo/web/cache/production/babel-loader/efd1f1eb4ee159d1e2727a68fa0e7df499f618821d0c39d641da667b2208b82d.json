{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useRoute}from'@react-navigation/native';import React,{useState}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{showMessage}from'react-native-flash-message';import{TextInput}from'react-native-paper';import{useDispatch}from'react-redux';import{CustomButton,CustomHeader}from\"../../components\";import{navigationStrings,Strings}from\"../../constants\";import{resetPassword}from\"../../redux/actions/ach\";import{showLoader}from\"../../redux/actions/user\";import{Colors}from\"../../theme\";import styling from\"./ConfirmPasswordStyle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConfirmPasswordScreen=function ConfirmPasswordScreen(_ref){var _route$params,_ref2,_Colors$theme,_Colors$theme2;var navigation=_ref.navigation;var route=useRoute();var dispatch=useDispatch();var theme=route==null?void 0:(_route$params=route.params)==null?void 0:_route$params.theme;var styles=styling(theme);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),passwordVisible=_useState2[0],setPasswordVisible=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),passwordVisible1=_useState4[0],setPasswordVisible1=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),passwordError=_useState8[0],setPasswordError=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),confirmPassword=_useState10[0],setConfirmPassword=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),confirmPasswordError=_useState12[0],setConfirmPasswordError=_useState12[1];var validation=function validation(){var isValid=false;if(password.length===0){isValid=true;setPasswordError('Please enter password.');}if(confirmPassword.length===0){isValid=true;setConfirmPasswordError('Please enter confirm password.');}if(confirmPassword!==password){isValid=true;setConfirmPasswordError('Password and Confirm password should be match.');}return isValid;};var onLogin=function onLogin(){return(_ref2=_ref2||_asyncToGenerator(function*(){if(!validation()){var _route$params2,_reset_response$data;yield dispatch(showLoader(true));var data={email_or_phone:route==null?void 0:(_route$params2=route.params)==null?void 0:_route$params2.email,new_password:password};var reset_response=yield resetPassword(data);yield dispatch(showLoader(false));if((reset_response==null?void 0:(_reset_response$data=reset_response.data)==null?void 0:_reset_response$data.status)===1){navigation.navigate(navigationStrings.AUTHSTACK);}else{var _reset_response$data2;showMessage({message:`${reset_response==null?void 0:(_reset_response$data2=reset_response.data)==null?void 0:_reset_response$data2.message}`,type:\"danger\"});}}})).apply(this,arguments);};return _jsxs(View,{style:styles.screen,children:[_jsx(CustomHeader,{theme:theme,onPressBack:function onPressBack(){return navigation.goBack();}}),_jsx(ScrollView,{children:_jsx(View,{style:styles.container,children:_jsxs(View,{style:styles.card,children:[_jsx(TextInput,{secureTextEntry:!passwordVisible,mode:'outlined',label:Strings.password,style:styles.textInput,activeOutlineColor:(_Colors$theme=Colors[theme])==null?void 0:_Colors$theme.black,onChangeText:function onChangeText(text){return setPassword(text);},right:passwordVisible?_jsx(TextInput.Icon,{name:'eye-off',onPress:function onPress(){return setPasswordVisible(!passwordVisible);}}):_jsx(TextInput.Icon,{name:'eye',onPress:function onPress(){return setPasswordVisible(!passwordVisible);}})}),_jsx(TextInput,{secureTextEntry:!passwordVisible1,mode:'outlined',label:Strings.confirm.toUpperCase()+\" \"+Strings.password,style:styles.textInput,activeOutlineColor:(_Colors$theme2=Colors[theme])==null?void 0:_Colors$theme2.black,onChangeText:function onChangeText(text){return setConfirmPassword(text);},right:passwordVisible1?_jsx(TextInput.Icon,{name:'eye-off',onPress:function onPress(){return setPasswordVisible1(!passwordVisible);}}):_jsx(TextInput.Icon,{name:'eye',onPress:function onPress(){return setPasswordVisible1(!passwordVisible);}})})]})})}),_jsx(View,{style:styles.ConfirmParent,children:_jsx(CustomButton,{theme:theme,onBtnPress:function onBtnPress(){return onLogin();},buttonTitle:Strings.confirm,buttonStyle:styles.confirmBtn,buttonTitleStyle:styles.confirmText})})]});};export default ConfirmPasswordScreen;","map":{"version":3,"names":["useRoute","React","useState","Text","View","ScrollView","showMessage","TextInput","useDispatch","CustomButton","CustomHeader","navigationStrings","Strings","resetPassword","showLoader","Colors","styling","jsx","_jsx","jsxs","_jsxs","ConfirmPasswordScreen","_ref","_route$params","_ref2","_Colors$theme","_Colors$theme2","navigation","route","dispatch","theme","params","styles","_useState","_useState2","_slicedToArray","passwordVisible","setPasswordVisible","_useState3","_useState4","passwordVisible1","setPasswordVisible1","_useState5","_useState6","password","setPassword","_useState7","_useState8","passwordError","setPasswordError","_useState9","_useState10","confirmPassword","setConfirmPassword","_useState11","_useState12","confirmPasswordError","setConfirmPasswordError","validation","isValid","length","onLogin","_asyncToGenerator","_route$params2","_reset_response$data","data","email_or_phone","email","new_password","reset_response","status","navigate","AUTHSTACK","_reset_response$data2","message","type","apply","arguments","style","screen","children","onPressBack","goBack","container","card","secureTextEntry","mode","label","textInput","activeOutlineColor","black","onChangeText","text","right","Icon","name","onPress","confirm","toUpperCase","ConfirmParent","onBtnPress","buttonTitle","buttonStyle","confirmBtn","buttonTitleStyle","confirmText"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/ConfirmPassword/ConfirmPasswordScreen.js"],"sourcesContent":["import { useRoute } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { Text, View, ScrollView } from 'react-native';\nimport { showMessage } from 'react-native-flash-message';\nimport { TextInput } from 'react-native-paper';\nimport { useDispatch } from 'react-redux';\nimport { CustomButton, CustomHeader } from '../../components';\nimport { navigationStrings, Strings } from '../../constants';\nimport { resetPassword } from '../../redux/actions/ach';\nimport { showLoader } from '../../redux/actions/user';\nimport { Colors } from '../../theme';\nimport styling from './ConfirmPasswordStyle';\n\nconst ConfirmPasswordScreen = ({ navigation }) => {\n  const route = useRoute();\n  const dispatch = useDispatch();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [passwordVisible1, setPasswordVisible1] = useState(false);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n\n  const validation = () => {\n    let isValid = false\n    if (password.length === 0) {\n      isValid = true\n      setPasswordError('Please enter password.')\n    }\n    if (confirmPassword.length === 0) {\n      isValid = true\n      setConfirmPasswordError('Please enter confirm password.')\n    }\n    if (confirmPassword !== password) {\n      isValid = true\n      setConfirmPasswordError('Password and Confirm password should be match.')\n    }\n    return isValid\n  }\n\n  const onLogin = async () => {\n    if (!validation()) {\n      await dispatch(showLoader(true))\n      // await setToken(APP_TOKEN)\n      let data = {\n        email_or_phone: route?.params?.email,\n        new_password: password\n      }\n      let reset_response = await resetPassword(data)\n      // await dispatch(getAccountInfo())\n      await dispatch(showLoader(false))\n      if (reset_response?.data?.status === 1) {\n        navigation.navigate(navigationStrings.AUTHSTACK)\n      } else {\n        showMessage({\n          message: `${reset_response?.data?.message}`,\n          type: \"danger\",\n        });\n      }\n    }\n  }\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader theme={theme} onPressBack={() => navigation.goBack()} />\n      <ScrollView>\n        <View style={styles.container}>\n          <View style={styles.card}>\n            <TextInput\n              secureTextEntry={!passwordVisible}\n              mode={'outlined'}\n              label={Strings.password}\n              style={styles.textInput}\n              activeOutlineColor={Colors[theme]?.black}\n              onChangeText={(text) => setPassword(text)}\n              right={\n                passwordVisible ? (\n                  <TextInput.Icon\n                    name={'eye-off'}\n                    onPress={() => setPasswordVisible(!passwordVisible)}\n                  />\n                ) : (\n                  <TextInput.Icon\n                    name={'eye'}\n                    onPress={() => setPasswordVisible(!passwordVisible)}\n                  />\n                )\n              }\n            />\n            <TextInput\n              secureTextEntry={!passwordVisible1}\n              mode={'outlined'}\n              label={Strings.confirm.toUpperCase() + \" \" + Strings.password}\n              style={styles.textInput}\n              activeOutlineColor={Colors[theme]?.black}\n              onChangeText={(text) => setConfirmPassword(text)}\n              right={\n                passwordVisible1 ? (\n                  <TextInput.Icon\n                    name={'eye-off'}\n                    onPress={() => setPasswordVisible1(!passwordVisible)}\n                  />\n                ) : (\n                  <TextInput.Icon\n                    name={'eye'}\n                    onPress={() => setPasswordVisible1(!passwordVisible)}\n                  />\n                )\n              }\n            />\n          </View>\n        </View>\n      </ScrollView>\n      <View style={styles.ConfirmParent}>\n        <CustomButton\n          theme={theme}\n          onBtnPress={() =>onLogin()}\n          buttonTitle={Strings.confirm}\n          buttonStyle={styles.confirmBtn}\n          buttonTitleStyle={styles.confirmText}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default ConfirmPasswordScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}