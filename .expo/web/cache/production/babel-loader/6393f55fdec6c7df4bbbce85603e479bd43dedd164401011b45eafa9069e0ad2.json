{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"label\",\"size\",\"style\",\"theme\",\"labelStyle\",\"color\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";var defaultSize=64;var AvatarText=function AvatarText(_ref){var label=_ref.label,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,labelStyle=_ref.labelStyle,customColor=_ref.color,rest=_objectWithoutProperties(_ref,_excluded);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=customColor!==null&&customColor!==void 0?customColor:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');var _useWindowDimensions=useWindowDimensions(),fontScale=_useWindowDimensions.fontScale;return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Text,{style:[styles.text,{color:textColor,fontSize:size/2,lineHeight:size/fontScale},labelStyle],numberOfLines:1},label));};AvatarText.displayName='Avatar.Text';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},text:{textAlign:'center',textAlignVertical:'center'}});export default withTheme(AvatarText);","map":{"version":3,"names":["React","View","StyleSheet","useWindowDimensions","Text","withTheme","white","getContrastingColor","defaultSize","AvatarText","_ref","label","_ref$size","size","style","theme","labelStyle","customColor","color","rest","_objectWithoutProperties","_excluded","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","_useWindowDimensions","fontScale","createElement","_extends","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-paper/lib/module/components/Avatar/AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  useWindowDimensions,\n} from 'react-native';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  theme,\n  labelStyle,\n  color: customColor,\n  ...rest\n}: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  const { fontScale } = useWindowDimensions();\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size / fontScale,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"],"mappings":"+cAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,IAAA,iDAAAC,UAAA,uDAAAC,mBAAA,yDASA,MAAO,CAAAC,IAAP,0BACA,OAASC,SAAT,0BACA,OAASC,KAAT,2BACA,MAAO,CAAAC,mBAAP,uCAEA,GAAM,CAAAC,WAAW,CAAG,EAApB,CAgDA,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAGC,IAAA,CAQN,IAPX,CAAAC,KADkB,CAQPD,IAAA,CAPXC,KADkB,CAAAC,SAAA,CAQPF,IAAA,CANXG,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAGJ,WAFW,CAAAI,SAAA,CAGlBE,KAHkB,CAQPJ,IAAA,CALXI,KAHkB,CAIlBC,KAJkB,CAQPL,IAAA,CAJXK,KAJkB,CAKlBC,UALkB,CAQPN,IAAA,CAHXM,UALkB,CAMXC,WANW,CAQPP,IAAA,CAFXQ,KAAK,CACFC,IAAA,CAAAC,wBAAA,CACQV,IAAA,CAAAW,SAAA,EACX,IAAAC,KAAA,CACEpB,UAAU,CAACqB,OAAX,CAAmBT,KAAnB,GAA6B,EAD/B,CAAAU,qBAAA,CAAAF,KAAA,CAAQG,eAAe,CAAfA,eAAe,CAAAD,qBAAA,UAAGT,KAAK,CAACW,MAAN,CAAaC,OAAjC,CAAAH,qBAAA,CAA6CI,SAAA,CAAAR,wBAAA,CAAAE,KAAA,CAAAO,UAAA,EAEnD,GAAM,CAAAC,SAAS,CACbb,WADa,SACbA,WADa,UACbA,WADa,CAEbV,mBAAmB,CAACkB,eAAD,CAAkBnB,KAAlB,CAAyB,oBAAzB,CAFrB,CAGA,IAAAyB,oBAAA,CAAsB5B,mBAAmB,EAAzC,CAAQ6B,SAAA,CAAAD,oBAAA,CAAAC,SAAA,CAER,MACE,CAAAhC,KAAA,CAAAiC,aAAA,CAAChC,IAAD,CAAAiC,QAAA,EACEpB,KAAK,CAAE,CACL,CACEqB,KAAK,CAAEtB,IADT,CAEEuB,MAAM,CAAEvB,IAFV,CAGEwB,YAAY,CAAExB,IAAI,CAAG,CAHvB,CAIEY,eAAA,CAAAA,eAJF,CADK,CAOLa,MAAM,CAACC,SAPF,CAQLX,SARK,CADT,EAWMT,IAXN,EAaEnB,KAAA,CAAAiC,aAAA,CAAC7B,IAAD,EACEU,KAAK,CAAE,CACLwB,MAAM,CAACE,IADF,CAEL,CACEtB,KAAK,CAAEY,SADT,CAEEW,QAAQ,CAAE5B,IAAI,CAAG,CAFnB,CAGE6B,UAAU,CAAE7B,IAAI,CAAGmB,SAHrB,CAFK,CAOLhB,UAPK,CADT,CAUE2B,aAAa,CAAE,CAVjB,EAYGhC,KAZH,CAbF,CADF,CA8BD,CA9CD,CAgDAF,UAAU,CAACmC,WAAX,CAAyB,aAAzB,CAEA,GAAM,CAAAN,MAAM,CAAGpC,UAAU,CAAC2C,MAAX,CAAkB,CAC/BN,SAAS,CAAE,CACTO,cAAc,CAAE,QADP,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BP,IAAI,CAAE,CACJQ,SAAS,CAAE,QADP,CAEJC,iBAAiB,CAAE,QAFf,CALyB,CAAlB,CAAf,CAWA,cAAe,CAAA5C,SAAS,CAACI,UAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}