{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.hoist=hoist;var _TBlockCtor=_interopRequireDefault(require(\"../tree/TBlockCtor\"));var _TPhrasingCtor=require(\"../tree/TPhrasingCtor\");var _TTextCtor=require(\"../tree/TTextCtor\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function groupText(tnode){var newChildren=[];var wrapperInit={elementModel:null,context:tnode.init.context,parentStyles:tnode.styles,parent:null};var wrapper=new _TPhrasingCtor.TPhrasingCtor(wrapperInit);var wrapperChildren=[];for(var child of tnode.children){if(child instanceof _TTextCtor.TTextCtor||child instanceof _TPhrasingCtor.TPhrasingCtor){wrapperChildren.push(child);}else{if(wrapperChildren.length){newChildren.push(wrapper);wrapper.bindChildren(wrapperChildren);wrapper=new _TPhrasingCtor.TPhrasingCtor(wrapperInit);wrapperChildren=[];}newChildren.push(child);}}if(wrapperChildren.length){wrapper.bindChildren(wrapperChildren);newChildren.push(wrapper);}tnode.bindChildren(newChildren);return tnode;}function hoistNode(tnode){if(tnode instanceof _TTextCtor.TTextCtor){return tnode;}tnode.bindChildren(tnode.children.map(hoistNode));if(tnode instanceof _TPhrasingCtor.TPhrasingCtor){for(var cnode of tnode.children){if(cnode instanceof _TBlockCtor.default){var newNode=new _TBlockCtor.default(tnode.cloneInitParams());newNode.bindChildren(tnode.children);var output=groupText(newNode);return output;}}}else if(tnode instanceof _TBlockCtor.default){if(tnode.children.length>0){var _output=groupText(tnode);return _output;}}return tnode;}function hoist(tree){return hoistNode(tree);}","map":{"version":3,"names":["_TBlockCtor","_interopRequireDefault","require","_TPhrasingCtor","_TTextCtor","groupText","tnode","newChildren","wrapperInit","elementModel","context","init","parentStyles","styles","parent","wrapper","TPhrasingCtor","wrapperChildren","child","children","TTextCtor","push","length","bindChildren","hoistNode","map","cnode","default","newNode","cloneInitParams","output","hoist","tree"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-render-html/node_modules/@native-html/transient-render-engine/lib/commonjs/flow/hoist.ts"],"sourcesContent":["import TBlockCtor, { TBlockImpl } from '../tree/TBlockCtor';\nimport { TNodeImpl } from '../tree/tree-types';\nimport { TPhrasingCtor } from '../tree/TPhrasingCtor';\nimport { TTextCtor } from '../tree/TTextCtor';\n\n/**\n * Wrap text nodes around TPhrasing nodes.\n * @param tnode The parent node of all elements to group.\n */\nfunction groupText(tnode: TBlockImpl): TNodeImpl {\n  let newChildren: TNodeImpl[] = [];\n  const wrapperInit = {\n    elementModel: null,\n    context: tnode.init.context,\n    // We need to merge styles here to make sure\n    // some React Native styles working only for the uppermost Text element\n    // such as \"textAlign\" are preserved.\n    parentStyles: tnode.styles,\n    parent: null\n  };\n  let wrapper = new TPhrasingCtor(wrapperInit);\n  let wrapperChildren: TNodeImpl[] = [];\n  for (const child of tnode.children) {\n    if (child instanceof TTextCtor || child instanceof TPhrasingCtor) {\n      wrapperChildren.push(child);\n    } else {\n      if (wrapperChildren.length) {\n        newChildren.push(wrapper);\n        wrapper.bindChildren(wrapperChildren);\n        wrapper = new TPhrasingCtor(wrapperInit);\n        wrapperChildren = [];\n      }\n      newChildren.push(child);\n    }\n  }\n  if (wrapperChildren.length) {\n    wrapper.bindChildren(wrapperChildren);\n    newChildren.push(wrapper);\n  }\n  tnode.bindChildren(newChildren);\n  return tnode;\n}\n\nfunction hoistNode(tnode: TNodeImpl): TNodeImpl {\n  if (tnode instanceof TTextCtor) {\n    return tnode;\n  }\n  tnode.bindChildren(tnode.children.map(hoistNode));\n  if (tnode instanceof TPhrasingCtor) {\n    for (const cnode of tnode.children) {\n      if (cnode instanceof TBlockCtor) {\n        const newNode = new TBlockCtor(tnode.cloneInitParams());\n        newNode.bindChildren(tnode.children);\n        const output = groupText(newNode);\n        return output;\n      }\n    }\n  } else if (tnode instanceof TBlockCtor) {\n    if (tnode.children.length > 0) {\n      const output = groupText(tnode);\n      return output;\n    }\n  }\n  return tnode;\n}\n\nexport function hoist(tree: TNodeImpl): TNodeImpl {\n  return hoistNode(tree);\n}\n"],"mappings":"0FAAA,IAAAA,WAAA,CAAAC,sBAAA,CAAAC,OAAA,wBAEA,IAAAC,cAAA,CAAAD,OAAA,0BACA,IAAAE,UAAA,CAAAF,OAAA,sB,mFAMA,QAAS,CAAAG,SAATA,CAAmBC,KAAnB,CAAiD,CAC/C,GAAI,CAAAC,WAAwB,CAAG,EAA/B,CACA,GAAM,CAAAC,WAAW,CAAG,CAClBC,YAAY,CAAE,IADI,CAElBC,OAAO,CAAEJ,KAAK,CAACK,IAAN,CAAWD,OAFF,CAMlBE,YAAY,CAAEN,KAAK,CAACO,MANF,CAOlBC,MAAM,CAAE,IAPU,CAApB,CASA,GAAI,CAAAC,OAAO,CAAG,GAAI,CAAAZ,cAAA,CAAAa,aAAJ,CAAkBR,WAAlB,CAAd,CACA,GAAI,CAAAS,eAA4B,CAAG,EAAnC,CACA,IAAK,GAAM,CAAAC,KAAX,GAAoB,CAAAZ,KAAK,CAACa,QAA1B,CAAoC,CAClC,GAAID,KAAK,WAAY,CAAAd,UAAA,CAAAgB,SAAjB,EAA8BF,KAAK,WAAY,CAAAf,cAAA,CAAAa,aAAnD,CAAkE,CAChEC,eAAe,CAACI,IAAhB,CAAqBH,KAArB,EACD,CAFD,IAEO,CACL,GAAID,eAAe,CAACK,MAApB,CAA4B,CAC1Bf,WAAW,CAACc,IAAZ,CAAiBN,OAAjB,EACAA,OAAO,CAACQ,YAAR,CAAqBN,eAArB,EACAF,OAAO,CAAG,GAAI,CAAAZ,cAAA,CAAAa,aAAJ,CAAkBR,WAAlB,CAAV,CACAS,eAAe,CAAG,EAAlB,CACD,CACDV,WAAW,CAACc,IAAZ,CAAiBH,KAAjB,EACD,CACF,CACD,GAAID,eAAe,CAACK,MAApB,CAA4B,CAC1BP,OAAO,CAACQ,YAAR,CAAqBN,eAArB,EACAV,WAAW,CAACc,IAAZ,CAAiBN,OAAjB,EACD,CACDT,KAAK,CAACiB,YAAN,CAAmBhB,WAAnB,EACA,MAAO,CAAAD,KAAP,CACD,CAED,QAAS,CAAAkB,SAATA,CAAmBlB,KAAnB,CAAgD,CAC9C,GAAIA,KAAK,WAAY,CAAAF,UAAA,CAAAgB,SAArB,CAAgC,CAC9B,MAAO,CAAAd,KAAP,CACD,CACDA,KAAK,CAACiB,YAAN,CAAmBjB,KAAK,CAACa,QAAN,CAAeM,GAAf,CAAmBD,SAAnB,CAAnB,EACA,GAAIlB,KAAK,WAAY,CAAAH,cAAA,CAAAa,aAArB,CAAoC,CAClC,IAAK,GAAM,CAAAU,KAAX,GAAoB,CAAApB,KAAK,CAACa,QAA1B,CAAoC,CAClC,GAAIO,KAAK,WAAY,CAAA1B,WAAA,CAAA2B,OAArB,CAAiC,CAC/B,GAAM,CAAAC,OAAO,CAAG,GAAI,CAAA5B,WAAA,CAAA2B,OAAJ,CAAerB,KAAK,CAACuB,eAAN,EAAf,CAAhB,CACAD,OAAO,CAACL,YAAR,CAAqBjB,KAAK,CAACa,QAA3B,EACA,GAAM,CAAAW,MAAM,CAAGzB,SAAS,CAACuB,OAAD,CAAxB,CACA,MAAO,CAAAE,MAAP,CACD,CACF,CACF,CATD,IASO,IAAIxB,KAAK,WAAY,CAAAN,WAAA,CAAA2B,OAArB,CAAiC,CACtC,GAAIrB,KAAK,CAACa,QAAN,CAAeG,MAAf,CAAwB,CAA5B,CAA+B,CAC7B,GAAM,CAAAQ,OAAM,CAAGzB,SAAS,CAACC,KAAD,CAAxB,CACA,MAAO,CAAAwB,OAAP,CACD,CACF,CACD,MAAO,CAAAxB,KAAP,CACD,CAEM,QAAS,CAAAyB,KAATA,CAAeC,IAAf,CAA2C,CAChD,MAAO,CAAAR,SAAS,CAACQ,IAAD,CAAhB,CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}