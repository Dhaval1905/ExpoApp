{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useRoute } from '@react-navigation/native';\nimport React from 'react';\nimport AntIcon from \"@expo/vector-icons/AntDesign\";\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport { navigationStrings } from \"../constants\";\nimport { Account } from \"../modules/Account\";\nimport { Dashboard } from \"../modules/Dashboard\";\nimport { MoveMoney } from \"../modules/MoveMoney\";\nimport { Settings } from \"../modules/Settings\";\nimport { Colors } from \"../theme\";\nimport ActivityTopTabs from \"./ActivityTopTabs\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Fonts, Icons } from \"../assets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar BottomTabsNav = function BottomTabsNav() {\n  var _route$params;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: navigationStrings.DASHBOARD,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          var iconName;\n          if (route.name === navigationStrings.DASHBOARD) {\n            iconName = 'dashboard';\n            return _jsx(Image, {\n              source: Icons.home,\n              style: {\n                height: 26,\n                width: 26,\n                tintColor: color\n              },\n              resizeMode: \"contain\"\n            });\n          } else if (route.name === navigationStrings.ACTIVITY) {\n            iconName = 'barschart';\n            return _jsx(Image, {\n              source: Icons.activity,\n              style: {\n                height: 26,\n                width: 26,\n                tintColor: color\n              },\n              resizeMode: \"contain\"\n            });\n          } else if (route.name === navigationStrings.MOVEMONEY) {\n            iconName = 'money';\n            return _jsx(Image, {\n              source: Icons.dollor_bottombar,\n              style: {\n                height: 26,\n                width: 26,\n                tintColor: color\n              },\n              resizeMode: \"contain\"\n            });\n          } else if (route.name === navigationStrings.ACCOUNT) {\n            iconName = 'bank';\n            return _jsx(Image, {\n              source: Icons.user_bottombar,\n              style: {\n                height: 26,\n                width: 26,\n                tintColor: color\n              },\n              resizeMode: \"contain\"\n            });\n          } else if (route.name === navigationStrings.SETTINGS) {\n            iconName = 'setting';\n            return _jsx(AntIcon, {\n              name: iconName,\n              size: 30,\n              color: color\n            });\n          }\n        },\n        tabBarActiveTintColor: Colors[theme].blue,\n        tabBarInactiveTintColor: Colors[theme].black,\n        tabBarStyle: {\n          backgroundColor: Colors[theme].white,\n          height: 55\n        },\n        tabBarLabelStyle: {\n          fontFamily: Fonts.medium,\n          color: Colors[theme].black\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: navigationStrings.DASHBOARD,\n      component: Dashboard,\n      initialParams: {\n        theme: theme\n      }\n    }), _jsx(Tab.Screen, {\n      name: navigationStrings.ACTIVITY,\n      component: ActivityTopTabs,\n      initialParams: {\n        theme: theme\n      }\n    }), _jsx(Tab.Screen, {\n      name: navigationStrings.MOVEMONEY,\n      component: MoveMoney,\n      initialParams: {\n        theme: theme,\n        isMoveMoney: true\n      }\n    }), _jsx(Tab.Screen, {\n      name: navigationStrings.ACCOUNT,\n      component: Account,\n      initialParams: {\n        theme: theme\n      }\n    })]\n  });\n};\nexport default BottomTabsNav;","map":{"version":3,"names":["createBottomTabNavigator","useRoute","React","AntIcon","FontAwesomeIcon","navigationStrings","Account","Dashboard","MoveMoney","Settings","Colors","ActivityTopTabs","Image","Fonts","Icons","jsx","_jsx","jsxs","_jsxs","Tab","BottomTabsNav","_route$params","route","theme","params","Navigator","initialRouteName","DASHBOARD","screenOptions","_ref","headerShown","tabBarIcon","_ref2","color","iconName","name","source","home","style","height","width","tintColor","resizeMode","ACTIVITY","activity","MOVEMONEY","dollor_bottombar","ACCOUNT","user_bottombar","SETTINGS","size","tabBarActiveTintColor","blue","tabBarInactiveTintColor","black","tabBarStyle","backgroundColor","white","tabBarLabelStyle","fontFamily","medium","children","Screen","component","initialParams","isMoveMoney"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/routes/BottomTabsNav.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useRoute } from '@react-navigation/native';\nimport React from 'react';\nimport AntIcon from 'react-native-vector-icons/AntDesign';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport { navigationStrings } from '../constants';\n// import {Account, Dashboard, MoveMoney, Settings} from '../modules';\nimport { Account } from \"../modules/Account\"\nimport { Dashboard } from \"../modules/Dashboard\"\nimport { MoveMoney } from \"../modules/MoveMoney\"\nimport { Settings } from \"../modules/Settings\"\nimport { Colors } from '../theme';\nimport ActivityTopTabs from './ActivityTopTabs';\nimport { Image } from 'react-native';\nimport { Fonts, Icons } from '../assets';\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabsNav = () => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n\n  return (\n    <Tab.Navigator\n      initialRouteName={navigationStrings.DASHBOARD}\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarIcon: ({ color }) => {\n          let iconName;\n          if (route.name === navigationStrings.DASHBOARD) {\n            iconName = 'dashboard';\n            return <Image source={Icons.home} style={{ height: 26, width: 26, tintColor: color }} resizeMode='contain' />;\n          } else if (route.name === navigationStrings.ACTIVITY) {\n            iconName = 'barschart';\n            return <Image source={Icons.activity} style={{ height: 26, width: 26, tintColor: color }} resizeMode='contain' />;\n          } else if (route.name === navigationStrings.MOVEMONEY) {\n            iconName = 'money';\n            return <Image source={Icons.dollor_bottombar} style={{ height: 26, width: 26, tintColor: color }} resizeMode='contain' />;\n          } else if (route.name === navigationStrings.ACCOUNT) {\n            iconName = 'bank';\n            return <Image source={Icons.user_bottombar} style={{ height: 26, width: 26, tintColor: color }} resizeMode='contain' />;\n          } else if (route.name === navigationStrings.SETTINGS) {\n            iconName = 'setting';\n            return <AntIcon name={iconName} size={30} color={color} />;\n          }\n        },\n        tabBarActiveTintColor: Colors[theme].blue,\n        tabBarInactiveTintColor: Colors[theme].black,\n        tabBarStyle: {\n          backgroundColor: Colors[theme].white,\n          height: 55\n        },\n        tabBarLabelStyle: {\n          fontFamily: Fonts.medium,\n          color: Colors[theme].black\n        },\n      })}>\n      <Tab.Screen\n        name={navigationStrings.DASHBOARD}\n        component={Dashboard}\n        initialParams={{ theme: theme }}\n      />\n      <Tab.Screen\n        name={navigationStrings.ACTIVITY}\n        component={ActivityTopTabs}\n        initialParams={{ theme: theme }}\n      />\n      <Tab.Screen\n        name={navigationStrings.MOVEMONEY}\n        component={MoveMoney}\n        initialParams={{ theme: theme, isMoveMoney: true }}\n      />\n      <Tab.Screen\n        name={navigationStrings.ACCOUNT}\n        component={Account}\n        initialParams={{ theme: theme }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomTabsNav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}