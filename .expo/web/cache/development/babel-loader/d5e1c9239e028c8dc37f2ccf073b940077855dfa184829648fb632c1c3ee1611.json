{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _isAvailableAsync, _shareAsync;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { UnavailabilityError } from 'expo-modules-core';\nexport default {\n  get name() {\n    return 'ExpoSharing';\n  },\n  isAvailableAsync: function isAvailableAsync() {\n    return (_isAvailableAsync = _isAvailableAsync || _asyncToGenerator(function* () {\n      if (typeof navigator === 'undefined') {\n        return false;\n      }\n      return !!navigator.share;\n    })).apply(this, arguments);\n  },\n  shareAsync: function shareAsync(_x) {\n    return (_shareAsync = _shareAsync || _asyncToGenerator(function* (url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (navigator.share) {\n        yield navigator.share(_objectSpread(_objectSpread({}, options), {}, {\n          url: url\n        }));\n      } else {\n        throw new UnavailabilityError('navigator', 'share');\n      }\n    })).apply(this, arguments);\n  }\n};","map":{"version":3,"names":["UnavailabilityError","name","isAvailableAsync","_isAvailableAsync","_asyncToGenerator","navigator","share","apply","arguments","shareAsync","_x","_shareAsync","url","options","length","undefined","_objectSpread"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/expo-sharing/src/ExpoSharing.web.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\ntype ShareOptions = { title?: string; text?: string; url?: string };\n\nexport default {\n  get name(): string {\n    return 'ExpoSharing';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof navigator === 'undefined') {\n      return false;\n    }\n\n    return !!navigator.share;\n  },\n  async shareAsync(url: string, options: ShareOptions = {}): Promise<void> {\n    // NOTE: `navigator.share` is only available via HTTPS\n    if (navigator.share) {\n      await navigator.share({ ...options, url });\n    } else {\n      throw new UnavailabilityError('navigator', 'share');\n    }\n  },\n};\n"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAIvD,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,aAAa;EACtB,CAAC;EACKC,gBAAgB,WAAAA,iBAAA;IAAA,QAAAC,iBAAA,GAAAA,iBAAA,IAAAC,iBAAA;MACpB,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;QACpC,OAAO,KAAK;;MAGd,OAAO,CAAC,CAACA,SAAS,CAACC,KAAK;IAC1B,CAAC,GAAAC,KAAA,OAAAC,SAAA;EAAA;EACKC,UAAU,WAAAA,WAAAC,EAAA;IAAA,QAAAC,WAAA,GAAAA,WAAA,IAAAP,iBAAA,YAACQ,GAAW,EAA4B;MAAA,IAA1BC,OAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAwB,EAAE;MAEtD,IAAIH,SAAS,CAACC,KAAK,EAAE;QACnB,MAAMD,SAAS,CAACC,KAAK,CAAAU,aAAA,CAAAA,aAAA,KAAMH,OAAO;UAAED,GAAG,EAAHA;QAAG,EAAE,CAAC;OAC3C,MAAM;QACL,MAAM,IAAIZ,mBAAmB,CAAC,WAAW,EAAE,OAAO,CAAC;;IAEvD,CAAC,GAAAO,KAAA,OAAAC,SAAA;EAAA;CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}