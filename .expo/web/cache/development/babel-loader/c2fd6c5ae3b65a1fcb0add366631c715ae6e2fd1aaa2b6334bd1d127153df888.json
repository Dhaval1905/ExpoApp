{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRoute } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { CustomHeader } from \"../../components\";\nimport { navigationStrings, Strings } from \"../../constants\";\nimport { Colors, moderateScale } from \"../../theme\";\nimport styling from \"./IssueCardStyle\";\nimport { getProductCard, issue_Card } from \"../../redux/actions/card\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showLoader } from \"../../redux/actions/user\";\nimport { showMessage } from 'react-native-flash-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RethinkCardScreen = function RethinkCardScreen(_ref) {\n  var _route$params, _ref2, _Colors$theme, _Colors$theme2;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var userDetails = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.login;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    virtualCard = _useState2[0],\n    setVirtualCard = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    physicalCard = _useState4[0],\n    setPhysicalCard = _useState4[1];\n  var issueCard = function issueCard(_x) {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* (type) {\n      var _userDetails$data, _userDetails$data$per, _userDetails$data$per2, _userDetails$data2, _userDetails$data2$ac, _userDetails$data2$ac2, _res$response, _res$response$data;\n      yield dispatch(showLoader(true));\n      var data = {\n        customer_id: userDetails == null ? void 0 : (_userDetails$data = userDetails.data) == null ? void 0 : (_userDetails$data$per = _userDetails$data.personDetail) == null ? void 0 : (_userDetails$data$per2 = _userDetails$data$per[0]) == null ? void 0 : _userDetails$data$per2.id,\n        account_id: userDetails == null ? void 0 : (_userDetails$data2 = userDetails.data) == null ? void 0 : (_userDetails$data2$ac = _userDetails$data2.accountDetail) == null ? void 0 : (_userDetails$data2$ac2 = _userDetails$data2$ac[0]) == null ? void 0 : _userDetails$data2$ac2.id,\n        form: type\n      };\n      var res = yield issue_Card(data);\n      yield dispatch(showLoader(false));\n      if ((res == null ? void 0 : (_res$response = res.response) == null ? void 0 : (_res$response$data = _res$response.data) == null ? void 0 : _res$response$data.status) === 0) {\n        var _res$response2, _res$response2$data;\n        showMessage({\n          message: res == null ? void 0 : (_res$response2 = res.response) == null ? void 0 : (_res$response2$data = _res$response2.data) == null ? void 0 : _res$response2$data.message,\n          type: \"danger\"\n        });\n      } else {\n        showMessage({\n          message: \"Card issued successfully!\",\n          type: \"success\"\n        });\n        navigation.navigate(navigationStrings.RETHINKCARD);\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: \"Issue New Card\",\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.card,\n        onPress: function onPress() {\n          return issueCard(\"VIRTUAL\");\n        },\n        children: _jsxs(View, {\n          style: styles.innerView,\n          children: [_jsx(FontAwesome, {\n            name: 'credit-card',\n            color: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.black,\n            size: moderateScale(24)\n          }), _jsx(Text, {\n            style: styles.cardTitle,\n            children: Strings.virtualCard\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.card,\n        onPress: function onPress() {\n          return issueCard(\"PHYSICAL\");\n        },\n        children: _jsxs(View, {\n          style: styles.innerView,\n          children: [_jsx(FontAwesome, {\n            name: 'credit-card',\n            color: (_Colors$theme2 = Colors[theme]) == null ? void 0 : _Colors$theme2.black,\n            size: moderateScale(24)\n          }), _jsx(Text, {\n            style: styles.cardTitle,\n            children: Strings.physicalCard\n          })]\n        })\n      })]\n    })]\n  });\n};\nexport default RethinkCardScreen;","map":{"version":3,"names":["useRoute","React","useEffect","useState","Text","TouchableOpacity","View","FontAwesome","CustomHeader","navigationStrings","Strings","Colors","moderateScale","styling","getProductCard","issue_Card","useDispatch","useSelector","showLoader","showMessage","jsx","_jsx","jsxs","_jsxs","RethinkCardScreen","_ref","_route$params","_ref2","_Colors$theme","_Colors$theme2","navigation","route","dispatch","theme","params","styles","userDetails","state","_state$user","user","login","_useState","_useState2","_slicedToArray","virtualCard","setVirtualCard","_useState3","_useState4","physicalCard","setPhysicalCard","issueCard","_x","_asyncToGenerator","type","_userDetails$data","_userDetails$data$per","_userDetails$data$per2","_userDetails$data2","_userDetails$data2$ac","_userDetails$data2$ac2","_res$response","_res$response$data","data","customer_id","personDetail","id","account_id","accountDetail","form","res","response","status","_res$response2","_res$response2$data","message","navigate","RETHINKCARD","apply","arguments","style","screen","children","headerTitle","onPressBack","goBack","container","card","onPress","innerView","name","color","black","size","cardTitle"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/IssueCard/IssueCard.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport {Text, TouchableOpacity, View} from 'react-native';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport {CustomHeader} from '../../components';\nimport {navigationStrings, Strings} from '../../constants';\nimport {Colors, moderateScale} from '../../theme';\nimport styling from './IssueCardStyle';\nimport { getProductCard, issue_Card } from '../../redux/actions/card';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showLoader } from '../../redux/actions/user';\nimport { showMessage } from 'react-native-flash-message';\n\nconst RethinkCardScreen = ({navigation}) => {\n  const route = useRoute();\n  const dispatch = useDispatch();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n  const userDetails = useSelector(state => state?.user?.login)\n  const [virtualCard,setVirtualCard] =useState([])\n  const [physicalCard,setPhysicalCard] =useState([])\n\n  const issueCard=async(type)=>{\n    await dispatch(showLoader(true))\n                 let data={\n                  customer_id: userDetails?.data?.personDetail?.[0]?.id,\n    account_id: userDetails?.data?.accountDetail?.[0]?.id,\n    form :type\n                }\n                let res=await issue_Card(data)\n    await dispatch(showLoader(false))\nif(res?.response?.data?.status===0){\n  showMessage({\n    message: res?.response?.data?.message,\n    type: \"danger\",\n});\n}else{\n  showMessage({\n    message: \"Card issued successfully!\",\n    type: \"success\",\n});\nnavigation.navigate(navigationStrings.RETHINKCARD)\n}\n  }\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={\"Issue New Card\"}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={styles.card}\n          onPress={() => issueCard(\"VIRTUAL\")}>\n          <View style={styles.innerView}>\n            <FontAwesome\n              name={'credit-card'}\n              color={Colors[theme]?.black}\n              size={moderateScale(24)}\n            />\n            <Text style={styles.cardTitle}>{Strings.virtualCard}</Text>\n          </View>\n          {/* <FontAwesome \n            name={'angle-right'}\n            color={Colors[theme]?.grey500}\n            size={moderateScale(24)}\n          /> */}\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.card}\n          onPress={() =>\n            issueCard(\"PHYSICAL\")\n          }>\n          <View style={styles.innerView}>\n            <FontAwesome\n              name={'credit-card'}\n              color={Colors[theme]?.black}\n              size={moderateScale(24)}\n            />\n            <Text style={styles.cardTitle}>{Strings.physicalCard}</Text>\n          </View>\n          {/* <FontAwesome\n            name={'angle-right'}\n            color={Colors[theme]?.grey500}\n            size={moderateScale(24)}\n          /> */}\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default RethinkCardScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}