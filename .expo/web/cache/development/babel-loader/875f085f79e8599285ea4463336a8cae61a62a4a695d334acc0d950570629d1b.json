{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRoute } from '@react-navigation/native';\nimport { useSelector } from 'react-redux';\nimport OTPTextView from 'react-native-otp-textinput';\nimport { Icons } from \"../../assets\";\nimport { CustomButton, CustomHeader, MoveMoneyCard } from \"../../components\";\nimport { navigationStrings } from \"../../constants\";\nimport { Strings } from \"../../constants/Strings\";\nimport { Colors } from \"../../theme\";\nimport styling from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OTPVerify = function OTPVerify(_ref) {\n  var _route$params, _userDetails$data, _userDetails$data$per, _userDetails$data$per2;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var otpInput = useRef(null);\n  var userDetails = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.login;\n  });\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    otp = _useState2[0],\n    setOtp = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    otpError = _useState4[0],\n    setOtpError = _useState4[1];\n  var onLogin = function onLogin() {\n    var _route$params2;\n    if (otpInput.current.length === 0) {\n      setOtpError('Please enter otp.');\n    } else if (otpInput.current !== (route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.verification_code)) {\n      setOtpError('Please enter correct otp.');\n    } else {\n      var _route$params3;\n      navigation.navigate(navigationStrings.CONFIRMPASSWORD, {\n        email: route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.email\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: \"Verification Code\",\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsxs(Text, {\n        style: styles.errorText1,\n        children: [\"Enter verification code sent to \", (userDetails == null ? void 0 : (_userDetails$data = userDetails.data) == null ? void 0 : (_userDetails$data$per = _userDetails$data.personDetail) == null ? void 0 : (_userDetails$data$per2 = _userDetails$data$per[0]) == null ? void 0 : _userDetails$data$per2.email) || '']\n      }), _jsx(OTPTextView, {\n        ref: function ref(e) {\n          return otpInput = e;\n        },\n        autoFocus: true,\n        inputCount: 6,\n        inputCellLength: 1,\n        textInputStyle: {\n          backgroundColor: 'white',\n          width: 55,\n          height: 70,\n          borderRadius: 8,\n          elevation: 2,\n          margin: 1,\n          fontSize: 20,\n          alignItems: 'center',\n          marginTop: 30,\n          color: '#000'\n        }\n      }), (otpError == null ? void 0 : otpError.length) > 0 && _jsx(Text, {\n        style: styles.errorText,\n        children: otpError\n      })]\n    }), _jsx(View, {\n      style: styles.ConfirmParent,\n      children: _jsx(CustomButton, {\n        theme: theme,\n        onBtnPress: function onBtnPress() {\n          return onLogin();\n        },\n        buttonTitle: Strings.confirm,\n        buttonStyle: styles.confirmBtn,\n        buttonTitleStyle: styles.confirmText\n      })\n    })]\n  });\n};\nexport default OTPVerify;","map":{"version":3,"names":["React","useRef","useState","ScrollView","Text","View","useRoute","useSelector","OTPTextView","Icons","CustomButton","CustomHeader","MoveMoneyCard","navigationStrings","Strings","Colors","styling","jsx","_jsx","jsxs","_jsxs","OTPVerify","_ref","_route$params","_userDetails$data","_userDetails$data$per","_userDetails$data$per2","navigation","route","theme","params","styles","otpInput","userDetails","state","_state$user","user","login","_useState","_useState2","_slicedToArray","otp","setOtp","_useState3","_useState4","otpError","setOtpError","onLogin","_route$params2","current","length","verification_code","_route$params3","navigate","CONFIRMPASSWORD","email","style","screen","children","headerTitle","onPressBack","goBack","scrollView","errorText1","data","personDetail","ref","e","autoFocus","inputCount","inputCellLength","textInputStyle","backgroundColor","width","height","borderRadius","elevation","margin","fontSize","alignItems","marginTop","color","errorText","ConfirmParent","onBtnPress","buttonTitle","confirm","buttonStyle","confirmBtn","buttonTitleStyle","confirmText"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/OTPVerify/index.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { ScrollView, Text, View } from 'react-native';\nimport { useRoute } from '@react-navigation/native';\nimport { useSelector } from 'react-redux';\n// import OtpInputs from 'react-native-otp-inputs';\nimport OTPTextView from 'react-native-otp-textinput';\nimport { Icons } from '../../assets';\nimport { CustomButton, CustomHeader, MoveMoneyCard } from '../../components';\nimport { navigationStrings } from '../../constants';\nimport { Strings } from '../../constants/Strings';\nimport { Colors } from '../../theme';\nimport styling from './styles';\n\nconst OTPVerify = ({ navigation }) => {\n    const route = useRoute();\n    const theme = route?.params?.theme;\n    const styles = styling(theme);\n    let otpInput = useRef(null);\n    const userDetails = useSelector(state => state?.user?.login)\n    const [otp, setOtp] = useState('')\n    const [otpError, setOtpError] = useState('')\n    const onLogin = () => {\n        if (otpInput.current.length === 0) {\n            setOtpError('Please enter otp.')\n        } else if (otpInput.current !== route?.params?.verification_code) {\n            setOtpError('Please enter correct otp.')\n        } else {\n            navigation.navigate(navigationStrings.CONFIRMPASSWORD, { email: route?.params?.email })\n        }\n    }\n    return (\n        <View style={styles.screen}>\n            <CustomHeader\n                theme={theme}\n                headerTitle={\"Verification Code\"}\n                onPressBack={() => navigation.goBack()}\n            />\n            <ScrollView style={styles.scrollView}>\n                <Text style={styles.errorText1}>\n                    Enter verification code sent to {userDetails?.data?.personDetail?.[0]?.email || ''}\n                </Text>\n                {/* <OtpInputs\n                    handleChange={(code) => {\n                        setOtp(code)\n                        setOtpError('')\n                    }}\n                    numberOfInputs={6}\n                    autoFocus\n                    inputStyles={{ backgroundColor: 'white', width: 55, height: 70, borderRadius: 8, elevation: 2, margin: 1, fontSize: 20, alignItems: 'center', marginTop: 30 }}\n                    textAlign='center'\n                /> */}\n                <OTPTextView ref={e => (otpInput = e)} autoFocus={true} inputCount={6} inputCellLength={1} textInputStyle={{ backgroundColor: 'white', width: 55, height: 70, borderRadius: 8, elevation: 2, margin: 1, fontSize: 20, alignItems: 'center', marginTop: 30, color: '#000' }} />\n\n                {otpError?.length > 0 && (\n                    <Text style={styles.errorText}>\n                        {otpError}\n                    </Text>\n                )}\n            </ScrollView>\n            <View style={styles.ConfirmParent}>\n                <CustomButton\n                    theme={theme}\n                    onBtnPress={() => onLogin()}\n                    buttonTitle={Strings.confirm}\n                    buttonStyle={styles.confirmBtn}\n                    buttonTitleStyle={styles.confirmText}\n                />\n            </View>\n        </View>\n    );\n};\n\nexport default OTPVerify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}