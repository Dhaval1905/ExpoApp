{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { fillOtpCode } from \"./helpers\";\nvar ACTION_TYPES = {\n  setHandleChange: 'setHandleChange',\n  setOtpTextForIndex: 'setOtpTextForIndex',\n  setOtpCode: 'setOtpCode',\n  clearOtp: 'clearOtp',\n  setHasKeySupport: 'setHasKeySupport'\n};\nexport default (function (state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  switch (type) {\n    case ACTION_TYPES.setOtpTextForIndex:\n      {\n        var otpCode = _objectSpread(_objectSpread({}, state.otpCode), {}, _defineProperty({}, `${payload.index}`, payload.text));\n        state.handleChange(Object.values(otpCode).join(''));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          otpCode: otpCode\n        });\n      }\n    case ACTION_TYPES.setOtpCode:\n      {\n        var _otpCode = fillOtpCode(payload.numberOfInputs, payload.code);\n        state.handleChange(Object.values(_otpCode).join(''));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          otpCode: _otpCode\n        });\n      }\n    case ACTION_TYPES.clearOtp:\n      {\n        var _otpCode2 = fillOtpCode(payload);\n        state.handleChange(Object.values(_otpCode2).join(''));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          otpCode: _otpCode2\n        });\n      }\n    case ACTION_TYPES.setHandleChange:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          handleChange: payload\n        });\n      }\n    case ACTION_TYPES.setHasKeySupport:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hasKeySupport: payload\n        });\n      }\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["fillOtpCode","ACTION_TYPES","setHandleChange","setOtpTextForIndex","setOtpCode","clearOtp","setHasKeySupport","state","_ref","type","payload","otpCode","_objectSpread","_defineProperty","index","text","handleChange","Object","values","join","numberOfInputs","code","hasKeySupport"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-otp-inputs/lib/module/reducer.ts"],"sourcesContent":["import { fillOtpCode } from './helpers';\nimport { Actions, ActionTypes, ReducerState } from './types';\n\nconst ACTION_TYPES: ActionTypes = {\n  setHandleChange: 'setHandleChange',\n  setOtpTextForIndex: 'setOtpTextForIndex',\n  setOtpCode: 'setOtpCode',\n  clearOtp: 'clearOtp',\n  setHasKeySupport: 'setHasKeySupport',\n};\n\nexport default (state: ReducerState, { type, payload }: Actions) => {\n  switch (type) {\n    case ACTION_TYPES.setOtpTextForIndex: {\n      const otpCode = {\n        ...state.otpCode,\n        [`${payload.index}`]: payload.text,\n      };\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return {\n        ...state,\n        otpCode,\n      };\n    }\n\n    case ACTION_TYPES.setOtpCode: {\n      const otpCode = fillOtpCode(payload.numberOfInputs, payload.code);\n\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return {\n        ...state,\n        otpCode,\n      };\n    }\n\n    case ACTION_TYPES.clearOtp: {\n      const otpCode = fillOtpCode(payload);\n      state.handleChange(Object.values(otpCode).join(''));\n\n      return { ...state, otpCode };\n    }\n\n    case ACTION_TYPES.setHandleChange: {\n      return { ...state, handleChange: payload };\n    }\n\n    case ACTION_TYPES.setHasKeySupport: {\n      return { ...state, hasKeySupport: payload };\n    }\n\n    default:\n      return state;\n  }\n};\n"],"mappings":";;;AAAA,SAASA,WAAT;AAGA,IAAMC,YAAyB,GAAG;EAChCC,eAAe,EAAE,iBADe;EAEhCC,kBAAkB,EAAE,oBAFY;EAGhCC,UAAU,EAAE,YAHoB;EAIhCC,QAAQ,EAAE,UAJsB;EAKhCC,gBAAgB,EAAE;AALc,CAAlC;AAQA,gBAAe,UAACC,KAAD,EAAAC,IAAA,EAAqD;EAAA,IAA7BC,IAAF,GAA+BD,IAAA,CAA7BC,IAAF;IAAQC,OAAA,GAAuBF,IAAA,CAAvBE,OAAA;EAC3C,QAAQD,IAAR;IACE,KAAKR,YAAY,CAACE,kBAAlB;MAAsC;QACpC,IAAMQ,OAAO,GAAAC,aAAA,CAAAA,aAAA,KACRL,KAAK,CAACI,OADK,OAAAE,eAAA,KAEZ,GAAEH,OAAO,CAACI,KAAM,EAAlB,EAAsBJ,OAAO,CAACK,IAAA,EAFhC;QAIAR,KAAK,CAACS,YAAN,CAAmBC,MAAM,CAACC,MAAP,CAAcP,OAAd,EAAuBQ,IAAvB,CAA4B,EAA5B,CAAnB;QAEA,OAAAP,aAAA,CAAAA,aAAA,KACKL,KADE;UAELI,OAAA,EAAAA;QAAA;MAEH;IAED,KAAKV,YAAY,CAACG,UAAlB;MAA8B;QAC5B,IAAMO,QAAO,GAAGX,WAAW,CAACU,OAAO,CAACU,cAAT,EAAyBV,OAAO,CAACW,IAAjC,CAA3B;QAEAd,KAAK,CAACS,YAAN,CAAmBC,MAAM,CAACC,MAAP,CAAcP,QAAd,EAAuBQ,IAAvB,CAA4B,EAA5B,CAAnB;QAEA,OAAAP,aAAA,CAAAA,aAAA,KACKL,KADE;UAELI,OAAA,EAAAA;QAAA;MAEH;IAED,KAAKV,YAAY,CAACI,QAAlB;MAA4B;QAC1B,IAAMM,SAAO,GAAGX,WAAW,CAACU,OAAD,CAA3B;QACAH,KAAK,CAACS,YAAN,CAAmBC,MAAM,CAACC,MAAP,CAAcP,SAAd,EAAuBQ,IAAvB,CAA4B,EAA5B,CAAnB;QAEA,OAAAP,aAAA,CAAAA,aAAA,KAAYL,KAAL;UAAYI,OAAA,EAAAA;QAAA;MACpB;IAED,KAAKV,YAAY,CAACC,eAAlB;MAAmC;QACjC,OAAAU,aAAA,CAAAA,aAAA,KAAYL,KAAL;UAAYS,YAAY,EAAEN;QAAA;MAClC;IAED,KAAKT,YAAY,CAACK,gBAAlB;MAAoC;QAClC,OAAAM,aAAA,CAAAA,aAAA,KAAYL,KAAL;UAAYe,aAAa,EAAEZ;QAAA;MACnC;IAED;MACE,OAAOH,KAAP;EAzCJ;AA2CD,CA5CD"},"metadata":{},"sourceType":"module","externalDependencies":[]}