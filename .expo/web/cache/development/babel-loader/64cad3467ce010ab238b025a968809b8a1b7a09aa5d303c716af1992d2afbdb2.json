{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styling from \"./TestLinkStyle\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { navigationStrings } from \"../../constants\";\nimport { CustomButton, CustomHeader } from \"../../components\";\nimport { Colors } from \"../../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar linkData = [{\n  name: 'ACH Authorization Agreement Disclosure',\n  key: \"ach-authorization-agreement-disclosure\"\n}, {\n  name: 'Business Cardholder Agreement',\n  key: \"business-cardholder-agreement\"\n}, {\n  name: 'Commercial Checking Account Agreement - Regent Bank',\n  key: \"commercial-checking-account-agreement-regent-bank\"\n}, {\n  name: 'Error Resolution Disclosure',\n  key: \"error-resolution-disclosure\"\n}, {\n  name: 'E-Sign Consent Disclosure',\n  key: \"e-sign-consent-disclosure\"\n}, {\n  name: 'Personal Cardholder Agreement',\n  key: \"personal-cardholder-agreement\"\n}, {\n  name: 'Reg CC (Funds Availability) Disclosure',\n  key: \"reg-cc-funds-availability-disclosure\"\n}, {\n  name: 'Reg DD (Truth in Savings Act) Disclosure',\n  key: \"reg-dd-truth-in-savings-act-disclosure\"\n}, {\n  name: 'ReThink Terms of Use Agreement',\n  key: \"rethink-terms-of-use-agreement\"\n}, {\n  name: 'USA Patriot Act (KYC) Disclosure',\n  key: \"usa-patriot-act-kyc-disclosure\"\n}, {\n  name: 'Privacy Policy',\n  key: \"privacy-policy\"\n}, {\n  name: 'Owner Certification',\n  key: \"owner-certification\"\n}];\nvar TestLink = function TestLink(_ref) {\n  var _route$params, _Colors$theme;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.screenBackground\n    },\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: 'Disclosures',\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.screen,\n      children: [_jsx(Text, {\n        style: styles.headTxt,\n        children: \"A few more things we need you to see:\"\n      }), _jsx(View, {\n        style: styles.card,\n        children: linkData.map(function (item, index) {\n          return _jsx(Text, {\n            style: styles.linkText,\n            onPress: function onPress() {\n              navigation.navigate(navigationStrings.WEBVIEWSCREEN, {\n                url: item == null ? void 0 : item.key\n              });\n            },\n            children: item == null ? void 0 : item.name\n          });\n        })\n      })]\n    })]\n  });\n};\nexport default TestLink;","map":{"version":3,"names":["styling","useRoute","navigationStrings","CustomButton","CustomHeader","Colors","jsx","_jsx","jsxs","_jsxs","linkData","name","key","TestLink","_ref","_route$params","_Colors$theme","navigation","route","theme","params","styles","View","style","flex","backgroundColor","screenBackground","children","headerTitle","onPressBack","goBack","screen","Text","headTxt","card","map","item","index","linkText","onPress","navigate","WEBVIEWSCREEN","url"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/TestLinkScreen/TestLink.js"],"sourcesContent":["import { Text, View } from \"react-native\";\nimport styling from \"./TestLinkStyle\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { navigationStrings } from \"../../constants\";\nimport { CustomButton, CustomHeader } from \"../../components\";\nimport { Colors } from \"../../theme\";\n\nlet linkData=[\n    {\n        name:'ACH Authorization Agreement Disclosure',\n       key:\"ach-authorization-agreement-disclosure\"\n    },\n    {\n        name:'Business Cardholder Agreement',\n       key:\"business-cardholder-agreement\"\n    },\n    {\n        name:'Commercial Checking Account Agreement - Regent Bank',\n       key:\"commercial-checking-account-agreement-regent-bank\"\n    },\n    {\n        name:'Error Resolution Disclosure',\n       key:\"error-resolution-disclosure\"\n    },\n    {\n        name:'E-Sign Consent Disclosure',\n       key:\"e-sign-consent-disclosure\"\n    },\n    {\n        name:'Personal Cardholder Agreement',\n       key:\"personal-cardholder-agreement\"\n    },\n    {\n        name:'Reg CC (Funds Availability) Disclosure',\n       key:\"reg-cc-funds-availability-disclosure\"\n    },\n    {\n        name:'Reg DD (Truth in Savings Act) Disclosure',\n       key:\"reg-dd-truth-in-savings-act-disclosure\"\n    },\n    {\n        name:'ReThink Terms of Use Agreement',\n       key:\"rethink-terms-of-use-agreement\"\n    },\n    {\n        name:'USA Patriot Act (KYC) Disclosure',\n       key:\"usa-patriot-act-kyc-disclosure\"\n    },\n    {\n        name:'Privacy Policy',\n       key:\"privacy-policy\"\n    },\n    {\n        name:'Owner Certification',\n       key:\"owner-certification\"\n    },\n]\n\nconst TestLink = ({ navigation }) => {\n    const route = useRoute();\n    const theme = route?.params?.theme;\n    const styles = styling(theme);\n    return (\n        <View style={{flex:1, backgroundColor: Colors[theme]?.screenBackground}}>\n             <CustomHeader\n        theme={theme}\n        headerTitle={'Disclosures'}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.screen}>\n            <Text style={styles.headTxt}>A few more things we need you to see:</Text>\n            <View style={styles.card}>\n            {linkData.map((item,index)=>{\n                return(\n                <Text style={styles.linkText} onPress={() => { navigation.navigate(navigationStrings.WEBVIEWSCREEN, { url: item?.key }) }}>\n                    {item?.name}\n                </Text>\n                )\n            })}\n            </View>\n        </View>\n        </View>\n    )\n}\n\nexport default TestLink;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}