{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRoute } from '@react-navigation/native';\nimport { useSelector } from 'react-redux';\nimport { Icons } from \"../../assets\";\nimport { CustomButton, CustomHeader, MoveMoneyCard } from \"../../components\";\nimport { navigationStrings } from \"../../constants\";\nimport { Strings } from \"../../constants/Strings\";\nimport { Colors } from \"../../theme\";\nimport styling from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OTPVerify = function OTPVerify(_ref) {\n  var _route$params, _userDetails$data, _userDetails$data$per, _userDetails$data$per2;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var userDetails = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.login;\n  });\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    otp = _useState2[0],\n    setOtp = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    otpError = _useState4[0],\n    setOtpError = _useState4[1];\n  var onLogin = function onLogin() {\n    var _route$params2;\n    if (otp.length === 0) {\n      setOtpError('Please enter otp.');\n    } else if (otp !== (route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.verification_code)) {\n      setOtpError('Please enter correct otp.');\n    } else {\n      var _route$params3;\n      navigation.navigate(navigationStrings.CONFIRMPASSWORD, {\n        email: route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.email\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: \"Verification Code\",\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsxs(Text, {\n        style: styles.errorText1,\n        children: [\"Enter verification code sent to \", (userDetails == null ? void 0 : (_userDetails$data = userDetails.data) == null ? void 0 : (_userDetails$data$per = _userDetails$data.personDetail) == null ? void 0 : (_userDetails$data$per2 = _userDetails$data$per[0]) == null ? void 0 : _userDetails$data$per2.email) || '']\n      }), (otpError == null ? void 0 : otpError.length) > 0 && _jsx(Text, {\n        style: styles.errorText,\n        children: otpError\n      })]\n    }), _jsx(View, {\n      style: styles.ConfirmParent,\n      children: _jsx(CustomButton, {\n        theme: theme,\n        onBtnPress: function onBtnPress() {\n          return onLogin();\n        },\n        buttonTitle: Strings.confirm,\n        buttonStyle: styles.confirmBtn,\n        buttonTitleStyle: styles.confirmText\n      })\n    })]\n  });\n};\nexport default OTPVerify;","map":{"version":3,"names":["React","useState","ScrollView","Text","View","useRoute","useSelector","Icons","CustomButton","CustomHeader","MoveMoneyCard","navigationStrings","Strings","Colors","styling","jsx","_jsx","jsxs","_jsxs","OTPVerify","_ref","_route$params","_userDetails$data","_userDetails$data$per","_userDetails$data$per2","navigation","route","theme","params","styles","userDetails","state","_state$user","user","login","_useState","_useState2","_slicedToArray","otp","setOtp","_useState3","_useState4","otpError","setOtpError","onLogin","_route$params2","length","verification_code","_route$params3","navigate","CONFIRMPASSWORD","email","style","screen","children","headerTitle","onPressBack","goBack","scrollView","errorText1","data","personDetail","errorText","ConfirmParent","onBtnPress","buttonTitle","confirm","buttonStyle","confirmBtn","buttonTitleStyle","confirmText"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/OTPVerify/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, Text, View } from 'react-native';\nimport { useRoute } from '@react-navigation/native';\n// import OtpInputs from 'react-native-otp-inputs';\nimport { useSelector } from 'react-redux';\nimport { Icons } from '../../assets';\nimport { CustomButton, CustomHeader, MoveMoneyCard } from '../../components';\nimport { navigationStrings } from '../../constants';\nimport { Strings } from '../../constants/Strings';\nimport { Colors } from '../../theme';\nimport styling from './styles';\n\nconst OTPVerify = ({ navigation }) => {\n    const route = useRoute();\n    const theme = route?.params?.theme;\n    const styles = styling(theme);\n    const userDetails = useSelector(state => state?.user?.login)\n    const [otp, setOtp] = useState('')\n    const [otpError, setOtpError] = useState('')\n    const onLogin = () => {\n        if (otp.length === 0) {\n            setOtpError('Please enter otp.')\n        } else if (otp !== route?.params?.verification_code) {\n            setOtpError('Please enter correct otp.')\n        } else {\n            navigation.navigate(navigationStrings.CONFIRMPASSWORD, { email: route?.params?.email })\n        }\n    }\n    return (\n        <View style={styles.screen}>\n            <CustomHeader\n                theme={theme}\n                headerTitle={\"Verification Code\"}\n                onPressBack={() => navigation.goBack()}\n            />\n            <ScrollView style={styles.scrollView}>\n                <Text style={styles.errorText1}>\n                    Enter verification code sent to {userDetails?.data?.personDetail?.[0]?.email || ''}\n                </Text>\n                {/* <OtpInputs\n                    handleChange={(code) => {\n                        setOtp(code)\n                        setOtpError('')\n                    }}\n                    numberOfInputs={6}\n                    autoFocus\n                    inputStyles={{ backgroundColor: 'white', width: 55, height: 70, borderRadius: 8, elevation: 2, margin: 1, fontSize: 20, alignItems: 'center', marginTop: 30 }}\n                    textAlign='center'\n                /> */}\n                {otpError?.length > 0 && (\n                    <Text style={styles.errorText}>\n                        {otpError}\n                    </Text>\n                )}\n            </ScrollView>\n            <View style={styles.ConfirmParent}>\n                <CustomButton\n                    theme={theme}\n                    onBtnPress={() => onLogin()}\n                    buttonTitle={Strings.confirm}\n                    buttonStyle={styles.confirmBtn}\n                    buttonTitleStyle={styles.confirmText}\n                />\n            </View>\n        </View>\n    );\n};\n\nexport default OTPVerify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}