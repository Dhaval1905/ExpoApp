{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styling from \"./CustomButtonStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CustomButton = function CustomButton(_ref) {\n  var buttonStyle = _ref.buttonStyle,\n    buttonTitleStyle = _ref.buttonTitleStyle,\n    buttonTitle = _ref.buttonTitle,\n    onBtnPress = _ref.onBtnPress,\n    buttonActiveOpacity = _ref.buttonActiveOpacity,\n    buttonDisable = _ref.buttonDisable,\n    theme = _ref.theme;\n  var styles = styling(theme);\n  return _jsx(TouchableOpacity, {\n    disabled: buttonDisable != null ? buttonDisable : false,\n    style: [styles.defaultButtonStyle, buttonStyle],\n    onPress: onBtnPress,\n    activeOpacity: buttonActiveOpacity != null ? buttonActiveOpacity : 0.2,\n    children: _jsx(Text, {\n      style: [styles.defaultTextStyle, buttonTitleStyle],\n      children: buttonTitle != null ? buttonTitle : 'Press Here'\n    })\n  });\n};\nexport default CustomButton;","map":{"version":3,"names":["React","Text","TouchableOpacity","styling","jsx","_jsx","CustomButton","_ref","buttonStyle","buttonTitleStyle","buttonTitle","onBtnPress","buttonActiveOpacity","buttonDisable","theme","styles","disabled","style","defaultButtonStyle","onPress","activeOpacity","children","defaultTextStyle"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/components/CustomButton/CustomButton.js"],"sourcesContent":["import React from 'react';\nimport {Text, TouchableOpacity} from 'react-native';\nimport styling from './CustomButtonStyle';\n\nconst CustomButton = ({\n  buttonStyle,\n  buttonTitleStyle,\n  buttonTitle,\n  onBtnPress,\n  buttonActiveOpacity,\n  buttonDisable,\n  theme,\n}) => {\n  const styles = styling(theme);\n\n  return (\n    <TouchableOpacity\n      disabled={buttonDisable ?? false}\n      style={[styles.defaultButtonStyle, buttonStyle]}\n      onPress={onBtnPress}\n      activeOpacity={buttonActiveOpacity ?? 0.2}>\n      <Text style={[styles.defaultTextStyle, buttonTitleStyle]}>\n        {buttonTitle ?? 'Press Here'}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default CustomButton;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,OAAOC,OAAO;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAE1C,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAQZ;EAAA,IAPJC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,gBAAgB,GAAAF,IAAA,CAAhBE,gBAAgB;IAChBC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IACXC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,mBAAmB,GAAAL,IAAA,CAAnBK,mBAAmB;IACnBC,aAAa,GAAAN,IAAA,CAAbM,aAAa;IACbC,KAAK,GAAAP,IAAA,CAALO,KAAK;EAEL,IAAMC,MAAM,GAAGZ,OAAO,CAACW,KAAK,CAAC;EAE7B,OACET,IAAA,CAACH,gBAAgB;IACfc,QAAQ,EAAEH,aAAa,WAAbA,aAAa,GAAI,KAAM;IACjCI,KAAK,EAAE,CAACF,MAAM,CAACG,kBAAkB,EAAEV,WAAW,CAAE;IAChDW,OAAO,EAAER,UAAW;IACpBS,aAAa,EAAER,mBAAmB,WAAnBA,mBAAmB,GAAI,GAAI;IAAAS,QAAA,EAC1ChB,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAE,CAACF,MAAM,CAACO,gBAAgB,EAAEb,gBAAgB,CAAE;MAAAY,QAAA,EACtDX,WAAW,WAAXA,WAAW,GAAI;IAAY,CACxB;EAAC,CACS,CAAC;AAEvB,CAAC;AAED,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}