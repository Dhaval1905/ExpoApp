{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRoute } from '@react-navigation/native';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DatePicker from 'react-native-date-picker';\nimport FontistoIcon from \"@expo/vector-icons/Fontisto\";\nimport { CustomButton, CustomHeader } from \"../../components\";\nimport { Strings } from \"../../constants\";\nimport { moderateScale, verticalScale } from \"../../theme\";\nimport styling from \"./MakeTravelNoticeStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MakeTravelNoticeScreen = function MakeTravelNoticeScreen(_ref) {\n  var _route$params, _Strings$country, _Strings$from, _Strings$to;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    fromDate = _useState2[0],\n    setFromDate = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    toDate = _useState4[0],\n    setToDate = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFromDate = _useState6[0],\n    setIsFromDate = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    open = _useState8[0],\n    setOpen = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    countryModal = _useState10[0],\n    setCountryModal = _useState10[1];\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: Strings.travelNotice,\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.card,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: Strings.makeTravelNoticeNote\n        }), _jsx(Text, {\n          style: [styles.textInput, {\n            marginBottom: verticalScale(35),\n            paddingBottom: verticalScale(10)\n          }],\n          onPress: function onPress() {\n            setCountryModal(true);\n          },\n          children: (_Strings$country = Strings.country) == null ? void 0 : _Strings$country.toUpperCase()\n        }), _jsxs(View, {\n          style: styles.fromToParent,\n          children: [_jsx(Text, {\n            style: [styles.textInput, {\n              flex: 0.45,\n              paddingBottom: verticalScale(10)\n            }],\n            onPress: function onPress() {\n              setIsFromDate(true);\n              setOpen(true);\n            },\n            children: fromDate === '' ? (_Strings$from = Strings.from) == null ? void 0 : _Strings$from.toUpperCase() : fromDate\n          }), _jsx(Text, {\n            style: [styles.textInput, {\n              flex: 0.45,\n              paddingBottom: verticalScale(10)\n            }],\n            onPress: function onPress() {\n              setOpen(true);\n            },\n            children: toDate === '' ? (_Strings$to = Strings.to) == null ? void 0 : _Strings$to.toUpperCase() : toDate\n          })]\n        })]\n      }), _jsx(CustomButton, {\n        theme: theme,\n        buttonTitle: Strings.submit,\n        buttonStyle: styles.buttonStyle\n      })]\n    }), _jsx(DatePicker, {\n      modal: true,\n      open: open,\n      mode: 'date',\n      date: new Date(),\n      onConfirm: function onConfirm(date) {\n        var _moment, _moment$format;\n        var finalDate = (_moment = moment(date)) == null ? void 0 : (_moment$format = _moment.format('MMM DD,YYYY')) == null ? void 0 : _moment$format.toString();\n        isFromDate ? setFromDate(finalDate) : setToDate(finalDate);\n        setIsFromDate(false);\n        setOpen(false);\n      },\n      onCancel: function onCancel() {\n        setIsFromDate(false);\n        setOpen(false);\n      }\n    }), _jsx(Modal, {\n      visible: countryModal,\n      children: _jsx(SafeAreaView, {\n        style: styles.modalParent,\n        children: _jsxs(View, {\n          style: styles.modalContainer,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: Strings.chooseCountry\n          }), _jsxs(View, {\n            style: styles.searchBarParent,\n            children: [_jsx(View, {\n              style: styles.searchRightIcon,\n              children: _jsx(FontistoIcon, {\n                name: \"search\",\n                size: moderateScale(18)\n              })\n            }), _jsx(View, {\n              style: styles.searchBar,\n              children: _jsx(TextInput, {\n                placeholder: 'Search'\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.countryList,\n            children: _jsxs(TouchableOpacity, {\n              style: styles.countryParent,\n              onPress: function onPress() {\n                return setCountryModal(false);\n              },\n              children: [_jsx(View, {\n                style: styles.countryFlag,\n                children: _jsx(Image, {\n                  style: {\n                    height: '100%',\n                    width: '100%'\n                  },\n                  source: {\n                    uri: 'https://icons.iconarchive.com/icons/wikipedia/flags/1024/IN-India-Flag-icon.png'\n                  }\n                })\n              }), _jsx(Text, {\n                style: styles.countryName,\n                children: 'India'\n              })]\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default MakeTravelNoticeScreen;","map":{"version":3,"names":["useRoute","moment","React","useState","Image","Modal","SafeAreaView","Text","TextInput","TouchableOpacity","View","DatePicker","FontistoIcon","CustomButton","CustomHeader","Strings","moderateScale","verticalScale","styling","jsx","_jsx","jsxs","_jsxs","MakeTravelNoticeScreen","_ref","_route$params","_Strings$country","_Strings$from","_Strings$to","navigation","route","theme","params","styles","_useState","_useState2","_slicedToArray","fromDate","setFromDate","_useState3","_useState4","toDate","setToDate","_useState5","_useState6","isFromDate","setIsFromDate","_useState7","_useState8","open","setOpen","_useState9","_useState10","countryModal","setCountryModal","style","screen","children","headerTitle","travelNotice","onPressBack","goBack","container","card","cardTitle","makeTravelNoticeNote","textInput","marginBottom","paddingBottom","onPress","country","toUpperCase","fromToParent","flex","from","to","buttonTitle","submit","buttonStyle","modal","mode","date","Date","onConfirm","_moment","_moment$format","finalDate","format","toString","onCancel","visible","modalParent","modalContainer","modalTitle","chooseCountry","searchBarParent","searchRightIcon","name","size","searchBar","placeholder","countryList","countryParent","countryFlag","height","width","source","uri","countryName"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/MakeTravelNotice/MakeTravelNoticeScreen.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport moment from 'moment';\nimport React, {useState} from 'react';\nimport {\n  Image,\n  Modal,\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport DatePicker from 'react-native-date-picker';\nimport FontistoIcon from 'react-native-vector-icons/Fontisto';\nimport {CustomButton, CustomHeader} from '../../components';\nimport {Strings} from '../../constants';\nimport {moderateScale, verticalScale} from '../../theme';\nimport styling from './MakeTravelNoticeStyle';\n\nconst MakeTravelNoticeScreen = ({navigation}) => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [isFromDate, setIsFromDate] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [countryModal, setCountryModal] = useState(false);\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={Strings.travelNotice}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.container}>\n        <View style={styles.card}>\n          <Text style={styles.cardTitle}>{Strings.makeTravelNoticeNote}</Text>\n          <Text\n            style={[\n              styles.textInput,\n              {\n                marginBottom: verticalScale(35),\n                paddingBottom: verticalScale(10),\n              },\n            ]}\n            onPress={() => {\n              setCountryModal(true);\n            }}>\n            {Strings.country?.toUpperCase()}\n          </Text>\n          <View style={styles.fromToParent}>\n            <Text\n              style={[\n                styles.textInput,\n                {flex: 0.45, paddingBottom: verticalScale(10)},\n              ]}\n              onPress={() => {\n                setIsFromDate(true);\n                setOpen(true);\n              }}>\n              {fromDate === '' ? Strings.from?.toUpperCase() : fromDate}\n            </Text>\n            <Text\n              style={[\n                styles.textInput,\n                {flex: 0.45, paddingBottom: verticalScale(10)},\n              ]}\n              onPress={() => {\n                setOpen(true);\n              }}>\n              {toDate === '' ? Strings.to?.toUpperCase() : toDate}\n            </Text>\n          </View>\n        </View>\n        <CustomButton\n          theme={theme}\n          buttonTitle={Strings.submit}\n          buttonStyle={styles.buttonStyle}\n        />\n      </View>\n      <DatePicker\n        modal\n        open={open}\n        mode={'date'}\n        date={new Date()}\n        onConfirm={date => {\n          const finalDate = moment(date)?.format('MMM DD,YYYY')?.toString();\n          isFromDate ? setFromDate(finalDate) : setToDate(finalDate);\n          setIsFromDate(false);\n          setOpen(false);\n        }}\n        onCancel={() => {\n          setIsFromDate(false);\n          setOpen(false);\n        }}\n      />\n      <Modal visible={countryModal}>\n        <SafeAreaView style={styles.modalParent}>\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalTitle}>{Strings.chooseCountry}</Text>\n            <View style={styles.searchBarParent}>\n              <View style={styles.searchRightIcon}>\n                <FontistoIcon name=\"search\" size={moderateScale(18)} />\n              </View>\n              <View style={styles.searchBar}>\n                <TextInput placeholder={'Search'} />\n              </View>\n            </View>\n            <View style={styles.countryList}>\n              <TouchableOpacity\n                style={styles.countryParent}\n                onPress={() => setCountryModal(false)}>\n                <View style={styles.countryFlag}>\n                  <Image\n                    style={{\n                      height: '100%',\n                      width: '100%',\n                    }}\n                    source={{\n                      uri: 'https://icons.iconarchive.com/icons/wikipedia/flags/1024/IN-India-Flag-icon.png',\n                    }}\n                  />\n                </View>\n                <Text style={styles.countryName}>{'India'}</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </SafeAreaView>\n      </Modal>\n    </View>\n  );\n};\n\nexport default MakeTravelNoticeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}