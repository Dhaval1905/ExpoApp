{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useRoute } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icons, Images } from \"../../assets\";\nimport { DashboardCard } from \"../../components\";\nimport { navigationStrings, Strings } from \"../../constants\";\nimport { getDashBoard, getLicenseDetails, getTransaction1 } from \"../../redux/actions/tansaction\";\nimport { showLoader } from \"../../redux/actions/user\";\nimport { Colors } from \"../../theme\";\nimport { ActivationCard, BalancesCard, TransactionCard } from \"./components\";\nimport styling from \"./DashboardStyle\";\nimport DashboardHeader from \"./components/DashboardHeader\";\nimport { changeDashboard } from \"../../redux/actions/initial\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen(_ref) {\n  var _route$params, _ref4, _userDetails$data, _userDetails$data$acc, _userDetails$data$acc2, _userDetails$data$acc3, _userDetails$data$acc4, _userDetails$data2, _userDetails$data2$ac, _userDetails$data2$ac2, _userDetails$data2$ac3, _userDetails$data2$ac4;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var userDetails = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.login;\n  });\n  var dashBoardData = useSelector(function (state) {\n    var _state$user2;\n    return state == null ? void 0 : (_state$user2 = state.user) == null ? void 0 : _state$user2.dashBoard;\n  });\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var unsubscribe = navigation.addListener('focus', _asyncToGenerator(function* () {\n        yield dispatch(showLoader(true));\n        yield dispatch(getDashBoard());\n        yield dispatch(getLicenseDetails());\n        yield dispatch(showLoader(false));\n        yield dispatch(changeDashboard(false));\n      }));\n      return unsubscribe;\n    })();\n  }, []);\n  var onPress = function onPress() {\n    return (_ref4 = _ref4 || _asyncToGenerator(function* () {\n      yield dispatch(changeDashboard(true));\n      navigation.navigate(navigationStrings.MOVEMONEY, {\n        isMoveMoney: false\n      });\n    })).apply(this, arguments);\n  };\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsxs(ScrollView, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(DashboardHeader, {\n        theme: theme,\n        navigation: navigation\n      }), _jsx(View, {\n        style: styles.backgroundImageParent,\n        children: _jsx(View, {\n          style: styles.balanceCardParent,\n          children: _jsx(BalancesCard, {\n            theme: theme,\n            availableBalance: userDetails == null ? void 0 : (_userDetails$data = userDetails.data) == null ? void 0 : (_userDetails$data$acc = _userDetails$data.accountDetail) == null ? void 0 : (_userDetails$data$acc2 = _userDetails$data$acc[0]) == null ? void 0 : (_userDetails$data$acc3 = _userDetails$data$acc2.balances) == null ? void 0 : (_userDetails$data$acc4 = _userDetails$data$acc3[1]) == null ? void 0 : _userDetails$data$acc4.balance,\n            overallBalance: userDetails == null ? void 0 : (_userDetails$data2 = userDetails.data) == null ? void 0 : (_userDetails$data2$ac = _userDetails$data2.accountDetail) == null ? void 0 : (_userDetails$data2$ac2 = _userDetails$data2$ac[0]) == null ? void 0 : (_userDetails$data2$ac3 = _userDetails$data2$ac2.balances) == null ? void 0 : (_userDetails$data2$ac4 = _userDetails$data2$ac3[0]) == null ? void 0 : _userDetails$data2$ac4.balance\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.cardParent,\n        children: [_jsx(DashboardCard, {\n          theme: theme,\n          title: Strings.fundAccount,\n          subTitle: Strings.addMoneyRethink,\n          navigationText: Strings.wayFund,\n          logo: Icons.bank,\n          logoStyle: styles.logoStyle,\n          onPressNavigationButton: function onPressNavigationButton() {\n            return onPress();\n          }\n        }), _jsx(TransactionCard, {\n          theme: theme,\n          noTrasaction: dashBoardData != null && dashBoardData.last_5_transactions_filtered && (dashBoardData == null ? void 0 : dashBoardData.last_5_transactions_filtered.length) > 0 ? false : true,\n          title: 'Last 5 Transactions'\n        })]\n      })]\n    })\n  });\n};\nexport default DashboardScreen;","map":{"version":3,"names":["useRoute","React","useEffect","useState","ImageBackground","ScrollView","Text","View","Image","LinearGradient","useDispatch","useSelector","Icons","Images","DashboardCard","navigationStrings","Strings","getDashBoard","getLicenseDetails","getTransaction1","showLoader","Colors","ActivationCard","BalancesCard","TransactionCard","styling","DashboardHeader","changeDashboard","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","_route$params","_ref4","_userDetails$data","_userDetails$data$acc","_userDetails$data$acc2","_userDetails$data$acc3","_userDetails$data$acc4","_userDetails$data2","_userDetails$data2$ac","_userDetails$data2$ac2","_userDetails$data2$ac3","_userDetails$data2$ac4","navigation","route","dispatch","theme","params","styles","userDetails","state","_state$user","user","login","dashBoardData","_state$user2","dashBoard","_asyncToGenerator","unsubscribe","addListener","onPress","navigate","MOVEMONEY","isMoveMoney","apply","arguments","style","screen","children","flex","backgroundImageParent","balanceCardParent","availableBalance","data","accountDetail","balances","balance","overallBalance","cardParent","title","fundAccount","subTitle","addMoneyRethink","navigationText","wayFund","logo","bank","logoStyle","onPressNavigationButton","noTrasaction","last_5_transactions_filtered","length"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/Dashboard/DashboardScreen.js"],"sourcesContent":["import { useRoute } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport { ImageBackground, ScrollView, Text, View, Image } from 'react-native';\n// import LinearGradient from 'react-native-linear-gradient';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icons, Images } from '../../assets';\nimport { DashboardCard } from '../../components';\nimport { navigationStrings, Strings } from '../../constants';\nimport { getDashBoard, getLicenseDetails, getTransaction1 } from '../../redux/actions/tansaction';\nimport { showLoader } from '../../redux/actions/user';\nimport { Colors } from '../../theme';\nimport { ActivationCard, BalancesCard, TransactionCard } from './components';\nimport styling from './DashboardStyle';\nimport DashboardHeader from './components/DashboardHeader';\nimport { changeDashboard } from '../../redux/actions/initial';\n\n\nconst DashboardScreen = ({ navigation }) => {\n  const route = useRoute();\n  const dispatch = useDispatch();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n  const userDetails = useSelector(state => state?.user?.login)\n  const dashBoardData = useSelector(state => state?.user?.dashBoard)\n\n  useEffect(() => {\n    (async () => {\n      const unsubscribe = navigation.addListener('focus', async () => {\n        await dispatch(showLoader(true))\n        await dispatch(getDashBoard())\n        await dispatch(getLicenseDetails())\n        await dispatch(showLoader(false))\n        await dispatch(changeDashboard(false))\n      });\n      return unsubscribe;\n    })();\n  }, [])\n\n  const onPress = async () => {\n    await dispatch(changeDashboard(true))\n    navigation.navigate(navigationStrings.MOVEMONEY, { isMoveMoney: false })\n  }\n\n  return (\n    <View style={styles.screen}>\n      <ScrollView style={{ flex: 1 }}>\n        <DashboardHeader theme={theme} navigation={navigation} />\n        <View style={styles.backgroundImageParent}>\n          <View style={styles.balanceCardParent}>\n            <BalancesCard theme={theme} availableBalance={userDetails?.data?.accountDetail?.[0]?.balances?.[1]?.balance} overallBalance={userDetails?.data?.accountDetail?.[0]?.balances?.[0]?.balance} />\n          </View>\n        </View>\n        <View style={styles.cardParent}>\n          <DashboardCard\n            theme={theme}\n            title={Strings.fundAccount}\n            subTitle={Strings.addMoneyRethink}\n            navigationText={Strings.wayFund}\n            logo={Icons.bank}\n            logoStyle={styles.logoStyle}\n            onPressNavigationButton={() => onPress()}\n          // onPressNavigationButton={() => navigation.navigate(navigationStrings.MOVEMONEY,{isMoveMoney:false})}\n          />\n          <TransactionCard theme={theme} noTrasaction={(dashBoardData?.last_5_transactions_filtered && dashBoardData?.last_5_transactions_filtered.length > 0) ? false : true} title={'Last 5 Transactions'} />\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default DashboardScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}