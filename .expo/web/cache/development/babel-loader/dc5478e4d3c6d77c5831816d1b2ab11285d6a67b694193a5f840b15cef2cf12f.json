{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRoute } from '@react-navigation/native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icons } from \"../../assets\";\nimport { CustomButton, CustomHeader, MoveMoneyCard } from \"../../components\";\nimport { navigationStrings } from \"../../constants\";\nimport { Strings } from \"../../constants/Strings\";\nimport { Colors } from \"../../theme\";\nimport styling from \"./styles\";\nimport { resendOTP, showLoader, verifyOtp } from \"../../redux/actions/user\";\nimport { showMessage } from 'react-native-flash-message';\nimport { save } from \"../../utils/Storage\";\nimport OTPInputView from '@twotalltotems/react-native-otp-input';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OTPVerifyLogin = function OTPVerifyLogin(_ref) {\n  var _route$params, _ref2, _ref3, _userDetails$data, _userDetails$data$per, _userDetails$data$per2;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var userDetails = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.login;\n  });\n  var dispatch = useDispatch();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    otp = _useState2[0],\n    setOtp = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    otpError = _useState4[0],\n    setOtpError = _useState4[1];\n  var onLogin = function onLogin() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      if (otp.length === 0) {\n        setOtpError('Please enter otp.');\n      } else {\n        yield dispatch(showLoader(true));\n        var data = {\n          otp: otp\n        };\n        var res = yield verifyOtp(data);\n        yield dispatch(showLoader(false));\n        if ((res == null ? void 0 : res.status) === 0) {\n          showMessage({\n            message: res == null ? void 0 : res.message,\n            type: \"danger\"\n          });\n          yield save('otpVerify', false);\n        } else {\n          yield save('otpVerify', true);\n          navigation.navigate(navigationStrings.BOTTOMTABSNAV);\n        }\n      }\n    })).apply(this, arguments);\n  };\n  var onPressResetPassword = function onPressResetPassword() {\n    return (_ref3 = _ref3 || _asyncToGenerator(function* () {\n      yield dispatch(showLoader(true));\n      var res = yield resendOTP();\n      yield dispatch(showLoader(false));\n      if ((res == null ? void 0 : res.status) === 0) {\n        showMessage({\n          message: res == null ? void 0 : res.message,\n          type: \"danger\"\n        });\n      } else {\n        showMessage({\n          message: \"Please check your mail OTP resend successfully!\",\n          type: \"success\"\n        });\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: \"Verification Code\",\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsxs(Text, {\n        style: styles.errorText1,\n        children: [\"Enter verification code sent to \", (userDetails == null ? void 0 : (_userDetails$data = userDetails.data) == null ? void 0 : (_userDetails$data$per = _userDetails$data.personDetail) == null ? void 0 : (_userDetails$data$per2 = _userDetails$data$per[0]) == null ? void 0 : _userDetails$data$per2.email) || '']\n      }), _jsx(OTPInputView, {\n        style: {\n          width: '80%',\n          height: 200\n        },\n        pinCount: 6,\n        onCodeChanged: function onCodeChanged(code) {\n          console.log(\"Code\", code);\n          setOtp(code);\n          setOtpError('');\n        },\n        code: otp,\n        autoFocusOnLoad: true,\n        codeInputFieldStyle: {\n          width: 30,\n          height: 45,\n          borderWidth: 0,\n          borderBottomWidth: 1\n        },\n        codeInputHighlightStyle: {\n          borderColor: \"#03DAC6\"\n        },\n        onCodeFilled: function onCodeFilled(code) {\n          console.log(`Code is ${code}, you are good to go!`);\n        },\n        clearInputs: true\n      }), (otpError == null ? void 0 : otpError.length) > 0 && _jsx(Text, {\n        style: styles.errorText,\n        children: otpError\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return onPressResetPassword();\n        },\n        children: _jsx(Text, {\n          style: styles.resetPassword,\n          children: \"Resend verification code\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.ConfirmParent,\n      children: _jsx(CustomButton, {\n        theme: theme,\n        onBtnPress: function onBtnPress() {\n          return onLogin();\n        },\n        buttonTitle: Strings.confirm,\n        buttonStyle: styles.confirmBtn,\n        buttonTitleStyle: styles.confirmText\n      })\n    })]\n  });\n};\nexport default OTPVerifyLogin;","map":{"version":3,"names":["React","useState","ScrollView","Text","TouchableOpacity","View","useRoute","useDispatch","useSelector","Icons","CustomButton","CustomHeader","MoveMoneyCard","navigationStrings","Strings","Colors","styling","resendOTP","showLoader","verifyOtp","showMessage","save","OTPInputView","jsx","_jsx","jsxs","_jsxs","OTPVerifyLogin","_ref","_route$params","_ref2","_ref3","_userDetails$data","_userDetails$data$per","_userDetails$data$per2","navigation","route","theme","params","styles","userDetails","state","_state$user","user","login","dispatch","_useState","_useState2","_slicedToArray","otp","setOtp","_useState3","_useState4","otpError","setOtpError","onLogin","_asyncToGenerator","length","data","res","status","message","type","navigate","BOTTOMTABSNAV","apply","arguments","onPressResetPassword","style","screen","children","headerTitle","onPressBack","goBack","scrollView","errorText1","personDetail","email","width","height","pinCount","onCodeChanged","code","console","log","autoFocusOnLoad","codeInputFieldStyle","borderWidth","borderBottomWidth","codeInputHighlightStyle","borderColor","onCodeFilled","clearInputs","errorText","onPress","resetPassword","ConfirmParent","onBtnPress","buttonTitle","confirm","buttonStyle","confirmBtn","buttonTitleStyle","confirmText"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/OTPVerifyLogin/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, Text, TouchableOpacity, View } from 'react-native';\nimport { useRoute } from '@react-navigation/native';\n// import OtpInputs from 'react-native-otp-inputs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icons } from '../../assets';\nimport { CustomButton, CustomHeader, MoveMoneyCard } from '../../components';\nimport { navigationStrings } from '../../constants';\nimport { Strings } from '../../constants/Strings';\nimport { Colors } from '../../theme';\nimport styling from './styles';\nimport { resendOTP, showLoader, verifyOtp } from '../../redux/actions/user';\nimport { showMessage } from 'react-native-flash-message';\nimport { save } from '../../utils/Storage';\nimport OTPInputView from '@twotalltotems/react-native-otp-input'\n\nconst OTPVerifyLogin = ({ navigation }) => {\n    const route = useRoute();\n    const theme = route?.params?.theme;\n    const styles = styling(theme);\n    const userDetails = useSelector(state => state?.user?.login)\n    const dispatch = useDispatch()\n    const [otp, setOtp] = useState('')\n    const [otpError, setOtpError] = useState('')\n    const onLogin = async () => {\n        if (otp.length === 0) {\n            setOtpError('Please enter otp.')\n        } else {\n            await dispatch(showLoader(true))\n            let data = {\n                otp: otp\n            }\n            let res = await verifyOtp(data)\n            await dispatch(showLoader(false))\n            if (res?.status === 0) {\n                showMessage({\n                    message: res?.message,\n                    type: \"danger\",\n                })\n                await save('otpVerify', false)\n            } else {\n                await save('otpVerify', true)\n                navigation.navigate(navigationStrings.BOTTOMTABSNAV)\n            }\n        }\n    }\n    const onPressResetPassword = async () => {\n        await dispatch(showLoader(true))\n        let res = await resendOTP()\n        await dispatch(showLoader(false))\n        if (res?.status === 0) {\n            showMessage({\n                message: res?.message,\n                type: \"danger\",\n            })\n        } else {\n            showMessage({\n                message: \"Please check your mail OTP resend successfully!\",\n                type: \"success\",\n            })\n        }\n    }\n\n    return (\n        <View style={styles.screen}>\n            <CustomHeader\n                theme={theme}\n                headerTitle={\"Verification Code\"}\n                onPressBack={() => navigation.goBack()}\n            />\n            <ScrollView style={styles.scrollView}>\n                <Text style={styles.errorText1}>\n                    Enter verification code sent to {userDetails?.data?.personDetail?.[0]?.email || ''}\n                </Text>\n                <OTPInputView\n                    style={{ width: '80%', height: 200 }}\n                    pinCount={6}\n                    // code={this.state.code} //You can supply this prop or not. The component will be used as a controlled / uncontrolled component respectively.\n                    // onCodeChanged = {code => { this.setState({code})}}\n                    onCodeChanged={(code) => {\n                        console.log(\"Code\", code)\n                        setOtp(code)\n                        setOtpError('')\n                    }}\n                    code={otp}\n                    autoFocusOnLoad\n                    codeInputFieldStyle={{\n                        width: 30,\n                        height: 45,\n                        borderWidth: 0,\n                        borderBottomWidth: 1,\n                    }}\n                    codeInputHighlightStyle={{\n                        borderColor: \"#03DAC6\",\n                    }}\n                    onCodeFilled={(code => {\n                        console.log(`Code is ${code}, you are good to go!`)\n                    })}\n                    clearInputs={true}\n                />\n\n                {/* <OtpInputs\n                    handleChange={(code) => {\n                        setOtp(code)\n                        setOtpError('')\n                    }}\n\n                    numberOfInputs={6}\n                    autoFocus\n                    inputStyles={{ backgroundColor: 'white', width: 55, height: 70, borderRadius: 8, elevation: 2, margin: 1, fontSize: 20, alignItems: 'center', marginTop: 30, color: '#000' }}\n                    textAlign='center'\n                /> */}\n                {otpError?.length > 0 && (\n                    <Text style={styles.errorText}>\n                        {otpError}\n                    </Text>\n                )}\n                <TouchableOpacity onPress={() => onPressResetPassword()}>\n                    <Text style={styles.resetPassword}>{\"Resend verification code\"}</Text>\n                </TouchableOpacity>\n            </ScrollView>\n            <View style={styles.ConfirmParent}>\n                <CustomButton\n                    theme={theme}\n                    onBtnPress={() => onLogin()}\n                    buttonTitle={Strings.confirm}\n                    buttonStyle={styles.confirmBtn}\n                    buttonTitleStyle={styles.confirmText}\n                />\n            </View>\n        </View>\n    );\n\n};\n\nexport default OTPVerifyLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}