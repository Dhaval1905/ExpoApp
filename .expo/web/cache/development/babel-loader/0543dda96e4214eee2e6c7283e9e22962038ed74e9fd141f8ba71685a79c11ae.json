{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { useSelector } from 'react-redux';\nimport { Strings } from \"../../../constants/Strings\";\nimport { Colors, moderateScale, verticalScale } from \"../../../theme\";\nimport styling from \"./styles/BalancesCardStyle\";\nimport { Images } from \"../../../assets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar date = new Date();\nvar month = date.toLocaleString('default', {\n  month: 'long'\n});\nvar BalancesCard = function BalancesCard(_ref) {\n  var _Colors$theme, _dashBoardData$balanc, _dashBoardData$balanc2, _dashBoardData$balanc3, _dashBoardData$balanc4, _dashBoardData$balanc5, _dashBoardData$balanc6, _dashBoardData$money$, _dashBoardData$money, _dashBoardData$money$2, _dashBoardData$money2;\n  var _ref$currencySymbol = _ref.currencySymbol,\n    currencySymbol = _ref$currencySymbol === void 0 ? '$' : _ref$currencySymbol,\n    availableBalance = _ref.availableBalance,\n    reserves = _ref.reserves,\n    reservesHoldings = _ref.reservesHoldings,\n    pending = _ref.pending,\n    overallBalance = _ref.overallBalance,\n    monthName = _ref.monthName,\n    moneyIn = _ref.moneyIn,\n    moneyOut = _ref.moneyOut,\n    theme = _ref.theme;\n  var styles = styling(theme);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isCardOpen = _useState2[0],\n    setIsCardOpen = _useState2[1];\n  var dashBoardData = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.dashBoard;\n  });\n  return _jsxs(View, {\n    style: [styles.card, !isCardOpen && {\n      height: Platform.OS === \"web\" ? 100 : verticalScale(150)\n    }],\n    children: [_jsxs(View, {\n      style: styles.cardHeader,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(Image, {\n          source: Images.balances_Icon,\n          style: styles.iconStyle\n        }), _jsx(Text, {\n          style: styles.headerTitle,\n          children: Strings.balances\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setIsCardOpen(!isCardOpen);\n        },\n        children: _jsx(Icon, {\n          name: isCardOpen ? 'chevron-up' : 'chevron-down',\n          size: moderateScale(30),\n          color: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.black\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.divider\n    }), _jsxs(View, {\n      style: styles.balanceDetailParent,\n      children: [_jsxs(View, {\n        style: styles.balanceDetail,\n        children: [_jsx(View, {\n          style: styles.availableParent,\n          children: _jsx(Text, {\n            style: styles.availableBalance,\n            children: Strings.availableBalance\n          })\n        }), _jsx(Text, {\n          style: styles.balanceDetailText,\n          children: Strings.pending\n        })]\n      }), _jsxs(View, {\n        style: styles.balanceDetailNumbers,\n        children: [_jsx(Text, {\n          style: styles.availableBalanceNumber,\n          children: `${(_dashBoardData$balanc = dashBoardData == null ? void 0 : (_dashBoardData$balanc2 = dashBoardData.balances) == null ? void 0 : (_dashBoardData$balanc3 = _dashBoardData$balanc2.available_balance) == null ? void 0 : _dashBoardData$balanc3.text) != null ? _dashBoardData$balanc : '$0.00'}`\n        }), _jsx(Text, {\n          style: styles.balanceDetailText,\n          children: `${(_dashBoardData$balanc4 = dashBoardData == null ? void 0 : (_dashBoardData$balanc5 = dashBoardData.balances) == null ? void 0 : (_dashBoardData$balanc6 = _dashBoardData$balanc5.pending_balance) == null ? void 0 : _dashBoardData$balanc6.text) != null ? _dashBoardData$balanc4 : '$0.00'}`\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.monthTextParent,\n      children: _jsx(Text, {\n        style: styles.monthName,\n        children: monthName != null ? monthName : month\n      })\n    }), _jsx(View, {\n      style: styles.monthDetailParent,\n      children: _jsxs(View, {\n        style: styles.moneyInOutParent,\n        children: [_jsxs(View, {\n          style: [styles.moneyInParent, {\n            borderRightWidth: 0.4,\n            borderColor: \"#C0C0C0\"\n          }],\n          children: [_jsx(Text, {\n            style: styles.moneyDetailText,\n            children: Strings.moneyIn\n          }), _jsx(Text, {\n            style: styles.moneyInNumber,\n            children: `${(_dashBoardData$money$ = dashBoardData == null ? void 0 : (_dashBoardData$money = dashBoardData.money) == null ? void 0 : _dashBoardData$money.in) != null ? _dashBoardData$money$ : '$0.00'}`\n          })]\n        }), _jsxs(View, {\n          style: styles.moneyOutParent,\n          children: [_jsx(Text, {\n            style: styles.moneyDetailText,\n            children: Strings.moneyOut\n          }), _jsx(Text, {\n            style: styles.moneyOutNumber,\n            children: `${(_dashBoardData$money$2 = dashBoardData == null ? void 0 : (_dashBoardData$money2 = dashBoardData.money) == null ? void 0 : _dashBoardData$money2.out) != null ? _dashBoardData$money$2 : '$0.00'}`\n          })]\n        })]\n      })\n    })]\n  });\n};\nexport default BalancesCard;","map":{"version":3,"names":["React","useState","Text","TouchableOpacity","View","Image","Platform","Icon","useSelector","Strings","Colors","moderateScale","verticalScale","styling","Images","jsx","_jsx","jsxs","_jsxs","date","Date","month","toLocaleString","BalancesCard","_ref","_Colors$theme","_dashBoardData$balanc","_dashBoardData$balanc2","_dashBoardData$balanc3","_dashBoardData$balanc4","_dashBoardData$balanc5","_dashBoardData$balanc6","_dashBoardData$money$","_dashBoardData$money","_dashBoardData$money$2","_dashBoardData$money2","_ref$currencySymbol","currencySymbol","availableBalance","reserves","reservesHoldings","pending","overallBalance","monthName","moneyIn","moneyOut","theme","styles","_useState","_useState2","_slicedToArray","isCardOpen","setIsCardOpen","dashBoardData","state","_state$user","user","dashBoard","style","card","height","OS","children","cardHeader","flexDirection","source","balances_Icon","iconStyle","headerTitle","balances","onPress","name","size","color","black","divider","balanceDetailParent","balanceDetail","availableParent","balanceDetailText","balanceDetailNumbers","availableBalanceNumber","available_balance","text","pending_balance","monthTextParent","monthDetailParent","moneyInOutParent","moneyInParent","borderRightWidth","borderColor","moneyDetailText","moneyInNumber","money","in","moneyOutParent","moneyOutNumber","out"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/Dashboard/components/BalancesCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, TouchableOpacity, View, Image, Platform } from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { useSelector } from 'react-redux';\nimport { Strings } from '../../../constants/Strings';\nimport { Colors, moderateScale, verticalScale } from '../../../theme';\nimport styling from './styles/BalancesCardStyle';\nimport { Images } from '../../../assets';\nconst date = new Date();\nconst month = date.toLocaleString('default', { month: 'long' });\n\nconst BalancesCard = ({\n  currencySymbol = '$',\n  availableBalance,\n  reserves,\n  reservesHoldings,\n  pending,\n  overallBalance,\n  monthName,\n  moneyIn,\n  moneyOut,\n  theme,\n}) => {\n  const styles = styling(theme);\n\n  const [isCardOpen, setIsCardOpen] = useState(false);\n  const dashBoardData = useSelector(state => state?.user?.dashBoard)\n  return (\n    <View style={[styles.card, !isCardOpen && { height: Platform.OS === \"web\" ? 100 : verticalScale(150) }]}>\n      <View style={styles.cardHeader}>\n        <View style={{ flexDirection: 'row' }} >\n          <Image source={Images.balances_Icon} style={styles.iconStyle} />\n          <Text style={styles.headerTitle}>{Strings.balances}</Text>\n        </View>\n        <TouchableOpacity onPress={() => setIsCardOpen(!isCardOpen)}>\n          <Icon\n            name={isCardOpen ? 'chevron-up' : 'chevron-down'}\n            size={moderateScale(30)}\n            color={Colors[theme]?.black}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.divider} />\n      <View style={styles.balanceDetailParent}>\n        <View style={styles.balanceDetail}>\n          <View style={styles.availableParent}>\n            <Text style={styles.availableBalance}>\n              {Strings.availableBalance}\n            </Text>\n            {/* <TouchableOpacity onPress={() => { }}>\n              <Icon\n                name=\"md-information-circle-outline\"\n                size={moderateScale(28)}\n                color={Colors[theme]?.blue}\n              />\n            </TouchableOpacity> */}\n          </View>\n          <Text style={styles.balanceDetailText}>{Strings.pending}</Text>\n        </View>\n        <View style={styles.balanceDetailNumbers}>\n          <Text style={styles.availableBalanceNumber}>{`${dashBoardData?.balances?.available_balance?.text ?? '$0.00'\n            }`}</Text>\n          <Text style={styles.balanceDetailText}>{`${dashBoardData?.balances?.pending_balance?.text ?? '$0.00'\n            }`}</Text>\n        </View>\n      </View>\n      <View style={styles.monthTextParent}>\n        <Text style={styles.monthName}>{monthName ?? month}</Text>\n      </View>\n      <View style={styles.monthDetailParent}>\n        <View style={styles.moneyInOutParent}>\n          <View style={[styles.moneyInParent, { borderRightWidth: 0.4, borderColor: \"#C0C0C0\" }]}>\n            <Text style={styles.moneyDetailText}>{Strings.moneyIn}</Text>\n            <Text style={styles.moneyInNumber}>{`${dashBoardData?.money?.in ?? '$0.00'\n              }`}</Text>\n          </View>\n          <View style={styles.moneyOutParent}>\n            <Text style={styles.moneyDetailText}>{Strings.moneyOut}</Text>\n            <Text style={styles.moneyOutNumber}>{`${dashBoardData?.money?.out ?? '$0.00'\n              }`}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default BalancesCard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAExC,OAAOC,IAAI;AACX,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO;AAChB,SAASC,MAAM,EAAEC,aAAa,EAAEC,aAAa;AAC7C,OAAOC,OAAO;AACd,SAASC,MAAM;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACzC,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;AACvB,IAAMC,KAAK,GAAGF,IAAI,CAACG,cAAc,CAAC,SAAS,EAAE;EAAED,KAAK,EAAE;AAAO,CAAC,CAAC;AAE/D,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAWZ;EAAA,IAAAC,aAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,oBAAA,EAAAC,sBAAA,EAAAC,qBAAA;EAAA,IAAAC,mBAAA,GAAAZ,IAAA,CAVJa,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAG,GAAG,GAAAA,mBAAA;IACpBE,gBAAgB,GAAAd,IAAA,CAAhBc,gBAAgB;IAChBC,QAAQ,GAAAf,IAAA,CAARe,QAAQ;IACRC,gBAAgB,GAAAhB,IAAA,CAAhBgB,gBAAgB;IAChBC,OAAO,GAAAjB,IAAA,CAAPiB,OAAO;IACPC,cAAc,GAAAlB,IAAA,CAAdkB,cAAc;IACdC,SAAS,GAAAnB,IAAA,CAATmB,SAAS;IACTC,OAAO,GAAApB,IAAA,CAAPoB,OAAO;IACPC,QAAQ,GAAArB,IAAA,CAARqB,QAAQ;IACRC,KAAK,GAAAtB,IAAA,CAALsB,KAAK;EAEL,IAAMC,MAAM,GAAGlC,OAAO,CAACiC,KAAK,CAAC;EAE7B,IAAAE,SAAA,GAAoC/C,QAAQ,CAAC,KAAK,CAAC;IAAAgD,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,aAAa,GAAG7C,WAAW,CAAC,UAAA8C,KAAK;IAAA,IAAAC,WAAA;IAAA,OAAID,KAAK,qBAAAC,WAAA,GAALD,KAAK,CAAEE,IAAI,qBAAXD,WAAA,CAAaE,SAAS;EAAA,EAAC;EAClE,OACEvC,KAAA,CAACd,IAAI;IAACsD,KAAK,EAAE,CAACX,MAAM,CAACY,IAAI,EAAE,CAACR,UAAU,IAAI;MAAES,MAAM,EAAEtD,QAAQ,CAACuD,EAAE,KAAK,KAAK,GAAG,GAAG,GAAGjD,aAAa,CAAC,GAAG;IAAE,CAAC,CAAE;IAAAkD,QAAA,GACtG5C,KAAA,CAACd,IAAI;MAACsD,KAAK,EAAEX,MAAM,CAACgB,UAAW;MAAAD,QAAA,GAC7B5C,KAAA,CAACd,IAAI;QAACsD,KAAK,EAAE;UAAEM,aAAa,EAAE;QAAM,CAAE;QAAAF,QAAA,GACpC9C,IAAA,CAACX,KAAK;UAAC4D,MAAM,EAAEnD,MAAM,CAACoD,aAAc;UAACR,KAAK,EAAEX,MAAM,CAACoB;QAAU,CAAE,CAAC,EAChEnD,IAAA,CAACd,IAAI;UAACwD,KAAK,EAAEX,MAAM,CAACqB,WAAY;UAAAN,QAAA,EAAErD,OAAO,CAAC4D;QAAQ,CAAO,CAAC;MAAA,CACtD,CAAC,EACPrD,IAAA,CAACb,gBAAgB;QAACmE,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMlB,aAAa,CAAC,CAACD,UAAU,CAAC;QAAA,CAAC;QAAAW,QAAA,EAC1D9C,IAAA,CAACT,IAAI;UACHgE,IAAI,EAAEpB,UAAU,GAAG,YAAY,GAAG,cAAe;UACjDqB,IAAI,EAAE7D,aAAa,CAAC,EAAE,CAAE;UACxB8D,KAAK,GAAAhD,aAAA,GAAEf,MAAM,CAACoC,KAAK,CAAC,qBAAbrB,aAAA,CAAeiD;QAAM,CAC7B;MAAC,CACc,CAAC;IAAA,CACf,CAAC,EACP1D,IAAA,CAACZ,IAAI;MAACsD,KAAK,EAAEX,MAAM,CAAC4B;IAAQ,CAAE,CAAC,EAC/BzD,KAAA,CAACd,IAAI;MAACsD,KAAK,EAAEX,MAAM,CAAC6B,mBAAoB;MAAAd,QAAA,GACtC5C,KAAA,CAACd,IAAI;QAACsD,KAAK,EAAEX,MAAM,CAAC8B,aAAc;QAAAf,QAAA,GAChC9C,IAAA,CAACZ,IAAI;UAACsD,KAAK,EAAEX,MAAM,CAAC+B,eAAgB;UAAAhB,QAAA,EAClC9C,IAAA,CAACd,IAAI;YAACwD,KAAK,EAAEX,MAAM,CAACT,gBAAiB;YAAAwB,QAAA,EAClCrD,OAAO,CAAC6B;UAAgB,CACrB;QAAC,CAQH,CAAC,EACPtB,IAAA,CAACd,IAAI;UAACwD,KAAK,EAAEX,MAAM,CAACgC,iBAAkB;UAAAjB,QAAA,EAAErD,OAAO,CAACgC;QAAO,CAAO,CAAC;MAAA,CAC3D,CAAC,EACPvB,KAAA,CAACd,IAAI;QAACsD,KAAK,EAAEX,MAAM,CAACiC,oBAAqB;QAAAlB,QAAA,GACvC9C,IAAA,CAACd,IAAI;UAACwD,KAAK,EAAEX,MAAM,CAACkC,sBAAuB;UAAAnB,QAAA,EAAG,IAAApC,qBAAA,GAAE2B,aAAa,qBAAA1B,sBAAA,GAAb0B,aAAa,CAAEgB,QAAQ,sBAAAzC,sBAAA,GAAvBD,sBAAA,CAAyBuD,iBAAiB,qBAA1CtD,sBAAA,CAA4CuD,IAAI,YAAAzD,qBAAA,GAAI,OACjG;QAAC,CAAO,CAAC,EACZV,IAAA,CAACd,IAAI;UAACwD,KAAK,EAAEX,MAAM,CAACgC,iBAAkB;UAAAjB,QAAA,EAAG,IAAAjC,sBAAA,GAAEwB,aAAa,qBAAAvB,sBAAA,GAAbuB,aAAa,CAAEgB,QAAQ,sBAAAtC,sBAAA,GAAvBD,sBAAA,CAAyBsD,eAAe,qBAAxCrD,sBAAA,CAA0CoD,IAAI,YAAAtD,sBAAA,GAAI,OAC1F;QAAC,CAAO,CAAC;MAAA,CACR,CAAC;IAAA,CACH,CAAC,EACPb,IAAA,CAACZ,IAAI;MAACsD,KAAK,EAAEX,MAAM,CAACsC,eAAgB;MAAAvB,QAAA,EAClC9C,IAAA,CAACd,IAAI;QAACwD,KAAK,EAAEX,MAAM,CAACJ,SAAU;QAAAmB,QAAA,EAAEnB,SAAS,WAATA,SAAS,GAAItB;MAAK,CAAO;IAAC,CACtD,CAAC,EACPL,IAAA,CAACZ,IAAI;MAACsD,KAAK,EAAEX,MAAM,CAACuC,iBAAkB;MAAAxB,QAAA,EACpC5C,KAAA,CAACd,IAAI;QAACsD,KAAK,EAAEX,MAAM,CAACwC,gBAAiB;QAAAzB,QAAA,GACnC5C,KAAA,CAACd,IAAI;UAACsD,KAAK,EAAE,CAACX,MAAM,CAACyC,aAAa,EAAE;YAAEC,gBAAgB,EAAE,GAAG;YAAEC,WAAW,EAAE;UAAU,CAAC,CAAE;UAAA5B,QAAA,GACrF9C,IAAA,CAACd,IAAI;YAACwD,KAAK,EAAEX,MAAM,CAAC4C,eAAgB;YAAA7B,QAAA,EAAErD,OAAO,CAACmC;UAAO,CAAO,CAAC,EAC7D5B,IAAA,CAACd,IAAI;YAACwD,KAAK,EAAEX,MAAM,CAAC6C,aAAc;YAAA9B,QAAA,EAAG,IAAA9B,qBAAA,GAAEqB,aAAa,qBAAApB,oBAAA,GAAboB,aAAa,CAAEwC,KAAK,qBAApB5D,oBAAA,CAAsB6D,EAAE,YAAA9D,qBAAA,GAAI,OAChE;UAAC,CAAO,CAAC;QAAA,CACR,CAAC,EACPd,KAAA,CAACd,IAAI;UAACsD,KAAK,EAAEX,MAAM,CAACgD,cAAe;UAAAjC,QAAA,GACjC9C,IAAA,CAACd,IAAI;YAACwD,KAAK,EAAEX,MAAM,CAAC4C,eAAgB;YAAA7B,QAAA,EAAErD,OAAO,CAACoC;UAAQ,CAAO,CAAC,EAC9D7B,IAAA,CAACd,IAAI;YAACwD,KAAK,EAAEX,MAAM,CAACiD,cAAe;YAAAlC,QAAA,EAAG,IAAA5B,sBAAA,GAAEmB,aAAa,qBAAAlB,qBAAA,GAAbkB,aAAa,CAAEwC,KAAK,qBAApB1D,qBAAA,CAAsB8D,GAAG,YAAA/D,sBAAA,GAAI,OAClE;UAAC,CAAO,CAAC;QAAA,CACR,CAAC;MAAA,CACH;IAAC,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAeX,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}