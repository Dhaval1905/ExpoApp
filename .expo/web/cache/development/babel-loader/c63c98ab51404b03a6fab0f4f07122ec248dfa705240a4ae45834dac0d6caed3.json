{"ast":null,"code":"import { useRoute } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { CustomHeader } from \"../../components\";\nimport { navigationStrings, Strings } from \"../../constants\";\nimport { Colors, horizontalScale, moderateScale } from \"../../theme\";\nimport styling from \"./SupportStyle\";\nimport { getCardById, getProductCard } from \"../../redux/actions/card\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showLoader } from \"../../redux/actions/user\";\nimport { Fonts } from \"../../assets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Support = function Support(_ref) {\n  var _route$params, _Colors$theme, _Colors$theme2, _Colors$theme3, _Colors$theme4;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var userDetails = useSelector(function (state) {\n    var _state$user;\n    return state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user.login;\n  });\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: 'Support',\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.card,\n        onPress: function onPress() {\n          return navigation.navigate(navigationStrings == null ? void 0 : navigationStrings.SUPPORTTICKET);\n        },\n        children: [_jsxs(View, {\n          style: styles.innerView,\n          children: [_jsx(FontAwesome, {\n            name: 'user-o',\n            color: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.black,\n            size: moderateScale(20)\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.cardTitle,\n              children: `Support Tickets`\n            })\n          })]\n        }), _jsx(FontAwesome, {\n          name: 'angle-right',\n          color: (_Colors$theme2 = Colors[theme]) == null ? void 0 : _Colors$theme2.black,\n          size: moderateScale(24)\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.card,\n        onPress: function onPress() {\n          return navigation.navigate(navigationStrings == null ? void 0 : navigationStrings.HELPSUPPORT);\n        },\n        children: [_jsxs(View, {\n          style: styles.innerView,\n          children: [_jsx(FontAwesome, {\n            name: 'question-circle-o',\n            color: (_Colors$theme3 = Colors[theme]) == null ? void 0 : _Colors$theme3.black,\n            size: moderateScale(20)\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.cardTitle,\n              children: `Help Center`\n            })\n          })]\n        }), _jsx(FontAwesome, {\n          name: 'angle-right',\n          color: (_Colors$theme4 = Colors[theme]) == null ? void 0 : _Colors$theme4.black,\n          size: moderateScale(24)\n        })]\n      })]\n    })]\n  });\n};\nexport default Support;","map":{"version":3,"names":["useRoute","React","useEffect","useState","Text","TouchableOpacity","View","FlatList","FontAwesome","CustomHeader","navigationStrings","Strings","Colors","horizontalScale","moderateScale","styling","getCardById","getProductCard","useDispatch","useSelector","showLoader","Fonts","jsx","_jsx","jsxs","_jsxs","Support","_ref","_route$params","_Colors$theme","_Colors$theme2","_Colors$theme3","_Colors$theme4","navigation","route","dispatch","theme","params","styles","userDetails","state","_state$user","user","login","style","screen","children","headerTitle","onPressBack","goBack","container","card","onPress","navigate","SUPPORTTICKET","innerView","name","color","black","size","cardTitle","HELPSUPPORT"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/Support/Support.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport {Text, TouchableOpacity, View,FlatList} from 'react-native';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport {CustomHeader} from '../../components';\nimport {navigationStrings, Strings} from '../../constants';\nimport {Colors, horizontalScale, moderateScale} from '../../theme';\nimport styling from './SupportStyle';\nimport { getCardById, getProductCard } from '../../redux/actions/card';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showLoader } from '../../redux/actions/user';\nimport { Fonts } from '../../assets';\n\nconst Support = ({navigation}) => {\n  const route = useRoute();\n  const dispatch = useDispatch();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n  const userDetails = useSelector(state => state?.user?.login)\n\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={'Support'}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.container}>\n     \n        <TouchableOpacity\n          style={styles.card}\n          onPress={() => navigation.navigate(navigationStrings?.SUPPORTTICKET)}>\n          <View style={styles.innerView}>\n            <FontAwesome\n              name={'user-o'}\n              color={Colors[theme]?.black}\n              size={moderateScale(20)}\n            />\n            <View>\n            <Text style={styles.cardTitle}>{`Support Tickets`}</Text>\n            </View>\n          </View>\n          <FontAwesome\n            name={'angle-right'}\n            color={Colors[theme]?.black}\n            size={moderateScale(24)}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.card}\n          onPress={() => navigation.navigate(navigationStrings?.HELPSUPPORT)}>\n          <View style={styles.innerView}>\n            <FontAwesome\n              name={'question-circle-o'}\n              color={Colors[theme]?.black}\n              size={moderateScale(20)}\n            />\n            <View>\n            <Text style={styles.cardTitle}>{`Help Center`}</Text>\n            </View>\n          </View>\n          <FontAwesome\n            name={'angle-right'}\n            color={Colors[theme]?.black}\n            size={moderateScale(24)}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default Support;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}