{"ast":null,"code":"import { useRoute } from '@react-navigation/native';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { CustomButton, CustomHeader } from \"../../components\";\nimport { navigationStrings, Strings } from \"../../constants\";\nimport { Colors, moderateScale } from \"../../theme\";\nimport styling from \"./TravelNoticeStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TravelNoticeScreen = function TravelNoticeScreen(_ref) {\n  var _route$params, _Colors$theme;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(FontAwesome, {\n        name: 'map-o',\n        color: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.black,\n        size: moderateScale(72)\n      }), _jsx(Text, {\n        style: styles.changeCardPin,\n        children: Strings == null ? void 0 : Strings.useRethinkCardWorld\n      }), _jsx(Text, {\n        style: styles.notes,\n        children: Strings == null ? void 0 : Strings.travelNoticeNOne\n      }), _jsx(Text, {\n        style: styles.notes,\n        children: Strings == null ? void 0 : Strings.travelNoticeNTwo\n      }), _jsx(View, {\n        style: styles.buttonParent,\n        children: _jsx(CustomButton, {\n          theme: theme,\n          buttonTitle: Strings.createTravelNotice,\n          buttonStyle: styles.buttonStyle,\n          onBtnPress: function onBtnPress() {\n            return navigation.navigate(navigationStrings.MAKETRAVELNOTICE);\n          }\n        })\n      })]\n    })]\n  });\n};\nexport default TravelNoticeScreen;","map":{"version":3,"names":["useRoute","React","Text","View","FontAwesome","CustomButton","CustomHeader","navigationStrings","Strings","Colors","moderateScale","styling","jsx","_jsx","jsxs","_jsxs","TravelNoticeScreen","_ref","_route$params","_Colors$theme","navigation","route","theme","params","styles","style","screen","children","onPressBack","goBack","container","name","color","black","size","changeCardPin","useRethinkCardWorld","notes","travelNoticeNOne","travelNoticeNTwo","buttonParent","buttonTitle","createTravelNotice","buttonStyle","onBtnPress","navigate","MAKETRAVELNOTICE"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/TravelNotice/TravelNoticeScreen.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport React from 'react';\nimport {Text, View} from 'react-native';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport {CustomButton, CustomHeader} from '../../components';\nimport {navigationStrings, Strings} from '../../constants';\nimport {Colors, moderateScale} from '../../theme';\nimport styling from './TravelNoticeStyle';\n\nconst TravelNoticeScreen = ({navigation}) => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader theme={theme} onPressBack={() => navigation.goBack()} />\n      <View style={styles.container}>\n        <FontAwesome\n          name={'map-o'}\n          color={Colors[theme]?.black}\n          size={moderateScale(72)}\n        />\n        <Text style={styles.changeCardPin}>{Strings?.useRethinkCardWorld}</Text>\n        <Text style={styles.notes}>{Strings?.travelNoticeNOne}</Text>\n        <Text style={styles.notes}>{Strings?.travelNoticeNTwo}</Text>\n        <View style={styles.buttonParent}>\n          <CustomButton\n            theme={theme}\n            buttonTitle={Strings.createTravelNotice}\n            buttonStyle={styles.buttonStyle}\n            onBtnPress={() =>\n              navigation.navigate(navigationStrings.MAKETRAVELNOTICE)\n            }\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default TravelNoticeScreen;\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,WAAW;AAClB,SAAQC,YAAY,EAAEC,YAAY;AAClC,SAAQC,iBAAiB,EAAEC,OAAO;AAClC,SAAQC,MAAM,EAAEC,aAAa;AAC7B,OAAOC,OAAO;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAqB;EAAA,IAAAC,aAAA,EAAAC,aAAA;EAAA,IAAhBC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EACrC,IAAMC,KAAK,GAAGrB,QAAQ,CAAC,CAAC;EACxB,IAAMsB,KAAK,GAAGD,KAAK,qBAAAH,aAAA,GAALG,KAAK,CAAEE,MAAM,qBAAbL,aAAA,CAAeI,KAAK;EAClC,IAAME,MAAM,GAAGb,OAAO,CAACW,KAAK,CAAC;EAE7B,OACEP,KAAA,CAACZ,IAAI;IAACsB,KAAK,EAAED,MAAM,CAACE,MAAO;IAAAC,QAAA,GACzBd,IAAA,CAACP,YAAY;MAACgB,KAAK,EAAEA,KAAM;MAACM,WAAW,EAAE,SAAAA,YAAA;QAAA,OAAMR,UAAU,CAACS,MAAM,CAAC,CAAC;MAAA;IAAC,CAAE,CAAC,EACtEd,KAAA,CAACZ,IAAI;MAACsB,KAAK,EAAED,MAAM,CAACM,SAAU;MAAAH,QAAA,GAC5Bd,IAAA,CAACT,WAAW;QACV2B,IAAI,EAAE,OAAQ;QACdC,KAAK,GAAAb,aAAA,GAAEV,MAAM,CAACa,KAAK,CAAC,qBAAbH,aAAA,CAAec,KAAM;QAC5BC,IAAI,EAAExB,aAAa,CAAC,EAAE;MAAE,CACzB,CAAC,EACFG,IAAA,CAACX,IAAI;QAACuB,KAAK,EAAED,MAAM,CAACW,aAAc;QAAAR,QAAA,EAAEnB,OAAO,oBAAPA,OAAO,CAAE4B;MAAmB,CAAO,CAAC,EACxEvB,IAAA,CAACX,IAAI;QAACuB,KAAK,EAAED,MAAM,CAACa,KAAM;QAAAV,QAAA,EAAEnB,OAAO,oBAAPA,OAAO,CAAE8B;MAAgB,CAAO,CAAC,EAC7DzB,IAAA,CAACX,IAAI;QAACuB,KAAK,EAAED,MAAM,CAACa,KAAM;QAAAV,QAAA,EAAEnB,OAAO,oBAAPA,OAAO,CAAE+B;MAAgB,CAAO,CAAC,EAC7D1B,IAAA,CAACV,IAAI;QAACsB,KAAK,EAAED,MAAM,CAACgB,YAAa;QAAAb,QAAA,EAC/Bd,IAAA,CAACR,YAAY;UACXiB,KAAK,EAAEA,KAAM;UACbmB,WAAW,EAAEjC,OAAO,CAACkC,kBAAmB;UACxCC,WAAW,EAAEnB,MAAM,CAACmB,WAAY;UAChCC,UAAU,EAAE,SAAAA,WAAA;YAAA,OACVxB,UAAU,CAACyB,QAAQ,CAACtC,iBAAiB,CAACuC,gBAAgB,CAAC;UAAA;QACxD,CACF;MAAC,CACE,CAAC;IAAA,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAe9B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}