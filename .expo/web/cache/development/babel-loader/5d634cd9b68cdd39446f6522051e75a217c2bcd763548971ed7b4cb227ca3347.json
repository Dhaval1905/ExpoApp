{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { State, BaseButton } from \"../GestureHandler\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\nvar PublicPropTypes = {\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number\n};\nvar InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func\n};\nvar GenericTouchable = function (_Component) {\n  _inherits(GenericTouchable, _Component);\n  var _super = _createSuper(GenericTouchable);\n  function GenericTouchable() {\n    var _this;\n    _classCallCheck(this, GenericTouchable);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.longPressDetected = false;\n    _this.pointerInside = true;\n    _this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n    _this.handlePressIn = function () {\n      if (_this.props.delayPressIn) {\n        _this.pressInTimeout = setTimeout(function () {\n          _this.moveToState(TOUCHABLE_STATE.BEGAN);\n          _this.pressInTimeout = null;\n        }, _this.props.delayPressIn);\n      } else {\n        _this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      if (_this.props.onLongPress) {\n        var time = (_this.props.delayPressIn || 0) + (_this.props.delayLongPress || 0);\n        _this.longPressTimeout = setTimeout(_this.onLongPressDetected, time);\n      }\n    };\n    _this.handleMoveOutside = function () {\n      if (_this.props.delayPressOut) {\n        _this.pressOutTimeout = _this.pressOutTimeout || setTimeout(function () {\n          _this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          _this.pressOutTimeout = null;\n        }, _this.props.delayPressOut);\n      } else {\n        _this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    };\n    _this.handleGoToUndetermined = function () {\n      clearTimeout(_this.pressOutTimeout);\n      if (_this.props.delayPressOut) {\n        _this.pressOutTimeout = setTimeout(function () {\n          if (_this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            _this.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n          _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n          _this.pressOutTimeout = null;\n        }, _this.props.delayPressOut);\n      } else {\n        if (_this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          _this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    };\n    _this.moveToState = function (newState) {\n      if (newState === _this.STATE) {\n        return;\n      }\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        _this.props.onPressIn && _this.props.onPressIn();\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        _this.props.onPressOut && _this.props.onPressOut();\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.reset();\n        if (_this.STATE === TOUCHABLE_STATE.BEGAN) {\n          _this.props.onPressOut && _this.props.onPressOut();\n        }\n      }\n      _this.props.onStateChange && _this.props.onStateChange(_this.STATE, newState);\n      _this.STATE = newState;\n    };\n    _this.onGestureEvent = function (_ref) {\n      var pointerInside = _ref.nativeEvent.pointerInside;\n      if (_this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          _this.onMoveIn();\n        } else {\n          _this.onMoveOut();\n        }\n      }\n      _this.pointerInside = pointerInside;\n    };\n    _this.onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var state = nativeEvent.state;\n      if (state === State.CANCELLED || state === State.FAILED) {\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (Platform.OS === 'ios' ? State.ACTIVE : State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.handlePressIn();\n      } else if (state === State.END) {\n        var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;\n        _this.handleGoToUndetermined();\n        if (shouldCallOnPress) {\n          _this.props.onPress && _this.props.onPress();\n        }\n      }\n    };\n    _this.onLongPressDetected = function () {\n      _this.longPressDetected = true;\n      _this.props.onLongPress();\n    };\n    _this.onMoveIn = function () {\n      if (_this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        _this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    };\n    _this.onMoveOut = function () {\n      clearTimeout(_this.longPressTimeout);\n      _this.longPressTimeout = null;\n      if (_this.STATE === TOUCHABLE_STATE.BEGAN) {\n        _this.handleMoveOutside();\n      }\n    };\n    return _this;\n  }\n  _createClass(GenericTouchable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.longPressDetected = false;\n      this.pointerInside = true;\n      clearTimeout(this.pressInTimeout);\n      clearTimeout(this.pressOutTimeout);\n      clearTimeout(this.longPressTimeout);\n      this.pressOutTimeout = null;\n      this.longPressTimeout = null;\n      this.pressInTimeout = null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var coreProps = {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityComponentType: this.props.accessibilityComponentType,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityStates: this.props.accessibilityStates,\n        accessibilityTraits: this.props.accessibilityTraits,\n        nativeID: this.props.nativeID,\n        testID: this.props.testID,\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop\n      };\n      return _jsx(BaseButton, _objectSpread(_objectSpread({\n        onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,\n        onGestureEvent: this.onGestureEvent,\n        hitSlop: this.props.hitSlop\n      }, this.props.extraButtonProps), {}, {\n        children: _jsx(Animated.View, _objectSpread(_objectSpread({}, coreProps), {}, {\n          style: this.props.style,\n          children: this.props.children\n        }))\n      }));\n    }\n  }]);\n  return GenericTouchable;\n}(Component);\nGenericTouchable.publicPropTypes = PublicPropTypes;\nGenericTouchable.internalPropTypes = InternalPropTypes;\nGenericTouchable.propTypes = _objectSpread(_objectSpread({}, InternalPropTypes), PublicPropTypes);\nGenericTouchable.defaultProps = {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent'\n  }\n};\nexport { GenericTouchable as default };","map":{"version":3,"names":["React","Component","Animated","Platform","State","BaseButton","PropTypes","jsx","_jsx","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","longPressDetected","pointerInside","STATE","handlePressIn","props","pressInTimeout","setTimeout","moveToState","time","longPressTimeout","onLongPressDetected","handleMoveOutside","pressOutTimeout","handleGoToUndetermined","clearTimeout","newState","reset","onGestureEvent","_ref","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","_ref2","state","CANCELLED","FAILED","OS","ACTIVE","END","shouldCallOnPress","_createClass","key","value","componentDidMount","componentWillUnmount","render","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","_objectSpread","children","View","style","publicPropTypes","internalPropTypes","propTypes","defaultProps","rippleColor","default"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/kmagiera/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn = () => {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  };\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside = () => {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  };\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined = () => {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  };\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState = newState => {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  };\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS === 'ios' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn = () => {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttles with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  };\n\n  onMoveOut = () => {\n    // long press shouldn't be longer detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  };\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        onHandlerStateChange={this.props.disabled ? null : this.onHandlerStateChange}\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}