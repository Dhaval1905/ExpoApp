{"ast":null,"code":"import React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { Colors, moderateScale } from \"../../theme\";\nimport styling from \"./ModalButtonStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ModalButton = function ModalButton(_ref) {\n  var _Colors$theme, _Colors$theme2;\n  var buttonLable = _ref.buttonLable,\n    buttonValue = _ref.buttonValue,\n    onPressButton = _ref.onPressButton,\n    height = _ref.height,\n    width = _ref.width,\n    marginTop = _ref.marginTop,\n    marginBottom = _ref.marginBottom,\n    marginRight = _ref.marginRight,\n    marginLeft = _ref.marginLeft,\n    theme = _ref.theme,\n    showArrow = _ref.showArrow;\n  var styles = styling(theme);\n  return _jsxs(TouchableOpacity, {\n    onPress: onPressButton,\n    style: [{\n      height: height,\n      width: width,\n      marginTop: marginTop,\n      marginBottom: marginBottom,\n      marginRight: marginRight,\n      marginLeft: marginLeft\n    }, {\n      flexDirection: 'row',\n      zIndex: 1\n    }],\n    children: [_jsx(TextInput, {\n      disabled: true,\n      mode: 'outlined',\n      theme: {\n        roundness: Platform.OS === \"web\" ? 20 : 45\n      },\n      label: buttonLable,\n      value: buttonValue,\n      activeOutlineColor: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.black,\n      style: [styles.buttonBackground, {\n        height: height,\n        width: width\n      }]\n    }), showArrow && _jsx(View, {\n      style: styles.dropdownParent,\n      children: _jsx(Icon, {\n        name: 'chevron-down',\n        size: moderateScale(24),\n        color: (_Colors$theme2 = Colors[theme]) == null ? void 0 : _Colors$theme2.grey400\n      })\n    })]\n  });\n};\nexport default ModalButton;","map":{"version":3,"names":["React","Platform","TouchableOpacity","View","TextInput","Icon","Colors","moderateScale","styling","jsx","_jsx","jsxs","_jsxs","ModalButton","_ref","_Colors$theme","_Colors$theme2","buttonLable","buttonValue","onPressButton","height","width","marginTop","marginBottom","marginRight","marginLeft","theme","showArrow","styles","onPress","style","flexDirection","zIndex","children","disabled","mode","roundness","OS","label","value","activeOutlineColor","black","buttonBackground","dropdownParent","name","size","color","grey400"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/components/ModalButton/ModalButton.js"],"sourcesContent":["import React from 'react';\nimport { Platform, TouchableOpacity, View } from 'react-native';\nimport { TextInput } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { Colors, moderateScale } from '../../theme';\nimport styling from './ModalButtonStyle';\n\nconst ModalButton = ({\n  buttonLable,\n  buttonValue,\n  onPressButton,\n  height,\n  width,\n  marginTop,\n  marginBottom,\n  marginRight,\n  marginLeft,\n  theme,\n  showArrow\n}) => {\n  const styles = styling(theme);\n\n  return (\n    <TouchableOpacity\n      onPress={onPressButton}\n      style={[{ height, width, marginTop, marginBottom, marginRight, marginLeft }, { flexDirection: 'row', zIndex: 1 }]}>\n      <TextInput\n        disabled\n        mode={'outlined'}\n        theme={{ roundness: Platform.OS === \"web\" ? 20 : 45 }}\n        label={buttonLable}\n        value={buttonValue}\n        activeOutlineColor={Colors[theme]?.black}\n        style={[styles.buttonBackground, { height, width }]}\n      />\n      {showArrow && <View style={styles.dropdownParent}>\n        <Icon\n          name={'chevron-down'}\n          size={moderateScale(24)}\n          color={Colors[theme]?.grey400}\n        />\n      </View>}\n    </TouchableOpacity>\n  );\n};\n\nexport default ModalButton;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,IAAI;AACX,SAASC,MAAM,EAAEC,aAAa;AAC9B,OAAOC,OAAO;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAYX;EAAA,IAAAC,aAAA,EAAAC,cAAA;EAAA,IAXJC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IACXC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IACXC,aAAa,GAAAL,IAAA,CAAbK,aAAa;IACbC,MAAM,GAAAN,IAAA,CAANM,MAAM;IACNC,KAAK,GAAAP,IAAA,CAALO,KAAK;IACLC,SAAS,GAAAR,IAAA,CAATQ,SAAS;IACTC,YAAY,GAAAT,IAAA,CAAZS,YAAY;IACZC,WAAW,GAAAV,IAAA,CAAXU,WAAW;IACXC,UAAU,GAAAX,IAAA,CAAVW,UAAU;IACVC,KAAK,GAAAZ,IAAA,CAALY,KAAK;IACLC,SAAS,GAAAb,IAAA,CAATa,SAAS;EAET,IAAMC,MAAM,GAAGpB,OAAO,CAACkB,KAAK,CAAC;EAE7B,OACEd,KAAA,CAACV,gBAAgB;IACf2B,OAAO,EAAEV,aAAc;IACvBW,KAAK,EAAE,CAAC;MAAEV,MAAM,EAANA,MAAM;MAAEC,KAAK,EAALA,KAAK;MAAEC,SAAS,EAATA,SAAS;MAAEC,YAAY,EAAZA,YAAY;MAAEC,WAAW,EAAXA,WAAW;MAAEC,UAAU,EAAVA;IAAW,CAAC,EAAE;MAAEM,aAAa,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAE;IAAAC,QAAA,GAClHvB,IAAA,CAACN,SAAS;MACR8B,QAAQ;MACRC,IAAI,EAAE,UAAW;MACjBT,KAAK,EAAE;QAAEU,SAAS,EAAEnC,QAAQ,CAACoC,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG;MAAG,CAAE;MACtDC,KAAK,EAAErB,WAAY;MACnBsB,KAAK,EAAErB,WAAY;MACnBsB,kBAAkB,GAAAzB,aAAA,GAAET,MAAM,CAACoB,KAAK,CAAC,qBAAbX,aAAA,CAAe0B,KAAM;MACzCX,KAAK,EAAE,CAACF,MAAM,CAACc,gBAAgB,EAAE;QAAEtB,MAAM,EAANA,MAAM;QAAEC,KAAK,EAALA;MAAM,CAAC;IAAE,CACrD,CAAC,EACDM,SAAS,IAAIjB,IAAA,CAACP,IAAI;MAAC2B,KAAK,EAAEF,MAAM,CAACe,cAAe;MAAAV,QAAA,EAC/CvB,IAAA,CAACL,IAAI;QACHuC,IAAI,EAAE,cAAe;QACrBC,IAAI,EAAEtC,aAAa,CAAC,EAAE,CAAE;QACxBuC,KAAK,GAAA9B,cAAA,GAAEV,MAAM,CAACoB,KAAK,CAAC,qBAAbV,cAAA,CAAe+B;MAAQ,CAC/B;IAAC,CACE,CAAC;EAAA,CACS,CAAC;AAEvB,CAAC;AAED,eAAelC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}