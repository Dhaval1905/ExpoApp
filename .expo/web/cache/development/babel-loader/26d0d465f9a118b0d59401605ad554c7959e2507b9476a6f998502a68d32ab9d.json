{"ast":null,"code":"import { useRoute } from '@react-navigation/native';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Icons } from \"../../assets\";\nimport { CustomButton, CustomHeader } from \"../../components\";\nimport { navigationStrings, Strings } from \"../../constants\";\nimport { Colors, moderateScale } from \"../../theme\";\nimport styling from \"./VerifyIdentityStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VerifyIdentityScreen = function VerifyIdentityScreen(_ref) {\n  var _route$params, _Strings$verifyYourId, _Colors$theme;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: Strings.verifyIdentity,\n      onPressBack: function onPressBack() {\n        navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        source: Icons.takePhoto,\n        style: styles.userLogo\n      }), _jsx(Text, {\n        style: styles.title,\n        children: Strings.addYourId\n      }), _jsx(Text, {\n        style: styles.subTitle,\n        children: Strings.verifyIdentitySubtitle\n      }), _jsxs(View, {\n        style: styles.yourIdentity,\n        children: [_jsx(Text, {\n          style: styles.verifyYourIdentity,\n          children: (_Strings$verifyYourId = Strings.verifyYourIdentity) == null ? void 0 : _Strings$verifyYourId.toUpperCase()\n        }), _jsx(MaterialCommunityIcons, {\n          name: 'information-outline',\n          size: moderateScale(24),\n          color: (_Colors$theme = Colors[theme]) == null ? void 0 : _Colors$theme.blue\n        })]\n      }), _jsx(Text, {\n        style: styles.subInfo,\n        children: `1. ${Strings.takePhotoId}`\n      }), _jsx(Text, {\n        style: styles.subInfo,\n        children: `2. ${Strings.takephotoYourself}`\n      })]\n    }), _jsx(View, {\n      style: styles.verifyIdentityParent,\n      children: _jsx(CustomButton, {\n        theme: theme,\n        buttonTitle: Strings.verifyIdentity,\n        buttonStyle: styles.verifyIdentityButton,\n        buttonTitleStyle: styles.verifyIdentity,\n        onBtnPress: function onBtnPress() {\n          return navigation.navigate(navigationStrings.SELECTIDADD);\n        }\n      })\n    })]\n  });\n};\nexport default VerifyIdentityScreen;","map":{"version":3,"names":["useRoute","React","Image","Text","View","MaterialCommunityIcons","Icons","CustomButton","CustomHeader","navigationStrings","Strings","Colors","moderateScale","styling","jsx","_jsx","jsxs","_jsxs","VerifyIdentityScreen","_ref","_route$params","_Strings$verifyYourId","_Colors$theme","navigation","route","theme","params","styles","style","screen","children","headerTitle","verifyIdentity","onPressBack","goBack","container","source","takePhoto","userLogo","title","addYourId","subTitle","verifyIdentitySubtitle","yourIdentity","verifyYourIdentity","toUpperCase","name","size","color","blue","subInfo","takePhotoId","takephotoYourself","verifyIdentityParent","buttonTitle","buttonStyle","verifyIdentityButton","buttonTitleStyle","onBtnPress","navigate","SELECTIDADD"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/VerifyIdentity/VerifyIdentityScreen.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport React from 'react';\nimport {Image, Text, View} from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {Icons} from '../../assets';\nimport {CustomButton, CustomHeader} from '../../components';\nimport {navigationStrings, Strings} from '../../constants';\nimport {Colors, moderateScale} from '../../theme';\nimport styling from './VerifyIdentityStyle';\n\nconst VerifyIdentityScreen = ({navigation}) => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={Strings.verifyIdentity}\n        onPressBack={() => {\n          navigation.goBack();\n        }}\n      />\n      <View style={styles.container}>\n        <Image source={Icons.takePhoto} style={styles.userLogo} />\n        <Text style={styles.title}>{Strings.addYourId}</Text>\n        <Text style={styles.subTitle}>{Strings.verifyIdentitySubtitle}</Text>\n        <View style={styles.yourIdentity}>\n          <Text style={styles.verifyYourIdentity}>\n            {Strings.verifyYourIdentity?.toUpperCase()}\n          </Text>\n          <MaterialCommunityIcons\n            name={'information-outline'}\n            size={moderateScale(24)}\n            color={Colors[theme]?.blue}\n          />\n        </View>\n        <Text style={styles.subInfo}>{`1. ${Strings.takePhotoId}`}</Text>\n        <Text style={styles.subInfo}>{`2. ${Strings.takephotoYourself}`}</Text>\n      </View>\n      <View style={styles.verifyIdentityParent}>\n        <CustomButton\n          theme={theme}\n          buttonTitle={Strings.verifyIdentity}\n          buttonStyle={styles.verifyIdentityButton}\n          buttonTitleStyle={styles.verifyIdentity}\n          onBtnPress={() => navigation.navigate(navigationStrings.SELECTIDADD)}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default VerifyIdentityScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}