{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRoute } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { CustomButton, CustomHeader } from \"../../components\";\nimport { navigationStrings } from \"../../constants\";\nimport { Strings } from \"../../constants/Strings\";\nimport { Colors, horizontalScale, moderateScale } from \"../../theme\";\nimport styling from \"./DepositCheckAmountStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DepositCheckAmountScreen = function DepositCheckAmountScreen(_ref) {\n  var _route$params, _Strings$amount;\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var theme = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.theme;\n  var styles = styling(theme);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    buttonDisable = _useState2[0],\n    setButtonDisable = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    amount = _useState4[0],\n    setAmount = _useState4[1];\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(CustomHeader, {\n      theme: theme,\n      headerTitle: Strings.depositCheck,\n      onPressBack: function onPressBack() {\n        return navigation.goBack();\n      }\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.amount,\n        children: (_Strings$amount = Strings.amount) == null ? void 0 : _Strings$amount.toUpperCase()\n      }), _jsxs(View, {\n        style: styles.textInputParent,\n        children: [_jsx(Text, {\n          style: styles.textInput,\n          children: \"$\"\n        }), _jsx(TextInput, {\n          style: [styles.textInput, {\n            width: horizontalScale(290)\n          }],\n          keyboardType: 'decimal-pad',\n          onChangeText: function onChangeText(val) {\n            setAmount(val);\n            if ((val == null ? void 0 : val.length) > 0) {\n              setButtonDisable(false);\n            } else {\n              setButtonDisable(true);\n            }\n          }\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.continueParent,\n      children: [_jsx(Text, {\n        style: styles.depositCheckAmtNote,\n        children: Strings.depositCheckAmtNote\n      }), _jsx(CustomButton, {\n        theme: theme,\n        buttonDisable: buttonDisable,\n        buttonTitle: Strings.continue,\n        buttonTitleStyle: styles.continue,\n        buttonStyle: [styles.continueButtonStyle, buttonDisable && {\n          backgroundColor: Colors[theme].blue50\n        }],\n        onBtnPress: function onBtnPress() {\n          navigation.navigate(navigationStrings.SCANID, {\n            amount: amount\n          });\n        }\n      })]\n    })]\n  });\n};\nexport default DepositCheckAmountScreen;","map":{"version":3,"names":["useRoute","React","useState","Text","TextInput","View","MaterialCommunityIcons","CustomButton","CustomHeader","navigationStrings","Strings","Colors","horizontalScale","moderateScale","styling","jsx","_jsx","jsxs","_jsxs","DepositCheckAmountScreen","_ref","_route$params","_Strings$amount","navigation","route","theme","params","styles","_useState","_useState2","_slicedToArray","buttonDisable","setButtonDisable","_useState3","_useState4","amount","setAmount","style","screen","children","headerTitle","depositCheck","onPressBack","goBack","card","toUpperCase","textInputParent","textInput","width","keyboardType","onChangeText","val","length","continueParent","depositCheckAmtNote","buttonTitle","continue","buttonTitleStyle","buttonStyle","continueButtonStyle","backgroundColor","blue50","onBtnPress","navigate","SCANID"],"sources":["/Users/dhavalpatel/Documents/ExpoApp/src/modules/DepositCheckAmount/DepositCheckAmountScreen.js"],"sourcesContent":["import {useRoute} from '@react-navigation/native';\nimport React, {useState} from 'react';\nimport {Text, TextInput, View} from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {CustomButton, CustomHeader} from '../../components';\nimport {navigationStrings} from '../../constants';\nimport {Strings} from '../../constants/Strings';\nimport {Colors, horizontalScale, moderateScale} from '../../theme';\nimport styling from './DepositCheckAmountStyle';\n\nconst DepositCheckAmountScreen = ({navigation}) => {\n  const route = useRoute();\n  const theme = route?.params?.theme;\n  const styles = styling(theme);\n\n  const [buttonDisable, setButtonDisable] = useState(true);\n  const [amount, setAmount] = useState(0);\n\n  return (\n    <View style={styles.screen}>\n      <CustomHeader\n        theme={theme}\n        headerTitle={Strings.depositCheck}\n        onPressBack={() => navigation.goBack()}\n      />\n      <View style={styles.card}>\n        <Text style={styles.amount}>{Strings.amount?.toUpperCase()}</Text>\n        <View style={styles.textInputParent}>\n          <Text style={styles.textInput}>$</Text>\n          <TextInput\n            style={[styles.textInput, {width: horizontalScale(290)}]}\n            keyboardType={'decimal-pad'}\n            onChangeText={val => {\n              setAmount(val);\n              if (val?.length > 0) {\n                setButtonDisable(false);\n              } else {\n                setButtonDisable(true);\n              }\n            }}\n          />\n        </View>\n      </View>\n      <View style={styles.continueParent}>\n        <Text style={styles.depositCheckAmtNote}>\n          {Strings.depositCheckAmtNote}\n        </Text>\n        <CustomButton\n          theme={theme}\n          buttonDisable={buttonDisable}\n          buttonTitle={Strings.continue}\n          buttonTitleStyle={styles.continue}\n          buttonStyle={[\n            styles.continueButtonStyle,\n            buttonDisable && {backgroundColor: Colors[theme].blue50},\n          ]}\n          onBtnPress={() => {\n            navigation.navigate(navigationStrings.SCANID,{amount:amount});\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default DepositCheckAmountScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}